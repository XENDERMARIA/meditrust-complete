{"id":"49000bca6cd3d30177b02203d51a247d","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/MedicineRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\n\r\ninterface IMediToken {\r\n    function mint(address to, uint256 amount) external;\r\n}\r\n\r\n/**\r\n * @title MedicineRegistry V2\r\n * @dev Enhanced registry with complete supply chain tracking\r\n */\r\ncontract MedicineRegistry is AccessControl, ReentrancyGuard {\r\n    using ECDSA for bytes32;\r\n    using MessageHashUtils for bytes32;\r\n\r\n    // Roles\r\n    bytes32 public constant MANUFACTURER_ROLE = keccak256(\"MANUFACTURER_ROLE\");\r\n    bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\");\r\n    \r\n    // Supply chain roles\r\n    enum ParticipantRole {\r\n        NONE,\r\n        TRANSPORTER,\r\n        SUPPLIER,\r\n        DISTRIBUTOR,\r\n        WHOLESALER,\r\n        RETAILER\r\n    }\r\n    \r\n    struct SupplyChainParticipant {\r\n        address participantAddress;\r\n        ParticipantRole role;\r\n        bool hasVerified;\r\n        uint256 verificationTimestamp;\r\n        string location; // Optional: GPS or location name\r\n        string notes;    // Optional: condition notes\r\n    }\r\n    \r\n    struct MedicineBatch {\r\n        address manufacturer;\r\n        string batchId;\r\n        string drugName;\r\n        string ingredients;\r\n        uint256 expiryDate;\r\n        uint256 registeredAt;\r\n        \r\n        // Supply chain tracking\r\n        SupplyChainParticipant[] supplyChain;\r\n        mapping(address => bool) isParticipant;\r\n        uint256 requiredVerifications;\r\n        uint256 completedVerifications;\r\n        \r\n        // Customer reward tracking\r\n        bool rewardClaimed;\r\n        address rewardClaimant;\r\n        uint256 rewardClaimedAt;\r\n        \r\n        // Batch status\r\n        bool exists;\r\n        bool isFullyVerified;\r\n    }\r\n    \r\n    // Storage\r\n    mapping(string => MedicineBatch) public batches;\r\n    mapping(address => string[]) public manufacturerBatches;\r\n    mapping(address => string[]) public participantBatches;\r\n    \r\n    // Token contract\r\n    IMediToken public mediToken;\r\n    \r\n    // Constants\r\n    uint256 public constant CUSTOMER_REWARD = 1 ether; // 1 MEDI token\r\n    uint256 public constant MAX_PARTICIPANTS = 20; // Prevent gas attacks\r\n    \r\n    // Events\r\n    event BatchRegistered(\r\n        string indexed batchId,\r\n        address indexed manufacturer,\r\n        uint256 participantCount,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event ParticipantAdded(\r\n        string indexed batchId,\r\n        address indexed participant,\r\n        ParticipantRole role\r\n    );\r\n    \r\n    event BatchVerified(\r\n        string indexed batchId,\r\n        address indexed verifier,\r\n        ParticipantRole role,\r\n        uint256 verificationNumber,\r\n        uint256 totalRequired\r\n    );\r\n    \r\n    event BatchFullyVerified(\r\n        string indexed batchId,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event RewardClaimed(\r\n        string indexed batchId,\r\n        address indexed customer,\r\n        uint256 amount,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event VerificationFailed(\r\n        string indexed batchId,\r\n        address indexed attemptedVerifier,\r\n        string reason\r\n    );\r\n    \r\n    constructor(address _mediToken) {\r\n        mediToken = IMediToken(_mediToken);\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(MANUFACTURER_ROLE, msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @dev Register a new medicine batch with supply chain participants\r\n     */\r\n    function registerBatchWithSupplyChain(\r\n        string memory _batchId,\r\n        string memory _drugName,\r\n        string memory _ingredients,\r\n        uint256 _expiryDate,\r\n        address[] memory _participants,\r\n        ParticipantRole[] memory _roles,\r\n        string[] memory _locations\r\n    ) external onlyRole(MANUFACTURER_ROLE) {\r\n        require(!batches[_batchId].exists, \"Batch already exists\");\r\n        require(_participants.length == _roles.length, \"Mismatched arrays\");\r\n        require(_participants.length == _locations.length, \"Mismatched locations\");\r\n        require(_participants.length <= MAX_PARTICIPANTS, \"Too many participants\");\r\n        require(_participants.length > 0, \"At least one participant required\");\r\n        require(_expiryDate > block.timestamp, \"Expiry date must be in future\");\r\n        \r\n        // Initialize batch\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        batch.manufacturer = msg.sender;\r\n        batch.batchId = _batchId;\r\n        batch.drugName = _drugName;\r\n        batch.ingredients = _ingredients;\r\n        batch.expiryDate = _expiryDate;\r\n        batch.registeredAt = block.timestamp;\r\n        batch.exists = true;\r\n        batch.requiredVerifications = _participants.length;\r\n        batch.completedVerifications = 0;\r\n        batch.isFullyVerified = false;\r\n        batch.rewardClaimed = false;\r\n        \r\n        // Add supply chain participants\r\n        for (uint256 i = 0; i < _participants.length; i++) {\r\n            require(_participants[i] != address(0), \"Invalid participant address\");\r\n            require(_roles[i] != ParticipantRole.NONE, \"Invalid role\");\r\n            require(!batch.isParticipant[_participants[i]], \"Duplicate participant\");\r\n            \r\n            batch.supplyChain.push(SupplyChainParticipant({\r\n                participantAddress: _participants[i],\r\n                role: _roles[i],\r\n                hasVerified: false,\r\n                verificationTimestamp: 0,\r\n                location: _locations[i],\r\n                notes: \"\"\r\n            }));\r\n            \r\n            batch.isParticipant[_participants[i]] = true;\r\n            participantBatches[_participants[i]].push(_batchId);\r\n            \r\n            emit ParticipantAdded(_batchId, _participants[i], _roles[i]);\r\n        }\r\n        \r\n        manufacturerBatches[msg.sender].push(_batchId);\r\n        \r\n        emit BatchRegistered(\r\n            _batchId,\r\n            msg.sender,\r\n            _participants.length,\r\n            block.timestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Supply chain participant verifies batch receipt\r\n     */\r\n    function verifyBatchAsParticipant(\r\n        string memory _batchId,\r\n        string memory _notes,\r\n        bytes memory _signature\r\n    ) external nonReentrant {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        require(batch.exists, \"Batch does not exist\");\r\n        require(!batch.rewardClaimed, \"Batch already delivered to customer\");\r\n        require(batch.isParticipant[msg.sender], \"Not authorized participant\");\r\n        \r\n        // Verify signature\r\n        bytes32 messageHash = keccak256(\r\n            abi.encodePacked(_batchId, msg.sender, block.timestamp)\r\n        );\r\n        bytes32 ethSignedMessageHash = messageHash.toEthSignedMessageHash();\r\n        address signer = ethSignedMessageHash.recover(_signature);\r\n        require(signer == msg.sender, \"Invalid signature\");\r\n        \r\n        // Find participant and update verification\r\n        bool verified = false;\r\n        ParticipantRole verifierRole = ParticipantRole.NONE;\r\n        \r\n        for (uint256 i = 0; i < batch.supplyChain.length; i++) {\r\n            if (batch.supplyChain[i].participantAddress == msg.sender) {\r\n                require(!batch.supplyChain[i].hasVerified, \"Already verified\");\r\n                \r\n                batch.supplyChain[i].hasVerified = true;\r\n                batch.supplyChain[i].verificationTimestamp = block.timestamp;\r\n                batch.supplyChain[i].notes = _notes;\r\n                \r\n                batch.completedVerifications++;\r\n                verifierRole = batch.supplyChain[i].role;\r\n                verified = true;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        require(verified, \"Verification failed\");\r\n        \r\n        emit BatchVerified(\r\n            _batchId,\r\n            msg.sender,\r\n            verifierRole,\r\n            batch.completedVerifications,\r\n            batch.requiredVerifications\r\n        );\r\n        \r\n        // Check if all verifications complete\r\n        if (batch.completedVerifications == batch.requiredVerifications) {\r\n            batch.isFullyVerified = true;\r\n            emit BatchFullyVerified(_batchId, block.timestamp);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Customer claims reward after all verifications complete\r\n     */\r\n    function claimCustomerReward(string memory _batchId) external nonReentrant {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        \r\n        require(batch.exists, \"Batch does not exist\");\r\n        require(batch.isFullyVerified, \"Supply chain verification incomplete\");\r\n        require(!batch.rewardClaimed, \"Reward already claimed\");\r\n        require(batch.expiryDate > block.timestamp, \"Medicine expired\");\r\n        \r\n        // Mark reward as claimed\r\n        batch.rewardClaimed = true;\r\n        batch.rewardClaimant = msg.sender;\r\n        batch.rewardClaimedAt = block.timestamp;\r\n        \r\n        // Mint reward tokens to customer\r\n        mediToken.mint(msg.sender, CUSTOMER_REWARD);\r\n        \r\n        emit RewardClaimed(\r\n            _batchId,\r\n            msg.sender,\r\n            CUSTOMER_REWARD,\r\n            block.timestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Check batch verification status\r\n     */\r\n    function getBatchStatus(string memory _batchId) \r\n        external \r\n        view \r\n        returns (\r\n            bool exists,\r\n            bool isFullyVerified,\r\n            bool rewardClaimed,\r\n            uint256 completedVerifications,\r\n            uint256 requiredVerifications,\r\n            address rewardClaimant\r\n        ) \r\n    {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        return (\r\n            batch.exists,\r\n            batch.isFullyVerified,\r\n            batch.rewardClaimed,\r\n            batch.completedVerifications,\r\n            batch.requiredVerifications,\r\n            batch.rewardClaimant\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get supply chain participants for a batch\r\n     */\r\n    function getSupplyChainParticipants(string memory _batchId) \r\n        external \r\n        view \r\n        returns (\r\n            address[] memory participants,\r\n            ParticipantRole[] memory roles,\r\n            bool[] memory hasVerified,\r\n            uint256[] memory timestamps\r\n        ) \r\n    {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        require(batch.exists, \"Batch does not exist\");\r\n        \r\n        uint256 length = batch.supplyChain.length;\r\n        participants = new address[](length);\r\n        roles = new ParticipantRole[](length);\r\n        hasVerified = new bool[](length);\r\n        timestamps = new uint256[](length);\r\n        \r\n        for (uint256 i = 0; i < length; i++) {\r\n            participants[i] = batch.supplyChain[i].participantAddress;\r\n            roles[i] = batch.supplyChain[i].role;\r\n            hasVerified[i] = batch.supplyChain[i].hasVerified;\r\n            timestamps[i] = batch.supplyChain[i].verificationTimestamp;\r\n        }\r\n        \r\n        return (participants, roles, hasVerified, timestamps);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get verification history with details\r\n     */\r\n    function getVerificationHistory(string memory _batchId)\r\n        external\r\n        view\r\n        returns (\r\n            address[] memory verifiers,\r\n            uint256[] memory timestamps,\r\n            string[] memory locations,\r\n            string[] memory notes\r\n        )\r\n    {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        require(batch.exists, \"Batch does not exist\");\r\n        \r\n        uint256 verifiedCount = 0;\r\n        for (uint256 i = 0; i < batch.supplyChain.length; i++) {\r\n            if (batch.supplyChain[i].hasVerified) {\r\n                verifiedCount++;\r\n            }\r\n        }\r\n        \r\n        verifiers = new address[](verifiedCount);\r\n        timestamps = new uint256[](verifiedCount);\r\n        locations = new string[](verifiedCount);\r\n        notes = new string[](verifiedCount);\r\n        \r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < batch.supplyChain.length; i++) {\r\n            if (batch.supplyChain[i].hasVerified) {\r\n                verifiers[index] = batch.supplyChain[i].participantAddress;\r\n                timestamps[index] = batch.supplyChain[i].verificationTimestamp;\r\n                locations[index] = batch.supplyChain[i].location;\r\n                notes[index] = batch.supplyChain[i].notes;\r\n                index++;\r\n            }\r\n        }\r\n        \r\n        return (verifiers, timestamps, locations, notes);\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if address can verify a batch\r\n     */\r\n    function canVerifyBatch(string memory _batchId, address _participant) \r\n        external \r\n        view \r\n        returns (bool canVerify, bool alreadyVerified) \r\n    {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        if (!batch.exists || !batch.isParticipant[_participant]) {\r\n            return (false, false);\r\n        }\r\n        \r\n        for (uint256 i = 0; i < batch.supplyChain.length; i++) {\r\n            if (batch.supplyChain[i].participantAddress == _participant) {\r\n                return (true, batch.supplyChain[i].hasVerified);\r\n            }\r\n        }\r\n        \r\n        return (false, false);\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency: Allow manufacturer to update participant\r\n     */\r\n    function updateParticipant(\r\n        string memory _batchId,\r\n        address _oldParticipant,\r\n        address _newParticipant\r\n    ) external onlyRole(MANUFACTURER_ROLE) {\r\n        MedicineBatch storage batch = batches[_batchId];\r\n        require(batch.exists, \"Batch does not exist\");\r\n        require(batch.manufacturer == msg.sender, \"Not batch owner\");\r\n        require(!batch.rewardClaimed, \"Batch already delivered\");\r\n        \r\n        for (uint256 i = 0; i < batch.supplyChain.length; i++) {\r\n            if (batch.supplyChain[i].participantAddress == _oldParticipant) {\r\n                require(!batch.supplyChain[i].hasVerified, \"Already verified\");\r\n                \r\n                batch.supplyChain[i].participantAddress = _newParticipant;\r\n                batch.isParticipant[_oldParticipant] = false;\r\n                batch.isParticipant[_newParticipant] = true;\r\n                \r\n                break;\r\n            }\r\n        }\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[409],"ERC165":[2390],"IAccessControl":[379],"IERC165":[2402]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":410,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":2391,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":409,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,2390,2402,379,409],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2389],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2389,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[409]},"id":410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":409,"linearizedBaseContracts":[409],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":390,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":386,"id":389,"nodeType":"Return","src":"728:17:2"}]},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":409,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":399,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":395,"id":398,"nodeType":"Return","src":"835:15:2"}]},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":393,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":409,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":407,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":404,"id":406,"nodeType":"Return","src":"945:8:2"}]},"id":408,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":409,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":410,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[461]},"id":462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"125:489:3","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":461,"linearizedBaseContracts":[461],"name":"Panic","nameLocation":"665:5:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"677:36:3","text":"@dev generic / unspecified error"},"id":416,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:3","nodeType":"VariableDeclaration","scope":461,"src":"718:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"764:37:3","text":"@dev used by the assert() builtin"},"id":420,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:3","nodeType":"VariableDeclaration","scope":461,"src":"806:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"851:41:3","text":"@dev arithmetic underflow or overflow"},"id":424,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:3","nodeType":"VariableDeclaration","scope":461,"src":"897:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:3","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"950:35:3","text":"@dev division or modulo by zero"},"id":428,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:3","nodeType":"VariableDeclaration","scope":461,"src":"990:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"1045:30:3","text":"@dev enum conversion error"},"id":432,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:3","nodeType":"VariableDeclaration","scope":461,"src":"1080:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:3","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"1140:36:3","text":"@dev invalid encoding in storage"},"id":436,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:3","nodeType":"VariableDeclaration","scope":461,"src":"1181:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"1242:24:3","text":"@dev empty array pop"},"id":440,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:3","nodeType":"VariableDeclaration","scope":461,"src":"1271:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1325:35:3","text":"@dev array out of bounds access"},"id":444,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:3","nodeType":"VariableDeclaration","scope":461,"src":"1365:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"1423:65:3","text":"@dev resource error (too large allocation or too large array)"},"id":448,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:3","nodeType":"VariableDeclaration","scope":461,"src":"1493:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:3","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1546:42:3","text":"@dev calling invalid internal function"},"id":452,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:3","nodeType":"VariableDeclaration","scope":461,"src":"1593:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:3","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":459,"nodeType":"Block","src":"1819:151:3","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:3","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:3"},"nodeType":"YulFunctionCall","src":"1868:24:3"},"nodeType":"YulExpressionStatement","src":"1868:24:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:3","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:3"},"nodeType":"YulFunctionCall","src":"1905:18:3"},"nodeType":"YulExpressionStatement","src":"1905:18:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:3","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:3"},"nodeType":"YulFunctionCall","src":"1936:18:3"},"nodeType":"YulExpressionStatement","src":"1936:18:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":455,"isOffset":false,"isSlot":false,"src":"1918:4:3","valueSize":1}],"flags":["memory-safe"],"id":458,"nodeType":"InlineAssembly","src":"1829:135:3"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"1658:113:3","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":460,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:3","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"code","nameLocation":"1799:4:3","nodeType":"VariableDeclaration","scope":460,"src":"1791:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:3"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"1819:0:3"},"scope":461,"src":"1776:194:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":462,"src":"657:1315:3","usedErrors":[],"usedEvents":[]}],"src":"99:1874:3"},"id":3},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[530]},"id":531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"135:894:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":530,"linearizedBaseContracts":[530],"name":"ReentrancyGuard","nameLocation":"1048:15:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":467,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:4","nodeType":"VariableDeclaration","scope":530,"src":"1818:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":470,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:4","nodeType":"VariableDeclaration","scope":530,"src":"1864:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":472,"mutability":"mutable","name":"_status","nameLocation":"1923:7:4","nodeType":"VariableDeclaration","scope":530,"src":"1907:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1937:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":475,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:4","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"2028:2:4"},"src":"1994:37:4"},{"body":{"id":482,"nodeType":"Block","src":"2051:38:4","statements":[{"expression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":478,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2061:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":479,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2071:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":481,"nodeType":"ExpressionStatement","src":"2061:21:4"}]},"id":483,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"2048:2:4"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"2051:0:4"},"scope":530,"src":"2037:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":493,"nodeType":"Block","src":"2490:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"2500:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"2500:21:4"},{"id":489,"nodeType":"PlaceholderStatement","src":"2531:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2542:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"ExpressionStatement","src":"2542:20:4"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"2095:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":494,"name":"nonReentrant","nameLocation":"2475:12:4","nodeType":"ModifierDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2487:2:4"},"src":"2466:103:4","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"2614:268:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":497,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2702:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":498,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"2713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"IfStatement","src":"2698:86:4","trueBody":{"id":503,"nodeType":"Block","src":"2722:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2743:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"RevertStatement","src":"2736:37:4"}]}},{"expression":{"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":505,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":506,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"2868:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"nodeType":"ExpressionStatement","src":"2858:17:4"}]},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:4","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2603:2:4"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"2614:0:4"},"scope":530,"src":"2575:307:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":517,"nodeType":"Block","src":"2926:170:4","statements":[{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":513,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3068:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":514,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3078:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"3068:21:4"}]},"id":518,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:4","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2915:2:4"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[],"src":"2926:0:4"},"scope":530,"src":"2888:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":528,"nodeType":"Block","src":"3339:42:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":525,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3367:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":523,"id":527,"nodeType":"Return","src":"3349:25:4"}]},"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"3102:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:4","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3307:2:4"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":529,"src":"3333:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":521,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:4"},"scope":530,"src":"3275:106:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":531,"src":"1030:2353:4","usedErrors":[475],"usedEvents":[]}],"src":"109:3275:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4023],"SafeCast":[5788],"SignedMath":[5932],"Strings":[1932]},"id":1933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":532,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1933,"sourceUnit":4024,"src":"127:37:5","symbolAliases":[{"foreign":{"id":533,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"135:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1933,"sourceUnit":5789,"src":"165:45:5","symbolAliases":[{"foreign":{"id":535,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"173:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1933,"sourceUnit":5933,"src":"211:49:5","symbolAliases":[{"foreign":{"id":537,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"219:10:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"262:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":1932,"linearizedBaseContracts":[1932],"name":"Strings","nameLocation":"305:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":541,"libraryName":{"id":540,"name":"SafeCast","nameLocations":["325:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":5788,"src":"325:8:5"},"nodeType":"UsingForDirective","src":"319:21:5"},{"constant":true,"id":544,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:5","nodeType":"VariableDeclaration","scope":1932,"src":"346:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":542,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":547,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:5","nodeType":"VariableDeclaration","scope":1932,"src":"408:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":545,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":583,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:5","nodeType":"VariableDeclaration","scope":1932,"src":"456:302:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:5","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:5","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:5","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:5","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:5","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:5","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:5","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:5","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:5","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:5","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:5","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:5","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:5","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:5","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:5","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"778:81:5","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":590,"name":"StringsInsufficientHexLength","nameLocation":"870:28:5","nodeType":"ErrorDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"value","nameLocation":"907:5:5","nodeType":"VariableDeclaration","scope":590,"src":"899:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"length","nameLocation":"922:6:5","nodeType":"VariableDeclaration","scope":590,"src":"914:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:5"},"src":"864:66:5"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"936:108:5","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":593,"name":"StringsInvalidChar","nameLocation":"1055:18:5","nodeType":"ErrorDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"1073:2:5"},"src":"1049:27:5"},{"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"1082:84:5","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":596,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:5","nodeType":"ErrorDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"1204:2:5"},"src":"1171:36:5"},{"body":{"id":643,"nodeType":"Block","src":"1379:563:5","statements":[{"id":642,"nodeType":"UncheckedBlock","src":"1389:547:5","statements":[{"assignments":[605],"declarations":[{"constant":false,"id":605,"mutability":"mutable","name":"length","nameLocation":"1421:6:5","nodeType":"VariableDeclaration","scope":642,"src":"1413:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":612,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1441:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":606,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"1430:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4023_$","typeString":"type(library Math)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3855,"src":"1430:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:5"},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:5","nodeType":"VariableDeclaration","scope":642,"src":"1465:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":613,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"id":617,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"1499:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":615,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:5"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:5","nodeType":"VariableDeclaration","scope":642,"src":"1520:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":622,"nodeType":"VariableDeclarationStatement","src":"1520:11:5"},{"AST":{"nodeType":"YulBlock","src":"1570:69:5","statements":[{"nodeType":"YulAssignment","src":"1588:37:5","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:5"},"nodeType":"YulFunctionCall","src":"1599:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:5"},"nodeType":"YulFunctionCall","src":"1595:30:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":614,"isOffset":false,"isSlot":false,"src":"1603:6:5","valueSize":1},{"declaration":605,"isOffset":false,"isSlot":false,"src":"1618:6:5","valueSize":1},{"declaration":621,"isOffset":false,"isSlot":false,"src":"1588:3:5","valueSize":1}],"flags":["memory-safe"],"id":623,"nodeType":"InlineAssembly","src":"1545:94:5"},{"body":{"id":638,"nodeType":"Block","src":"1665:234:5","statements":[{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:5","subExpression":{"id":625,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"1683:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"1683:5:5"},{"AST":{"nodeType":"YulBlock","src":"1731:86:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:5"},"nodeType":"YulFunctionCall","src":"1771:14:5"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:5"},"nodeType":"YulFunctionCall","src":"1766:32:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:5"},"nodeType":"YulFunctionCall","src":"1753:46:5"},"nodeType":"YulExpressionStatement","src":"1753:46:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":544,"isOffset":false,"isSlot":false,"src":"1787:10:5","valueSize":1},{"declaration":621,"isOffset":false,"isSlot":false,"src":"1761:3:5","valueSize":1},{"declaration":599,"isOffset":false,"isSlot":false,"src":"1775:5:5","valueSize":1}],"flags":["memory-safe"],"id":628,"nodeType":"InlineAssembly","src":"1706:111:5"},{"expression":{"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1834:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":632,"nodeType":"ExpressionStatement","src":"1834:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1867:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":637,"nodeType":"IfStatement","src":"1863:21:5","trueBody":{"id":636,"nodeType":"Break","src":"1879:5:5"}}]},"condition":{"hexValue":"74727565","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":639,"nodeType":"WhileStatement","src":"1652:247:5"},{"expression":{"id":640,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"1919:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":603,"id":641,"nodeType":"Return","src":"1912:13:5"}]}]},"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"1213:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:5","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"value","nameLocation":"1334:5:5","nodeType":"VariableDeclaration","scope":644,"src":"1326:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:5"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"1364:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":601,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:5"},"scope":1932,"src":"1308:634:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"2118:92:5","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2149:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:5","trueExpression":{"hexValue":"2d","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2195:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":662,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2180:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5932_$","typeString":"type(library SignedMath)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5931,"src":"2180:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":661,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2171:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":652,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:5","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":651,"id":668,"nodeType":"Return","src":"2128:75:5"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"1948:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":670,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:5","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"value","nameLocation":"2073:5:5","nodeType":"VariableDeclaration","scope":670,"src":"2066:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":646,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:5"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"2103:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":649,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:5"},"scope":1932,"src":"2042:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"2389:100:5","statements":[{"id":688,"nodeType":"UncheckedBlock","src":"2399:84:5","statements":[{"expression":{"arguments":[{"id":679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"2442:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"2461:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":680,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"2449:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4023_$","typeString":"type(library Math)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3966,"src":"2449:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":678,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[690,773,793],"referencedDeclaration":773,"src":"2430:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":677,"id":687,"nodeType":"Return","src":"2423:49:5"}]}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"2216:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"value","nameLocation":"2344:5:5","nodeType":"VariableDeclaration","scope":690,"src":"2336:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:5"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"2374:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":675,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:5"},"scope":1932,"src":"2315:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"2702:435:5","statements":[{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:5","nodeType":"VariableDeclaration","scope":772,"src":"2712:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":703,"initialValue":{"id":702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"2733:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:5"},{"assignments":[705],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:5","nodeType":"VariableDeclaration","scope":772,"src":"2748:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":704,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":709,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2784:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:5"},{"expression":{"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":715,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2805:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":717,"indexExpression":{"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":720,"nodeType":"ExpressionStatement","src":"2805:15:5"},{"expression":{"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":721,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2830:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":723,"indexExpression":{"hexValue":"31","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":726,"nodeType":"ExpressionStatement","src":"2830:15:5"},{"body":{"id":755,"nodeType":"Block","src":"2900:95:5","statements":[{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":741,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2914:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":743,"indexExpression":{"id":742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2921:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":744,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2926:10:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":748,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"2937:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":750,"nodeType":"ExpressionStatement","src":"2914:40:5"},{"expression":{"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":751,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"2968:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":754,"nodeType":"ExpressionStatement","src":"2968:16:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2888:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"initializationExpression":{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"i","nameLocation":"2868:1:5","nodeType":"VariableDeclaration","scope":756,"src":"2860:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":734,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":730,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2876:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:5"},"loopExpression":{"expression":{"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:5","subExpression":{"id":738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2897:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"nodeType":"ExpressionStatement","src":"2895:3:5"},"nodeType":"ForStatement","src":"2855:140:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":757,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3008:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"3004:96:5","trueBody":{"id":765,"nodeType":"Block","src":"3025:75:5","statements":[{"errorCall":{"arguments":[{"id":761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3075:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":762,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3082:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":760,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3046:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"RevertStatement","src":"3039:50:5"}]}},{"expression":{"arguments":[{"id":769,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3123:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":767,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:5","typeDescriptions":{}}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":699,"id":771,"nodeType":"Return","src":"3109:21:5"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"2495:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:5","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"value","nameLocation":"2641:5:5","nodeType":"VariableDeclaration","scope":773,"src":"2633:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"length","nameLocation":"2656:6:5","nodeType":"VariableDeclaration","scope":773,"src":"2648:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:5"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"2687:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":697,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:5"},"scope":1932,"src":"2612:525:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"3369:75:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":786,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"3414:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":784,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:5","typeDescriptions":{}}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:5","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":789,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3422:14:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":781,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[690,773,793],"referencedDeclaration":773,"src":"3386:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":780,"id":791,"nodeType":"Return","src":"3379:58:5"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"3143:148:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:5","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"addr","nameLocation":"3325:4:5","nodeType":"VariableDeclaration","scope":793,"src":"3317:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:5"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"3354:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":778,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:5"},"scope":1932,"src":"3296:148:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"3701:642:5","statements":[{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:5","nodeType":"VariableDeclaration","scope":857,"src":"3711:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":801,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":809,"initialValue":{"arguments":[{"arguments":[{"id":806,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"3751:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":805,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[690,773,793],"referencedDeclaration":793,"src":"3739:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":803,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:5","typeDescriptions":{}}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:5"},{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:5","nodeType":"VariableDeclaration","scope":857,"src":"3842:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"nodeType":"VariableDeclarationStatement","src":"3842:17:5"},{"AST":{"nodeType":"YulBlock","src":"3894:78:5","statements":[{"nodeType":"YulAssignment","src":"3908:54:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:5","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:5","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:5"},"nodeType":"YulFunctionCall","src":"3939:17:5"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:5","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:5"},"nodeType":"YulFunctionCall","src":"3929:32:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:5"},"nodeType":"YulFunctionCall","src":"3921:41:5"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":802,"isOffset":false,"isSlot":false,"src":"3943:6:5","valueSize":1},{"declaration":811,"isOffset":false,"isSlot":false,"src":"3908:9:5","valueSize":1}],"flags":["memory-safe"],"id":813,"nodeType":"InlineAssembly","src":"3869:103:5"},{"body":{"id":850,"nodeType":"Block","src":"4015:291:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"4121:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:5","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":831,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4150:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":833,"indexExpression":{"id":832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"4157:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":829,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:5","typeDescriptions":{}}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":845,"nodeType":"IfStatement","src":"4117:150:5","trueBody":{"id":844,"nodeType":"Block","src":"4167:100:5","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":838,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4235:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":840,"indexExpression":{"id":839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"4242:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":843,"nodeType":"ExpressionStatement","src":"4235:17:5"}]}},{"expression":{"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":846,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"4280:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":849,"nodeType":"ExpressionStatement","src":"4280:15:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"4003:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":851,"initializationExpression":{"assignments":[815],"declarations":[{"constant":false,"id":815,"mutability":"mutable","name":"i","nameLocation":"3995:1:5","nodeType":"VariableDeclaration","scope":851,"src":"3987:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":817,"initialValue":{"hexValue":"3431","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:5","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:5"},"loopExpression":{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:5","subExpression":{"id":821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"4012:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ExpressionStatement","src":"4010:3:5"},"nodeType":"ForStatement","src":"3982:324:5"},{"expression":{"arguments":[{"id":854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4329:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":852,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:5","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":800,"id":856,"nodeType":"Return","src":"4315:21:5"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"3450:165:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:5","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"addr","nameLocation":"3657:4:5","nodeType":"VariableDeclaration","scope":858,"src":"3649:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:5"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"3686:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":798,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:5"},"scope":1932,"src":"3620:723:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"4498:104:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4521:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":868,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:5","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:5","memberName":"length","nodeType":"MemberAccess","src":"4515:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":875,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4540:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:5","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:5","memberName":"length","nodeType":"MemberAccess","src":"4534:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4569:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":880,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:5","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":879,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4592:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":886,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:5","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":885,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":867,"id":893,"nodeType":"Return","src":"4508:87:5"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"4349:66:5","text":" @dev Returns true if the two strings are equal."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:5","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"a","nameLocation":"4449:1:5","nodeType":"VariableDeclaration","scope":895,"src":"4435:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":860,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"b","nameLocation":"4466:1:5","nodeType":"VariableDeclaration","scope":895,"src":"4452:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":862,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:5"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":895,"src":"4492:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":865,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:5"},"scope":1932,"src":"4420:182:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"4899:64:5","statements":[{"expression":{"arguments":[{"id":904,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"4926:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"4942:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":906,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:5","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:5","memberName":"length","nodeType":"MemberAccess","src":"4936:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[914,945],"referencedDeclaration":945,"src":"4916:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":902,"id":912,"nodeType":"Return","src":"4909:47:5"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"4608:214:5","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":914,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:5","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"input","nameLocation":"4860:5:5","nodeType":"VariableDeclaration","scope":914,"src":"4846:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":897,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:5"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"4890:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:5"},"scope":1932,"src":"4827:136:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"5368:153:5","statements":[{"assignments":[927,929],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"success","nameLocation":"5384:7:5","nodeType":"VariableDeclaration","scope":944,"src":"5379:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":926,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"5401:5:5","nodeType":"VariableDeclaration","scope":944,"src":"5393:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":935,"initialValue":{"arguments":[{"id":931,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5423:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":932,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"5430:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":933,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"5437:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":930,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[966,1003],"referencedDeclaration":1003,"src":"5410:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:5"},{"condition":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:5","subExpression":{"id":936,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5456:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"5451:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":938,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5472:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"RevertStatement","src":"5465:27:5"}},{"expression":{"id":942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5509:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":925,"id":943,"nodeType":"Return","src":"5502:12:5"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"4969:294:5","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:5","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"input","nameLocation":"5301:5:5","nodeType":"VariableDeclaration","scope":945,"src":"5287:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":916,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"begin","nameLocation":"5316:5:5","nodeType":"VariableDeclaration","scope":945,"src":"5308:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"end","nameLocation":"5331:3:5","nodeType":"VariableDeclaration","scope":945,"src":"5323:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:5"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":945,"src":"5359:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:5"},"scope":1932,"src":"5268:253:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":965,"nodeType":"Block","src":"5842:83:5","statements":[{"expression":{"arguments":[{"id":956,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5888:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":960,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5904:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":958,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:5","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:5","memberName":"length","nodeType":"MemberAccess","src":"5898:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":955,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5859:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":954,"id":964,"nodeType":"Return","src":"5852:66:5"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"5527:215:5","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":966,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:5","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"input","nameLocation":"5783:5:5","nodeType":"VariableDeclaration","scope":966,"src":"5769:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":947,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:5"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"success","nameLocation":"5818:7:5","nodeType":"VariableDeclaration","scope":966,"src":"5813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":950,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"value","nameLocation":"5835:5:5","nodeType":"VariableDeclaration","scope":966,"src":"5827:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:5"},"scope":1932,"src":"5747:178:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1002,"nodeType":"Block","src":"6327:144:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"6341:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":983,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6353:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":981,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:5","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:5","memberName":"length","nodeType":"MemberAccess","src":"6347:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":987,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6370:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":988,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"6378:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"IfStatement","src":"6337:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":979,"id":994,"nodeType":"Return","src":"6383:17:5"}},{"expression":{"arguments":[{"id":997,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6446:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":998,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6453:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"6460:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":996,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6417:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":979,"id":1001,"nodeType":"Return","src":"6410:54:5"}]},"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"5931:238:5","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:5","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"input","nameLocation":"6219:5:5","nodeType":"VariableDeclaration","scope":1003,"src":"6205:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":968,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"begin","nameLocation":"6242:5:5","nodeType":"VariableDeclaration","scope":1003,"src":"6234:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"end","nameLocation":"6265:3:5","nodeType":"VariableDeclaration","scope":1003,"src":"6257:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:5"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"success","nameLocation":"6303:7:5","nodeType":"VariableDeclaration","scope":1003,"src":"6298:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":975,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"value","nameLocation":"6320:5:5","nodeType":"VariableDeclaration","scope":1003,"src":"6312:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:5"},"scope":1932,"src":"6174:297:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"6874:347:5","statements":[{"assignments":[1018],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:5","nodeType":"VariableDeclaration","scope":1072,"src":"6884:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1023,"initialValue":{"arguments":[{"id":1021,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6912:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1019,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:5","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:5"},{"assignments":[1025],"declarations":[{"constant":false,"id":1025,"mutability":"mutable","name":"result","nameLocation":"6937:6:5","nodeType":"VariableDeclaration","scope":1072,"src":"6929:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1027,"initialValue":{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:5"},{"body":{"id":1066,"nodeType":"Block","src":"6995:189:5","statements":[{"assignments":[1039],"declarations":[{"constant":false,"id":1039,"mutability":"mutable","name":"chr","nameLocation":"7015:3:5","nodeType":"VariableDeclaration","scope":1066,"src":"7009:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1038,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1044,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7064:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7072:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"7041:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1041,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:5","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1040,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7021:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"7094:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"nodeType":"IfStatement","src":"7090:30:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1016,"id":1056,"nodeType":"Return","src":"7103:17:5"}},{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7134:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1061,"nodeType":"ExpressionStatement","src":"7134:12:5"},{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7160:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1063,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"7170:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ExpressionStatement","src":"7160:13:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6981:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1033,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6985:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"initializationExpression":{"assignments":[1029],"declarations":[{"constant":false,"id":1029,"mutability":"mutable","name":"i","nameLocation":"6970:1:5","nodeType":"VariableDeclaration","scope":1067,"src":"6962:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1031,"initialValue":{"id":1030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6974:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:5"},"loopExpression":{"expression":{"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:5","subExpression":{"id":1035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6992:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1037,"nodeType":"ExpressionStatement","src":"6990:3:5"},"nodeType":"ForStatement","src":"6957:227:5"},{"expression":{"components":[{"hexValue":"74727565","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7207:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1016,"id":1071,"nodeType":"Return","src":"7193:21:5"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"6477:224:5","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:5","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"input","nameLocation":"6767:5:5","nodeType":"VariableDeclaration","scope":1073,"src":"6753:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1005,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"begin","nameLocation":"6790:5:5","nodeType":"VariableDeclaration","scope":1073,"src":"6782:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"end","nameLocation":"6813:3:5","nodeType":"VariableDeclaration","scope":1073,"src":"6805:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:5"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"success","nameLocation":"6850:7:5","nodeType":"VariableDeclaration","scope":1073,"src":"6845:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1012,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"value","nameLocation":"6867:5:5","nodeType":"VariableDeclaration","scope":1073,"src":"6859:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:5"},"scope":1932,"src":"6706:515:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1091,"nodeType":"Block","src":"7518:63:5","statements":[{"expression":{"arguments":[{"id":1082,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7544:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1086,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7560:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:5","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:5","memberName":"length","nodeType":"MemberAccess","src":"7554:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1092,1123],"referencedDeclaration":1123,"src":"7535:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1080,"id":1090,"nodeType":"Return","src":"7528:46:5"}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"7227:216:5","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:5","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"input","nameLocation":"7480:5:5","nodeType":"VariableDeclaration","scope":1092,"src":"7466:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1075,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:5"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1092,"src":"7510:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1078,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:5"},"scope":1932,"src":"7448:133:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1122,"nodeType":"Block","src":"7986:151:5","statements":[{"assignments":[1105,1107],"declarations":[{"constant":false,"id":1105,"mutability":"mutable","name":"success","nameLocation":"8002:7:5","nodeType":"VariableDeclaration","scope":1122,"src":"7997:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"value","nameLocation":"8018:5:5","nodeType":"VariableDeclaration","scope":1122,"src":"8011:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1106,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1113,"initialValue":{"arguments":[{"id":1109,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"8039:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1110,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"8046:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1111,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"8053:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1144,1186],"referencedDeclaration":1186,"src":"8027:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:5"},{"condition":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:5","subExpression":{"id":1114,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"8072:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"8067:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1116,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8088:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"RevertStatement","src":"8081:27:5"}},{"expression":{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8125:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1103,"id":1121,"nodeType":"Return","src":"8118:12:5"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"7587:296:5","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:5","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"input","nameLocation":"7920:5:5","nodeType":"VariableDeclaration","scope":1123,"src":"7906:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1094,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"begin","nameLocation":"7935:5:5","nodeType":"VariableDeclaration","scope":1123,"src":"7927:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"end","nameLocation":"7950:3:5","nodeType":"VariableDeclaration","scope":1123,"src":"7942:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:5"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"7978:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1101,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:5"},"scope":1932,"src":"7888:249:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"8528:82:5","statements":[{"expression":{"arguments":[{"id":1134,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8573:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1138,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8589:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1136,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:5","typeDescriptions":{}}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:5","memberName":"length","nodeType":"MemberAccess","src":"8583:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1133,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"8545:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1132,"id":1142,"nodeType":"Return","src":"8538:65:5"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"8143:287:5","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:5","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"input","nameLocation":"8470:5:5","nodeType":"VariableDeclaration","scope":1144,"src":"8456:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1125,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:5"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"success","nameLocation":"8505:7:5","nodeType":"VariableDeclaration","scope":1144,"src":"8500:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1128,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"value","nameLocation":"8521:5:5","nodeType":"VariableDeclaration","scope":1144,"src":"8514:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1130,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:5"},"scope":1932,"src":"8435:175:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1149,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:5","nodeType":"VariableDeclaration","scope":1932,"src":"8616:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1185,"nodeType":"Block","src":"9132:143:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"9146:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"9158:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:5","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:5","memberName":"length","nodeType":"MemberAccess","src":"9152:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"9175:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1171,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"9183:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1178,"nodeType":"IfStatement","src":"9142:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1162,"id":1177,"nodeType":"Return","src":"9188:17:5"}},{"expression":{"arguments":[{"id":1180,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"9250:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1181,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"9257:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"9264:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"9222:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1162,"id":1184,"nodeType":"Return","src":"9215:53:5"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"8673:303:5","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:5","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"input","nameLocation":"9025:5:5","nodeType":"VariableDeclaration","scope":1186,"src":"9011:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1151,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"begin","nameLocation":"9048:5:5","nodeType":"VariableDeclaration","scope":1186,"src":"9040:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"end","nameLocation":"9071:3:5","nodeType":"VariableDeclaration","scope":1186,"src":"9063:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:5"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"success","nameLocation":"9109:7:5","nodeType":"VariableDeclaration","scope":1186,"src":"9104:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1158,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"9125:5:5","nodeType":"VariableDeclaration","scope":1186,"src":"9118:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1160,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:5"},"scope":1932,"src":"8981:294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"9675:812:5","statements":[{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:5","nodeType":"VariableDeclaration","scope":1306,"src":"9685:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1200,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1206,"initialValue":{"arguments":[{"id":1204,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9713:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:5","typeDescriptions":{}}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:5"},{"assignments":[1208],"declarations":[{"constant":false,"id":1208,"mutability":"mutable","name":"sign","nameLocation":"9783:4:5","nodeType":"VariableDeclaration","scope":1306,"src":"9776:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1207,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1224,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"9790:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1210,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"9799:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1219,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"9847:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1220,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"9855:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"9824:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1216,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:5","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:5","trueExpression":{"arguments":[{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1212,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:5","typeDescriptions":{}}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:5"},{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:5","nodeType":"VariableDeclaration","scope":1306,"src":"9943:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1225,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1233,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"9963:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1228,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:5","typeDescriptions":{}}},"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:5"},{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:5","nodeType":"VariableDeclaration","scope":1306,"src":"9992:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1242,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"10012:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1237,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:5","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:5"},{"assignments":[1244],"declarations":[{"constant":false,"id":1244,"mutability":"mutable","name":"offset","nameLocation":"10049:6:5","nodeType":"VariableDeclaration","scope":1306,"src":"10041:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"10059:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1246,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10075:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"10058:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:5"},{"assignments":[1253,1255],"declarations":[{"constant":false,"id":1253,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:5","nodeType":"VariableDeclaration","scope":1306,"src":"10109:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1252,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:5","nodeType":"VariableDeclaration","scope":1306,"src":"10126:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1263,"initialValue":{"arguments":[{"id":1257,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"10159:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"10166:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1259,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10174:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1261,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"10182:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1256,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[966,1003],"referencedDeclaration":1003,"src":"10146:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1264,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"10201:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"10215:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1266,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"10226:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"10343:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1285,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10357:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"10373:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1288,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"10385:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1199,"id":1303,"nodeType":"Return","src":"10463:17:5"},"id":1304,"nodeType":"IfStatement","src":"10339:141:5","trueBody":{"id":1299,"nodeType":"Block","src":"10401:56:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1293,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:5","memberName":"min","nodeType":"MemberAccess","src":"10429:16:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1199,"id":1298,"nodeType":"Return","src":"10415:31:5"}]}},"id":1305,"nodeType":"IfStatement","src":"10197:283:5","trueBody":{"id":1283,"nodeType":"Block","src":"10242:91:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1270,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10270:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1278,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"10312:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1276,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:5","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:5","trueExpression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:5","subExpression":{"arguments":[{"id":1273,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"10293:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1271,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:5","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1199,"id":1282,"nodeType":"Return","src":"10256:66:5"}]}}]},"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"9281:223:5","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:5","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"input","nameLocation":"9569:5:5","nodeType":"VariableDeclaration","scope":1307,"src":"9555:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1188,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"begin","nameLocation":"9592:5:5","nodeType":"VariableDeclaration","scope":1307,"src":"9584:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"end","nameLocation":"9615:3:5","nodeType":"VariableDeclaration","scope":1307,"src":"9607:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:5"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"success","nameLocation":"9652:7:5","nodeType":"VariableDeclaration","scope":1307,"src":"9647:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1195,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"value","nameLocation":"9668:5:5","nodeType":"VariableDeclaration","scope":1307,"src":"9661:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1197,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:5"},"scope":1932,"src":"9509:978:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1325,"nodeType":"Block","src":"10832:67:5","statements":[{"expression":{"arguments":[{"id":1316,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10862:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1320,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10878:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1318,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:5","typeDescriptions":{}}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:5","memberName":"length","nodeType":"MemberAccess","src":"10872:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1315,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1326,1357],"referencedDeclaration":1357,"src":"10849:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1314,"id":1324,"nodeType":"Return","src":"10842:50:5"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"10493:259:5","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:5","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"input","nameLocation":"10793:5:5","nodeType":"VariableDeclaration","scope":1326,"src":"10779:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1309,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:5"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"10823:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:5"},"scope":1932,"src":"10757:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"11320:156:5","statements":[{"assignments":[1339,1341],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"success","nameLocation":"11336:7:5","nodeType":"VariableDeclaration","scope":1356,"src":"11331:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1338,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"11353:5:5","nodeType":"VariableDeclaration","scope":1356,"src":"11345:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1347,"initialValue":{"arguments":[{"id":1343,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11378:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1344,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"11385:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1345,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"11392:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1342,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1378,1415],"referencedDeclaration":1415,"src":"11362:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:5"},{"condition":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:5","subExpression":{"id":1348,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"11411:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1353,"nodeType":"IfStatement","src":"11406:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"11427:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"RevertStatement","src":"11420:27:5"}},{"expression":{"id":1354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"11464:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1337,"id":1355,"nodeType":"Return","src":"11457:12:5"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"10905:307:5","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:5","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"input","nameLocation":"11253:5:5","nodeType":"VariableDeclaration","scope":1357,"src":"11239:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1328,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"begin","nameLocation":"11268:5:5","nodeType":"VariableDeclaration","scope":1357,"src":"11260:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"end","nameLocation":"11283:3:5","nodeType":"VariableDeclaration","scope":1357,"src":"11275:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:5"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"11311:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:5"},"scope":1932,"src":"11217:259:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1377,"nodeType":"Block","src":"11803:86:5","statements":[{"expression":{"arguments":[{"id":1368,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"11852:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1372,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"11868:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1370,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:5","typeDescriptions":{}}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:5","memberName":"length","nodeType":"MemberAccess","src":"11862:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1367,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"11820:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1366,"id":1376,"nodeType":"Return","src":"11813:69:5"}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"11482:218:5","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1378,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:5","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"input","nameLocation":"11744:5:5","nodeType":"VariableDeclaration","scope":1378,"src":"11730:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1359,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:5"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"success","nameLocation":"11779:7:5","nodeType":"VariableDeclaration","scope":1378,"src":"11774:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1362,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"value","nameLocation":"11796:5:5","nodeType":"VariableDeclaration","scope":1378,"src":"11788:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:5"},"scope":1932,"src":"11705:184:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"12297:147:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12311:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1395,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"12323:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:5","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:5","memberName":"length","nodeType":"MemberAccess","src":"12317:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"12340:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1400,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12348:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"IfStatement","src":"12307:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1391,"id":1406,"nodeType":"Return","src":"12353:17:5"}},{"expression":{"arguments":[{"id":1409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"12419:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1410,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"12426:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1411,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12433:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1408,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"12387:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1391,"id":1413,"nodeType":"Return","src":"12380:57:5"}]},"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"11895:241:5","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:5","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"input","nameLocation":"12189:5:5","nodeType":"VariableDeclaration","scope":1415,"src":"12175:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"begin","nameLocation":"12212:5:5","nodeType":"VariableDeclaration","scope":1415,"src":"12204:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"end","nameLocation":"12235:3:5","nodeType":"VariableDeclaration","scope":1415,"src":"12227:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:5"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"success","nameLocation":"12273:7:5","nodeType":"VariableDeclaration","scope":1415,"src":"12268:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1387,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"value","nameLocation":"12290:5:5","nodeType":"VariableDeclaration","scope":1415,"src":"12282:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:5"},"scope":1932,"src":"12141:303:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1517,"nodeType":"Block","src":"12853:881:5","statements":[{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:5","nodeType":"VariableDeclaration","scope":1517,"src":"12863:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1429,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1435,"initialValue":{"arguments":[{"id":1433,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"12891:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:5","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:5"},{"assignments":[1437],"declarations":[{"constant":false,"id":1437,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:5","nodeType":"VariableDeclaration","scope":1517,"src":"12945:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1436,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1457,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"12963:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"12969:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1447,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"13013:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1448,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"13021:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1446,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12990:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1444,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:5","typeDescriptions":{}}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1451,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:5","typeDescriptions":{}}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:5"},{"assignments":[1459],"declarations":[{"constant":false,"id":1459,"mutability":"mutable","name":"offset","nameLocation":"13133:6:5","nodeType":"VariableDeclaration","scope":1517,"src":"13125:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1465,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1460,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"13142:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"13142:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:5"},{"assignments":[1467],"declarations":[{"constant":false,"id":1467,"mutability":"mutable","name":"result","nameLocation":"13183:6:5","nodeType":"VariableDeclaration","scope":1517,"src":"13175:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1469,"initialValue":{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:5"},{"body":{"id":1511,"nodeType":"Block","src":"13250:447:5","statements":[{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"chr","nameLocation":"13270:3:5","nodeType":"VariableDeclaration","scope":1511,"src":"13264:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1482,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1493,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1488,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"13319:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"13327:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"13296:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1485,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:5","typeDescriptions":{}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1484,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"13276:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1494,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"13349:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"IfStatement","src":"13345:31:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1428,"id":1500,"nodeType":"Return","src":"13359:17:5"}},{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"13390:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"13390:12:5"},{"id":1510,"nodeType":"UncheckedBlock","src":"13416:271:5","statements":[{"expression":{"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"13659:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1507,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"13669:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1509,"nodeType":"ExpressionStatement","src":"13659:13:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"13236:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1477,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"13240:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1512,"initializationExpression":{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"i","nameLocation":"13216:1:5","nodeType":"VariableDeclaration","scope":1512,"src":"13208:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1475,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1472,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"13220:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1473,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"13228:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:5"},"loopExpression":{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:5","subExpression":{"id":1479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"13247:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"13245:3:5"},"nodeType":"ForStatement","src":"13203:494:5"},{"expression":{"components":[{"hexValue":"74727565","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"13720:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1428,"id":1516,"nodeType":"Return","src":"13706:21:5"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"12450:227:5","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:5","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"input","nameLocation":"12746:5:5","nodeType":"VariableDeclaration","scope":1518,"src":"12732:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1417,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"begin","nameLocation":"12769:5:5","nodeType":"VariableDeclaration","scope":1518,"src":"12761:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"end","nameLocation":"12792:3:5","nodeType":"VariableDeclaration","scope":1518,"src":"12784:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:5"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"success","nameLocation":"12829:7:5","nodeType":"VariableDeclaration","scope":1518,"src":"12824:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"value","nameLocation":"12846:5:5","nodeType":"VariableDeclaration","scope":1518,"src":"12838:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:5"},"scope":1932,"src":"12682:1052:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1536,"nodeType":"Block","src":"14032:67:5","statements":[{"expression":{"arguments":[{"id":1527,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"14062:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1531,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"14078:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1529,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:5","typeDescriptions":{}}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:5","memberName":"length","nodeType":"MemberAccess","src":"14072:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1526,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1537,1568],"referencedDeclaration":1568,"src":"14049:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1525,"id":1535,"nodeType":"Return","src":"14042:50:5"}]},"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"13740:212:5","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:5","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"input","nameLocation":"13993:5:5","nodeType":"VariableDeclaration","scope":1537,"src":"13979:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1520,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:5"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1537,"src":"14023:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:5"},"scope":1932,"src":"13957:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1567,"nodeType":"Block","src":"14472:165:5","statements":[{"assignments":[1550,1552],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"success","nameLocation":"14488:7:5","nodeType":"VariableDeclaration","scope":1567,"src":"14483:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1549,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"value","nameLocation":"14505:5:5","nodeType":"VariableDeclaration","scope":1567,"src":"14497:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1558,"initialValue":{"arguments":[{"id":1554,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"14530:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1555,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"14537:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1556,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"14544:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1553,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1589,1693],"referencedDeclaration":1693,"src":"14514:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:5"},{"condition":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:5","subExpression":{"id":1559,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"14563:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"14558:50:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1561,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"14579:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"RevertStatement","src":"14572:36:5"}},{"expression":{"id":1565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"14625:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1548,"id":1566,"nodeType":"Return","src":"14618:12:5"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"14105:259:5","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1568,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:5","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"input","nameLocation":"14405:5:5","nodeType":"VariableDeclaration","scope":1568,"src":"14391:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1539,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"begin","nameLocation":"14420:5:5","nodeType":"VariableDeclaration","scope":1568,"src":"14412:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"end","nameLocation":"14435:3:5","nodeType":"VariableDeclaration","scope":1568,"src":"14427:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:5"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1568,"src":"14463:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:5"},"scope":1932,"src":"14369:268:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1588,"nodeType":"Block","src":"14944:70:5","statements":[{"expression":{"arguments":[{"id":1579,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"14977:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1583,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"14993:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:5","typeDescriptions":{}}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:5","memberName":"length","nodeType":"MemberAccess","src":"14987:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1578,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1589,1693],"referencedDeclaration":1693,"src":"14961:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1577,"id":1587,"nodeType":"Return","src":"14954:53:5"}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"14643:198:5","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:5","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"input","nameLocation":"14885:5:5","nodeType":"VariableDeclaration","scope":1589,"src":"14871:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:5"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"success","nameLocation":"14920:7:5","nodeType":"VariableDeclaration","scope":1589,"src":"14915:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1573,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"value","nameLocation":"14937:5:5","nodeType":"VariableDeclaration","scope":1589,"src":"14929:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:5"},"scope":1932,"src":"14846:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"15407:733:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"15421:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1606,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"15433:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:5","typeDescriptions":{}}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:5","memberName":"length","nodeType":"MemberAccess","src":"15427:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"15450:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1611,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"15458:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1621,"nodeType":"IfStatement","src":"15417:72:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:5","typeDescriptions":{}}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1602,"id":1620,"nodeType":"Return","src":"15463:26:5"}},{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:5","nodeType":"VariableDeclaration","scope":1692,"src":"15500:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1646,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"15518:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"15524:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1635,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"15574:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1633,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:5","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1637,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"15582:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1632,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"15545:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1630,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:5","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1640,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:5","typeDescriptions":{}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:5"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:5","nodeType":"VariableDeclaration","scope":1692,"src":"15686:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:5","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1650,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"15716:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"15716:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"15803:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1658,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"15809:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1660,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"15818:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1690,"nodeType":"Block","src":"16083:51:5","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:5","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1602,"id":1689,"nodeType":"Return","src":"16097:26:5"}]},"id":1691,"nodeType":"IfStatement","src":"15799:335:5","trueBody":{"id":1682,"nodeType":"Block","src":"15834:243:5","statements":[{"assignments":[1663,1665],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"s","nameLocation":"15955:1:5","nodeType":"VariableDeclaration","scope":1682,"src":"15950:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1662,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"v","nameLocation":"15966:1:5","nodeType":"VariableDeclaration","scope":1682,"src":"15958:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"initialValue":{"arguments":[{"id":1667,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"16003:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1668,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"16010:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1669,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"16017:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1666,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"15971:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:5"},{"expression":{"components":[{"id":1672,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"16043:1:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1677,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"16062:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1675,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:5","typeDescriptions":{}}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:5","typeDescriptions":{}}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1602,"id":1681,"nodeType":"Return","src":"16035:31:5"}]}}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"15020:226:5","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:5","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"input","nameLocation":"15299:5:5","nodeType":"VariableDeclaration","scope":1693,"src":"15285:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"begin","nameLocation":"15322:5:5","nodeType":"VariableDeclaration","scope":1693,"src":"15314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"end","nameLocation":"15345:3:5","nodeType":"VariableDeclaration","scope":1693,"src":"15337:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:5"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"success","nameLocation":"15383:7:5","nodeType":"VariableDeclaration","scope":1693,"src":"15378:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1598,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"value","nameLocation":"15400:5:5","nodeType":"VariableDeclaration","scope":1693,"src":"15392:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:5"},"scope":1932,"src":"15251:889:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1752,"nodeType":"Block","src":"16209:461:5","statements":[{"assignments":[1701],"declarations":[{"constant":false,"id":1701,"mutability":"mutable","name":"value","nameLocation":"16225:5:5","nodeType":"VariableDeclaration","scope":1752,"src":"16219:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1700,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1706,"initialValue":{"arguments":[{"id":1704,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"16239:3:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1702,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:5","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:5"},{"id":1749,"nodeType":"UncheckedBlock","src":"16403:238:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16431:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:5","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16445:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:5","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16491:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16505:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:5","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16552:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16566:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:5","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1741,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:5","memberName":"max","nodeType":"MemberAccess","src":"16615:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1699,"id":1745,"nodeType":"Return","src":"16608:22:5"},"id":1746,"nodeType":"IfStatement","src":"16548:82:5","trueBody":{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16578:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:5","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1739,"nodeType":"ExpressionStatement","src":"16578:11:5"}},"id":1747,"nodeType":"IfStatement","src":"16487:143:5","trueBody":{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16518:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:5","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1728,"nodeType":"ExpressionStatement","src":"16518:11:5"}},"id":1748,"nodeType":"IfStatement","src":"16427:203:5","trueBody":{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16457:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:5","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1717,"nodeType":"ExpressionStatement","src":"16457:11:5"}}]},{"expression":{"id":1750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"16658:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1699,"id":1751,"nodeType":"Return","src":"16651:12:5"}]},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:5","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"chr","nameLocation":"16175:3:5","nodeType":"VariableDeclaration","scope":1753,"src":"16168:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1694,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:5"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"16202:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1697,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:5"},"scope":1932,"src":"16146:524:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1918,"nodeType":"Block","src":"17336:1331:5","statements":[{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:5","nodeType":"VariableDeclaration","scope":1918,"src":"17346:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1761,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1767,"initialValue":{"arguments":[{"id":1765,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"17374:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1763,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:5","typeDescriptions":{}}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:5"},{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"output","nameLocation":"17403:6:5","nodeType":"VariableDeclaration","scope":1918,"src":"17390:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1777,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1773,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"17426:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:5","memberName":"length","nodeType":"MemberAccess","src":"17426:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:5"},{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:5","nodeType":"VariableDeclaration","scope":1918,"src":"17473:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1781,"initialValue":{"hexValue":"30","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:5"},{"body":{"id":1910,"nodeType":"Block","src":"17548:854:5","statements":[{"assignments":[1793],"declarations":[{"constant":false,"id":1793,"mutability":"mutable","name":"char","nameLocation":"17569:4:5","nodeType":"VariableDeclaration","scope":1910,"src":"17562:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1792,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1801,"initialValue":{"arguments":[{"arguments":[{"id":1797,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"17606:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"17614:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1796,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"17583:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1794,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:5","typeDescriptions":{}}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:5"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"17637:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":1806,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"17672:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1804,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:5","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1908,"nodeType":"Block","src":"18330:62:5","statements":[{"expression":{"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1901,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"18348:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1904,"indexExpression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:5","subExpression":{"id":1902,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"18355:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1905,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"18373:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1907,"nodeType":"ExpressionStatement","src":"18348:29:5"}]},"id":1909,"nodeType":"IfStatement","src":"17631:761:5","trueBody":{"id":1900,"nodeType":"Block","src":"17687:637:5","statements":[{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1815,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"17705:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1818,"indexExpression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:5","subExpression":{"id":1816,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"17712:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1821,"nodeType":"ExpressionStatement","src":"17705:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"17756:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"17825:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"17894:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"17963:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"18032:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"18101:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:5","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"18171:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1893,"nodeType":"IfStatement","src":"18167:143:5","trueBody":{"id":1892,"nodeType":"Block","src":"18185:125:5","statements":[{"expression":{"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1885,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"18263:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1888,"indexExpression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:5","subExpression":{"id":1886,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"18270:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1891,"nodeType":"ExpressionStatement","src":"18263:28:5"}]}},"id":1894,"nodeType":"IfStatement","src":"18097:213:5","trueBody":{"expression":{"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1875,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"18115:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1878,"indexExpression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:5","subExpression":{"id":1876,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"18122:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1881,"nodeType":"ExpressionStatement","src":"18115:29:5"}},"id":1895,"nodeType":"IfStatement","src":"18028:282:5","trueBody":{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1865,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"18046:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1868,"indexExpression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:5","subExpression":{"id":1866,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"18053:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1871,"nodeType":"ExpressionStatement","src":"18046:28:5"}},"id":1896,"nodeType":"IfStatement","src":"17959:351:5","trueBody":{"expression":{"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1855,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"17977:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1858,"indexExpression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:5","subExpression":{"id":1856,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"17984:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1861,"nodeType":"ExpressionStatement","src":"17977:28:5"}},"id":1897,"nodeType":"IfStatement","src":"17890:420:5","trueBody":{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1845,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"17908:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1848,"indexExpression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:5","subExpression":{"id":1846,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"17915:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1851,"nodeType":"ExpressionStatement","src":"17908:28:5"}},"id":1898,"nodeType":"IfStatement","src":"17821:489:5","trueBody":{"expression":{"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1835,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"17839:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1838,"indexExpression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:5","subExpression":{"id":1836,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"17846:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1841,"nodeType":"ExpressionStatement","src":"17839:28:5"}},"id":1899,"nodeType":"IfStatement","src":"17752:558:5","trueBody":{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1825,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"17770:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1828,"indexExpression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:5","subExpression":{"id":1826,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"17777:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1831,"nodeType":"ExpressionStatement","src":"17770:28:5"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"17524:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1786,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"17528:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:5","memberName":"length","nodeType":"MemberAccess","src":"17528:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1911,"initializationExpression":{"assignments":[1783],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"i","nameLocation":"17521:1:5","nodeType":"VariableDeclaration","scope":1911,"src":"17513:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"nodeType":"VariableDeclarationStatement","src":"17513:9:5"},"loopExpression":{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:5","subExpression":{"id":1789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"17545:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"nodeType":"ExpressionStatement","src":"17543:3:5"},"nodeType":"ForStatement","src":"17508:894:5"},{"AST":{"nodeType":"YulBlock","src":"18500:129:5","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:5"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:5"},"nodeType":"YulFunctionCall","src":"18514:28:5"},"nodeType":"YulExpressionStatement","src":"18514:28:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:5","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:5","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:5","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:5"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:5","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:5"},"nodeType":"YulFunctionCall","src":"18594:21:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:5"},"nodeType":"YulFunctionCall","src":"18587:29:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:5"},"nodeType":"YulFunctionCall","src":"18580:37:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:5"},"nodeType":"YulFunctionCall","src":"18568:50:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:5"},"nodeType":"YulFunctionCall","src":"18555:64:5"},"nodeType":"YulExpressionStatement","src":"18555:64:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1769,"isOffset":false,"isSlot":false,"src":"18521:6:5","valueSize":1},{"declaration":1769,"isOffset":false,"isSlot":false,"src":"18572:6:5","valueSize":1},{"declaration":1779,"isOffset":false,"isSlot":false,"src":"18529:12:5","valueSize":1},{"declaration":1779,"isOffset":false,"isSlot":false,"src":"18598:12:5","valueSize":1}],"flags":["memory-safe"],"id":1912,"nodeType":"InlineAssembly","src":"18475:154:5"},{"expression":{"arguments":[{"id":1915,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"18653:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1913,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:5","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1760,"id":1917,"nodeType":"Return","src":"18639:21:5"}]},"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"16676:576:5","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":1919,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:5","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"input","nameLocation":"17291:5:5","nodeType":"VariableDeclaration","scope":1919,"src":"17277:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1755,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:5"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"17321:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1758,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:5"},"scope":1932,"src":"17257:1410:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"19052:225:5","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:5","statements":[{"nodeType":"YulAssignment","src":"19215:46:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:5"},"nodeType":"YulFunctionCall","src":"19234:17:5"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:5"},"nodeType":"YulFunctionCall","src":"19230:30:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:5"},"nodeType":"YulFunctionCall","src":"19224:37:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1922,"isOffset":false,"isSlot":false,"src":"19238:6:5","valueSize":1},{"declaration":1924,"isOffset":false,"isSlot":false,"src":"19253:6:5","valueSize":1},{"declaration":1927,"isOffset":false,"isSlot":false,"src":"19215:5:5","valueSize":1}],"flags":["memory-safe"],"id":1929,"nodeType":"InlineAssembly","src":"19176:95:5"}]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"18673:268:5","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:5","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:5","nodeType":"VariableDeclaration","scope":1931,"src":"18978:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"offset","nameLocation":"19007:6:5","nodeType":"VariableDeclaration","scope":1931,"src":"18999:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:5"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"value","nameLocation":"19045:5:5","nodeType":"VariableDeclaration","scope":1931,"src":"19037:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:5"},"scope":1932,"src":"18946:331:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1933,"src":"297:18982:5","usedErrors":[590,593,596],"usedEvents":[]}],"src":"101:19179:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2280]},"id":2281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1934,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"138:205:6","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2280,"linearizedBaseContracts":[2280],"name":"ECDSA","nameLocation":"352:5:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1940,"members":[{"id":1936,"name":"NoError","nameLocation":"392:7:6","nodeType":"EnumValue","src":"392:7:6"},{"id":1937,"name":"InvalidSignature","nameLocation":"409:16:6","nodeType":"EnumValue","src":"409:16:6"},{"id":1938,"name":"InvalidSignatureLength","nameLocation":"435:22:6","nodeType":"EnumValue","src":"435:22:6"},{"id":1939,"name":"InvalidSignatureS","nameLocation":"467:17:6","nodeType":"EnumValue","src":"467:17:6"}],"name":"RecoverError","nameLocation":"369:12:6","nodeType":"EnumDefinition","src":"364:126:6"},{"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"496:63:6","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1943,"name":"ECDSAInvalidSignature","nameLocation":"570:21:6","nodeType":"ErrorDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"591:2:6"},"src":"564:30:6"},{"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"600:60:6","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1948,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:6","nodeType":"ErrorDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"length","nameLocation":"707:6:6","nodeType":"VariableDeclaration","scope":1948,"src":"699:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:6"},"src":"665:50:6"},{"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"721:85:6","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1953,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:6","nodeType":"ErrorDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"s","nameLocation":"848:1:6","nodeType":"VariableDeclaration","scope":1953,"src":"840:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:6"},"src":"811:40:6"},{"body":{"id":2005,"nodeType":"Block","src":"2285:622:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1968,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2299:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:6","memberName":"length","nodeType":"MemberAccess","src":"2299:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2003,"nodeType":"Block","src":"2793:108:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:6","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1994,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"2827:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:6","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"2827:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1998,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2872:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:6","memberName":"length","nodeType":"MemberAccess","src":"2872:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:6","typeDescriptions":{}}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1967,"id":2002,"nodeType":"Return","src":"2807:83:6"}]},"id":2004,"nodeType":"IfStatement","src":"2295:606:6","trueBody":{"id":1989,"nodeType":"Block","src":"2323:464:6","statements":[{"assignments":[1973],"declarations":[{"constant":false,"id":1973,"mutability":"mutable","name":"r","nameLocation":"2345:1:6","nodeType":"VariableDeclaration","scope":1989,"src":"2337:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1974,"nodeType":"VariableDeclarationStatement","src":"2337:9:6"},{"assignments":[1976],"declarations":[{"constant":false,"id":1976,"mutability":"mutable","name":"s","nameLocation":"2368:1:6","nodeType":"VariableDeclaration","scope":1989,"src":"2360:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1977,"nodeType":"VariableDeclarationStatement","src":"2360:9:6"},{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"v","nameLocation":"2389:1:6","nodeType":"VariableDeclaration","scope":1989,"src":"2383:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1978,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1980,"nodeType":"VariableDeclarationStatement","src":"2383:7:6"},{"AST":{"nodeType":"YulBlock","src":"2560:171:6","statements":[{"nodeType":"YulAssignment","src":"2578:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:6"},"nodeType":"YulFunctionCall","src":"2589:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:6"},"nodeType":"YulFunctionCall","src":"2583:27:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:6"}]},{"nodeType":"YulAssignment","src":"2627:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:6"},"nodeType":"YulFunctionCall","src":"2638:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:6"},"nodeType":"YulFunctionCall","src":"2632:27:6"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:6"}]},{"nodeType":"YulAssignment","src":"2676:41:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:6","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:6"},"nodeType":"YulFunctionCall","src":"2695:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:6"},"nodeType":"YulFunctionCall","src":"2689:27:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:6"},"nodeType":"YulFunctionCall","src":"2681:36:6"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1973,"isOffset":false,"isSlot":false,"src":"2578:1:6","valueSize":1},{"declaration":1976,"isOffset":false,"isSlot":false,"src":"2627:1:6","valueSize":1},{"declaration":1958,"isOffset":false,"isSlot":false,"src":"2593:9:6","valueSize":1},{"declaration":1958,"isOffset":false,"isSlot":false,"src":"2642:9:6","valueSize":1},{"declaration":1958,"isOffset":false,"isSlot":false,"src":"2699:9:6","valueSize":1},{"declaration":1979,"isOffset":false,"isSlot":false,"src":"2676:1:6","valueSize":1}],"flags":["memory-safe"],"id":1981,"nodeType":"InlineAssembly","src":"2535:196:6"},{"expression":{"arguments":[{"id":1983,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"2762:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1984,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2768:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1985,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"2771:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1986,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"2774:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1982,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2006,2086,2194],"referencedDeclaration":2194,"src":"2751:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1967,"id":1988,"nodeType":"Return","src":"2744:32:6"}]}}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"857:1267:6","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:6","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"hash","nameLocation":"2166:4:6","nodeType":"VariableDeclaration","scope":2006,"src":"2158:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"signature","nameLocation":"2193:9:6","nodeType":"VariableDeclaration","scope":2006,"src":"2180:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:6"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:6","nodeType":"VariableDeclaration","scope":2006,"src":"2232:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"err","nameLocation":"2264:3:6","nodeType":"VariableDeclaration","scope":2006,"src":"2251:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1963,"nodeType":"UserDefinedTypeName","pathNode":{"id":1962,"name":"RecoverError","nameLocations":["2251:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"2251:12:6"},"referencedDeclaration":1940,"src":"2251:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:6","nodeType":"VariableDeclaration","scope":2006,"src":"2269:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:6"},"scope":2280,"src":"2129:778:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"3801:168:6","statements":[{"assignments":[2017,2020,2022],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:6","nodeType":"VariableDeclaration","scope":2035,"src":"3812:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"error","nameLocation":"3844:5:6","nodeType":"VariableDeclaration","scope":2035,"src":"3831:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2019,"nodeType":"UserDefinedTypeName","pathNode":{"id":2018,"name":"RecoverError","nameLocations":["3831:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"3831:12:6"},"referencedDeclaration":1940,"src":"3831:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:6","nodeType":"VariableDeclaration","scope":2035,"src":"3851:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2027,"initialValue":{"arguments":[{"id":2024,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3882:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2025,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3888:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2023,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2006,2086,2194],"referencedDeclaration":2006,"src":"3871:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:6"},{"expression":{"arguments":[{"id":2029,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3920:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"id":2030,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3927:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2028,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"3908:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1940_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2032,"nodeType":"ExpressionStatement","src":"3908:28:6"},{"expression":{"id":2033,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3953:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2034,"nodeType":"Return","src":"3946:16:6"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"2913:796:6","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:6","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"hash","nameLocation":"3739:4:6","nodeType":"VariableDeclaration","scope":2036,"src":"3731:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"signature","nameLocation":"3758:9:6","nodeType":"VariableDeclaration","scope":2036,"src":"3745:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2010,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:6"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2036,"src":"3792:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:6"},"scope":2280,"src":"3714:255:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2085,"nodeType":"Block","src":"4348:342:6","statements":[{"id":2084,"nodeType":"UncheckedBlock","src":"4358:326:6","statements":[{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"s","nameLocation":"4390:1:6","nodeType":"VariableDeclaration","scope":2084,"src":"4382:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2061,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"4394:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:6","typeDescriptions":{}}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:6"},{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"v","nameLocation":"4591:1:6","nodeType":"VariableDeclaration","scope":2084,"src":"4585:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2062,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2076,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2068,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"4610:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:6","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:6","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2064,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:6","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:6"},{"expression":{"arguments":[{"id":2078,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"4659:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2079,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4665:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2080,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"4668:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2081,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"4671:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2077,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2006,2086,2194],"referencedDeclaration":2194,"src":"4648:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2052,"id":2083,"nodeType":"Return","src":"4641:32:6"}]}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"3975:205:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:6","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"hash","nameLocation":"4222:4:6","nodeType":"VariableDeclaration","scope":2086,"src":"4214:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"r","nameLocation":"4244:1:6","nodeType":"VariableDeclaration","scope":2086,"src":"4236:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"vs","nameLocation":"4263:2:6","nodeType":"VariableDeclaration","scope":2086,"src":"4255:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:6"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:6","nodeType":"VariableDeclaration","scope":2086,"src":"4295:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"err","nameLocation":"4327:3:6","nodeType":"VariableDeclaration","scope":2086,"src":"4314:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2048,"nodeType":"UserDefinedTypeName","pathNode":{"id":2047,"name":"RecoverError","nameLocations":["4314:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"4314:12:6"},"referencedDeclaration":1940,"src":"4314:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:6","nodeType":"VariableDeclaration","scope":2086,"src":"4332:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:6"},"scope":2280,"src":"4185:505:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2118,"nodeType":"Block","src":"4903:164:6","statements":[{"assignments":[2099,2102,2104],"declarations":[{"constant":false,"id":2099,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:6","nodeType":"VariableDeclaration","scope":2118,"src":"4914:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"error","nameLocation":"4946:5:6","nodeType":"VariableDeclaration","scope":2118,"src":"4933:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2101,"nodeType":"UserDefinedTypeName","pathNode":{"id":2100,"name":"RecoverError","nameLocations":["4933:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"4933:12:6"},"referencedDeclaration":1940,"src":"4933:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:6","nodeType":"VariableDeclaration","scope":2118,"src":"4953:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[{"id":2106,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4984:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2107,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"4990:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2108,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"4993:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2105,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2006,2086,2194],"referencedDeclaration":2086,"src":"4973:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:6"},{"expression":{"arguments":[{"id":2112,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"5018:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"id":2113,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"5025:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2111,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5006:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1940_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"5006:28:6"},{"expression":{"id":2116,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"5051:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2097,"id":2117,"nodeType":"Return","src":"5044:16:6"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"4696:116:6","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:6","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"hash","nameLocation":"4842:4:6","nodeType":"VariableDeclaration","scope":2119,"src":"4834:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"r","nameLocation":"4856:1:6","nodeType":"VariableDeclaration","scope":2119,"src":"4848:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"vs","nameLocation":"4867:2:6","nodeType":"VariableDeclaration","scope":2119,"src":"4859:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:6"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"4894:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:6"},"scope":2280,"src":"4817:250:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"5382:1372:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2140,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"6278:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:6","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2154,"nodeType":"IfStatement","src":"6266:164:6","trueBody":{"id":2153,"nodeType":"Block","src":"6351:79:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:6","typeDescriptions":{}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2148,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6385:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:6","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"6385:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"id":2150,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"6417:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2137,"id":2152,"nodeType":"Return","src":"6365:54:6"}]}},{"assignments":[2156],"declarations":[{"constant":false,"id":2156,"mutability":"mutable","name":"signer","nameLocation":"6532:6:6","nodeType":"VariableDeclaration","scope":2193,"src":"6524:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2163,"initialValue":{"arguments":[{"id":2158,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"6551:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2159,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"6557:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2160,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"6560:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2161,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"6563:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2157,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:6","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"6579:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:6","typeDescriptions":{}}},"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"6575:113:6","trueBody":{"id":2182,"nodeType":"Block","src":"6601:87:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:6","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2174,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6635:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:6","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"6635:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:6","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2137,"id":2181,"nodeType":"Return","src":"6615:62:6"}]}},{"expression":{"components":[{"id":2184,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"6706:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2185,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6714:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:6","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"6714:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:6","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2137,"id":2192,"nodeType":"Return","src":"6698:49:6"}]},"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"5073:125:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:6","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"hash","nameLocation":"5240:4:6","nodeType":"VariableDeclaration","scope":2194,"src":"5232:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"v","nameLocation":"5260:1:6","nodeType":"VariableDeclaration","scope":2194,"src":"5254:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2123,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"r","nameLocation":"5279:1:6","nodeType":"VariableDeclaration","scope":2194,"src":"5271:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"s","nameLocation":"5298:1:6","nodeType":"VariableDeclaration","scope":2194,"src":"5290:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:6"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:6","nodeType":"VariableDeclaration","scope":2194,"src":"5329:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"err","nameLocation":"5361:3:6","nodeType":"VariableDeclaration","scope":2194,"src":"5348:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2133,"nodeType":"UserDefinedTypeName","pathNode":{"id":2132,"name":"RecoverError","nameLocations":["5348:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"5348:12:6"},"referencedDeclaration":1940,"src":"5348:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:6","nodeType":"VariableDeclaration","scope":2194,"src":"5366:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:6"},"scope":2280,"src":"5203:1551:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"6981:166:6","statements":[{"assignments":[2209,2212,2214],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:6","nodeType":"VariableDeclaration","scope":2229,"src":"6992:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"error","nameLocation":"7024:5:6","nodeType":"VariableDeclaration","scope":2229,"src":"7011:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"RecoverError","nameLocations":["7011:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"7011:12:6"},"referencedDeclaration":1940,"src":"7011:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:6","nodeType":"VariableDeclaration","scope":2229,"src":"7031:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2221,"initialValue":{"arguments":[{"id":2216,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7062:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2217,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"7068:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2218,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"7071:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2219,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7074:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2215,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2006,2086,2194],"referencedDeclaration":2194,"src":"7051:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1940_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:6"},{"expression":{"arguments":[{"id":2223,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7098:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},{"id":2224,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7105:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2222,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"7086:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1940_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"7086:28:6"},{"expression":{"id":2227,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"7131:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2207,"id":2228,"nodeType":"Return","src":"7124:16:6"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"6760:122:6","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:6","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"hash","nameLocation":"6912:4:6","nodeType":"VariableDeclaration","scope":2230,"src":"6904:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"v","nameLocation":"6924:1:6","nodeType":"VariableDeclaration","scope":2230,"src":"6918:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2198,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"6935:1:6","nodeType":"VariableDeclaration","scope":2230,"src":"6927:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"s","nameLocation":"6946:1:6","nodeType":"VariableDeclaration","scope":2230,"src":"6938:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:6"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"6972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:6"},"scope":2280,"src":"6887:260:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2278,"nodeType":"Block","src":"7352:460:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2239,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"7366:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2240,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7375:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:6","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"7375:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"7462:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2246,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7471:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:6","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"7471:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"7567:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2254,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7576:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:6","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1938,"src":"7576:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2265,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"7701:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2266,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7710:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1940_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:6","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"7710:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2274,"nodeType":"IfStatement","src":"7697:109:6","trueBody":{"id":2273,"nodeType":"Block","src":"7742:64:6","statements":[{"errorCall":{"arguments":[{"id":2270,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"7786:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2269,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7763:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2272,"nodeType":"RevertStatement","src":"7756:39:6"}]}},"id":2275,"nodeType":"IfStatement","src":"7563:243:6","trueBody":{"id":2264,"nodeType":"Block","src":"7613:78:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2260,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"7670:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:6","typeDescriptions":{}}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2257,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"7634:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"RevertStatement","src":"7627:53:6"}]}},"id":2276,"nodeType":"IfStatement","src":"7458:348:6","trueBody":{"id":2252,"nodeType":"Block","src":"7502:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2249,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"7523:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2251,"nodeType":"RevertStatement","src":"7516:30:6"}]}},"id":2277,"nodeType":"IfStatement","src":"7362:444:6","trueBody":{"id":2244,"nodeType":"Block","src":"7397:55:6","statements":[{"functionReturnParameters":2238,"id":2243,"nodeType":"Return","src":"7411:7:6"}]}}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"7153:122:6","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2279,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:6","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"error","nameLocation":"7314:5:6","nodeType":"VariableDeclaration","scope":2279,"src":"7301:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2233,"nodeType":"UserDefinedTypeName","pathNode":{"id":2232,"name":"RecoverError","nameLocations":["7301:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1940,"src":"7301:12:6"},"referencedDeclaration":1940,"src":"7301:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1940","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:6","nodeType":"VariableDeclaration","scope":2279,"src":"7321:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:6"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[],"src":"7352:0:6"},"scope":2280,"src":"7280:532:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2281,"src":"344:7470:6","usedErrors":[1943,1948,1953],"usedEvents":[]}],"src":"112:7703:6"},"id":6},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2366],"Strings":[1932]},"id":2367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2282,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2367,"sourceUnit":1933,"src":"149:39:7","symbolAliases":[{"foreign":{"id":2283,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"157:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"190:330:7","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2366,"linearizedBaseContracts":[2366],"name":"MessageHashUtils","nameLocation":"529:16:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2294,"nodeType":"Block","src":"1339:341:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:7","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:7","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:7"},"nodeType":"YulFunctionCall","src":"1388:48:7"},"nodeType":"YulExpressionStatement","src":"1388:48:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:7","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:7"},"nodeType":"YulFunctionCall","src":"1490:25:7"},"nodeType":"YulExpressionStatement","src":"1490:25:7"},{"nodeType":"YulAssignment","src":"1569:31:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:7","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:7"},"nodeType":"YulFunctionCall","src":"1579:21:7"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2291,"isOffset":false,"isSlot":false,"src":"1569:6:7","valueSize":1},{"declaration":2288,"isOffset":false,"isSlot":false,"src":"1503:11:7","valueSize":1}],"flags":["memory-safe"],"id":2293,"nodeType":"InlineAssembly","src":"1349:325:7"}]},"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"552:690:7","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:7","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:7","nodeType":"VariableDeclaration","scope":2295,"src":"1279:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:7"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"digest","nameLocation":"1331:6:7","nodeType":"VariableDeclaration","scope":2295,"src":"1323:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:7"},"scope":2366,"src":"1247:433:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"2257:143:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2312,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2366:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:7","memberName":"length","nodeType":"MemberAccess","src":"2366:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2310,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"2349:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1932_$","typeString":"type(library Strings)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":644,"src":"2349:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2308,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:7","typeDescriptions":{}}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2316,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2384:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:7","typeDescriptions":{}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:7","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2303,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2302,"id":2319,"nodeType":"Return","src":"2267:126:7"}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"1686:480:7","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:7","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"message","nameLocation":"2216:7:7","nodeType":"VariableDeclaration","scope":2321,"src":"2203:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2297,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:7"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"2248:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:7"},"scope":2366,"src":"2171:229:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"2854:80:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2335,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2910:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2336,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2921:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2332,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2331,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2330,"id":2339,"nodeType":"Return","src":"2864:63:7"}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"2406:332:7","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:7","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"validator","nameLocation":"2792:9:7","nodeType":"VariableDeclaration","scope":2341,"src":"2784:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"data","nameLocation":"2816:4:7","nodeType":"VariableDeclaration","scope":2341,"src":"2803:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2325,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:7"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"2845:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:7"},"scope":2366,"src":"2743:191:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"3216:216:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:7","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:7","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:7"},"nodeType":"YulFunctionCall","src":"3265:24:7"},"nodeType":"YulExpressionStatement","src":"3265:24:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:7","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:7","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:7"},"nodeType":"YulFunctionCall","src":"3315:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:7"},"nodeType":"YulFunctionCall","src":"3302:32:7"},"nodeType":"YulExpressionStatement","src":"3302:32:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:7","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:7"},"nodeType":"YulFunctionCall","src":"3347:25:7"},"nodeType":"YulExpressionStatement","src":"3347:25:7"},{"nodeType":"YulAssignment","src":"3385:31:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:7","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:7"},"nodeType":"YulFunctionCall","src":"3395:21:7"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2349,"isOffset":false,"isSlot":false,"src":"3385:6:7","valueSize":1},{"declaration":2346,"isOffset":false,"isSlot":false,"src":"3360:11:7","valueSize":1},{"declaration":2344,"isOffset":false,"isSlot":false,"src":"3323:9:7","valueSize":1}],"flags":["memory-safe"],"id":2351,"nodeType":"InlineAssembly","src":"3226:200:7"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"2940:129:7","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:7","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"validator","nameLocation":"3132:9:7","nodeType":"VariableDeclaration","scope":2353,"src":"3124:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:7","nodeType":"VariableDeclaration","scope":2353,"src":"3151:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:7"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"digest","nameLocation":"3208:6:7","nodeType":"VariableDeclaration","scope":2353,"src":"3200:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:7"},"scope":2366,"src":"3074:358:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"3983:265:7","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:7"},"nodeType":"YulFunctionCall","src":"4043:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:7"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:7","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:7"},"nodeType":"YulFunctionCall","src":"4067:23:7"},"nodeType":"YulExpressionStatement","src":"4067:23:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:7","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:7"},"nodeType":"YulFunctionCall","src":"4110:14:7"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:7"},"nodeType":"YulFunctionCall","src":"4103:39:7"},"nodeType":"YulExpressionStatement","src":"4103:39:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:7","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:7"},"nodeType":"YulFunctionCall","src":"4162:14:7"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:7"},"nodeType":"YulFunctionCall","src":"4155:34:7"},"nodeType":"YulExpressionStatement","src":"4155:34:7"},{"nodeType":"YulAssignment","src":"4202:30:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:7","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:7"},"nodeType":"YulFunctionCall","src":"4212:20:7"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2361,"isOffset":false,"isSlot":false,"src":"4202:6:7","valueSize":1},{"declaration":2356,"isOffset":false,"isSlot":false,"src":"4126:15:7","valueSize":1},{"declaration":2358,"isOffset":false,"isSlot":false,"src":"4178:10:7","valueSize":1}],"flags":["memory-safe"],"id":2363,"nodeType":"InlineAssembly","src":"3993:249:7"}]},"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"3438:431:7","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:7","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:7","nodeType":"VariableDeclaration","scope":2365,"src":"3899:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:7","nodeType":"VariableDeclaration","scope":2365,"src":"3924:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:7"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"digest","nameLocation":"3975:6:7","nodeType":"VariableDeclaration","scope":2365,"src":"3967:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:7"},"scope":2366,"src":"3874:374:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2367,"src":"521:3729:7","usedErrors":[],"usedEvents":[]}],"src":"123:4128:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2390],"IERC165":[2402]},"id":2391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2391,"sourceUnit":2403,"src":"140:38:8","symbolAliases":[{"foreign":{"id":2369,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2372,"name":"IERC165","nameLocations":["688:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2402,"src":"688:7:8"},"id":2373,"nodeType":"InheritanceSpecifier","src":"688:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"180:479:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2390,"linearizedBaseContracts":[2390,2402],"name":"ERC165","nameLocation":"678:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2401],"body":{"id":2388,"nodeType":"Block","src":"812:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"829:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2383,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"849:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2402_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2402_$","typeString":"type(contract IERC165)"}],"id":2382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2402","typeString":"type(contract IERC165)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2380,"id":2387,"nodeType":"Return","src":"822:47:8"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"702:23:8","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:8","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:8","nodeType":"VariableDeclaration","scope":2389,"src":"757:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2375,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:8"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"806:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2378,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:8"},"scope":2390,"src":"730:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2391,"src":"660:218:8","usedErrors":[],"usedEvents":[]}],"src":"114:765:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2402]},"id":2403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2392,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"142:280:9","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2402,"linearizedBaseContracts":[2402],"name":"IERC165","nameLocation":"433:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"447:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2401,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:9","nodeType":"FunctionDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:9","nodeType":"VariableDeclaration","scope":2401,"src":"819:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2395,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:9"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2401,"src":"862:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2398,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:9"},"scope":2402,"src":"792:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2403,"src":"423:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:756:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4023],"Panic":[461],"SafeCast":[5788]},"id":4024,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2404,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4024,"sourceUnit":462,"src":"129:35:10","symbolAliases":[{"foreign":{"id":2405,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"137:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4024,"sourceUnit":5789,"src":"165:40:10","symbolAliases":[{"foreign":{"id":2407,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"207:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4023,"linearizedBaseContracts":[4023],"name":"Math","nameLocation":"289:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2414,"members":[{"id":2410,"name":"Floor","nameLocation":"324:5:10","nodeType":"EnumValue","src":"324:5:10"},{"id":2411,"name":"Ceil","nameLocation":"367:4:10","nodeType":"EnumValue","src":"367:4:10"},{"id":2412,"name":"Trunc","nameLocation":"409:5:10","nodeType":"EnumValue","src":"409:5:10"},{"id":2413,"name":"Expand","nameLocation":"439:6:10","nodeType":"EnumValue","src":"439:6:10"}],"name":"Rounding","nameLocation":"305:8:10","nodeType":"EnumDefinition","src":"300:169:10"},{"body":{"id":2427,"nodeType":"Block","src":"731:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:10","statements":[{"nodeType":"YulAssignment","src":"780:16:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:10"},"nodeType":"YulFunctionCall","src":"787:9:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:10"}]},{"nodeType":"YulAssignment","src":"809:18:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:10"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:10"},"nodeType":"YulFunctionCall","src":"817:10:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2417,"isOffset":false,"isSlot":false,"src":"791:1:10","valueSize":1},{"declaration":2417,"isOffset":false,"isSlot":false,"src":"825:1:10","valueSize":1},{"declaration":2419,"isOffset":false,"isSlot":false,"src":"794:1:10","valueSize":1},{"declaration":2422,"isOffset":false,"isSlot":false,"src":"809:4:10","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"780:3:10","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"820:3:10","valueSize":1}],"flags":["memory-safe"],"id":2426,"nodeType":"InlineAssembly","src":"741:96:10"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"475:163:10","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:10","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"a","nameLocation":"667:1:10","nodeType":"VariableDeclaration","scope":2428,"src":"659:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"b","nameLocation":"678:1:10","nodeType":"VariableDeclaration","scope":2428,"src":"670:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:10"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"high","nameLocation":"712:4:10","nodeType":"VariableDeclaration","scope":2428,"src":"704:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"low","nameLocation":"726:3:10","nodeType":"VariableDeclaration","scope":2428,"src":"718:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:10"},"scope":4023,"src":"643:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2441,"nodeType":"Block","src":"1115:462:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:10"},"nodeType":"YulFunctionCall","src":"1474:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:10"},"nodeType":"YulFunctionCall","src":"1461:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:10","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:10"},"nodeType":"YulFunctionCall","src":"1501:9:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:10"}]},{"nodeType":"YulAssignment","src":"1523:38:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:10"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:10"},"nodeType":"YulFunctionCall","src":"1535:12:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:10"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:10"},"nodeType":"YulFunctionCall","src":"1549:11:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:10"},"nodeType":"YulFunctionCall","src":"1531:30:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2431,"isOffset":false,"isSlot":false,"src":"1468:1:10","valueSize":1},{"declaration":2431,"isOffset":false,"isSlot":false,"src":"1505:1:10","valueSize":1},{"declaration":2433,"isOffset":false,"isSlot":false,"src":"1471:1:10","valueSize":1},{"declaration":2433,"isOffset":false,"isSlot":false,"src":"1508:1:10","valueSize":1},{"declaration":2436,"isOffset":false,"isSlot":false,"src":"1523:4:10","valueSize":1},{"declaration":2438,"isOffset":false,"isSlot":false,"src":"1494:3:10","valueSize":1},{"declaration":2438,"isOffset":false,"isSlot":false,"src":"1543:3:10","valueSize":1},{"declaration":2438,"isOffset":false,"isSlot":false,"src":"1556:3:10","valueSize":1}],"flags":["memory-safe"],"id":2440,"nodeType":"InlineAssembly","src":"1412:159:10"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"849:173:10","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:10","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"a","nameLocation":"1051:1:10","nodeType":"VariableDeclaration","scope":2442,"src":"1043:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"b","nameLocation":"1062:1:10","nodeType":"VariableDeclaration","scope":2442,"src":"1054:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:10"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"high","nameLocation":"1096:4:10","nodeType":"VariableDeclaration","scope":2442,"src":"1088:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"low","nameLocation":"1110:3:10","nodeType":"VariableDeclaration","scope":2442,"src":"1102:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:10"},"scope":4023,"src":"1027:550:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2476,"nodeType":"Block","src":"1784:149:10","statements":[{"id":2475,"nodeType":"UncheckedBlock","src":"1794:133:10","statements":[{"assignments":[2455],"declarations":[{"constant":false,"id":2455,"mutability":"mutable","name":"c","nameLocation":"1826:1:10","nodeType":"VariableDeclaration","scope":2475,"src":"1818:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"1830:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"1834:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:10"},{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"1849:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1859:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"1864:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"nodeType":"ExpressionStatement","src":"1849:16:10"},{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1879:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1888:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2470,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"1908:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2468,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"1892:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"1892:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"nodeType":"ExpressionStatement","src":"1879:37:10"}]}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"1583:105:10","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:10","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"a","nameLocation":"1717:1:10","nodeType":"VariableDeclaration","scope":2477,"src":"1709:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"b","nameLocation":"1728:1:10","nodeType":"VariableDeclaration","scope":2477,"src":"1720:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:10"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"success","nameLocation":"1759:7:10","nodeType":"VariableDeclaration","scope":2477,"src":"1754:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2449,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"result","nameLocation":"1776:6:10","nodeType":"VariableDeclaration","scope":2477,"src":"1768:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:10"},"scope":4023,"src":"1693:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"2143:149:10","statements":[{"id":2510,"nodeType":"UncheckedBlock","src":"2153:133:10","statements":[{"assignments":[2490],"declarations":[{"constant":false,"id":2490,"mutability":"mutable","name":"c","nameLocation":"2185:1:10","nodeType":"VariableDeclaration","scope":2510,"src":"2177:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2494,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2189:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2492,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2193:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:10"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2495,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2208:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2218:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2223:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2500,"nodeType":"ExpressionStatement","src":"2208:16:10"},{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2238:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2247:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2505,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2267:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2503,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2251:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"2251:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2509,"nodeType":"ExpressionStatement","src":"2238:37:10"}]}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"1939:108:10","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:10","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"a","nameLocation":"2076:1:10","nodeType":"VariableDeclaration","scope":2512,"src":"2068:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"b","nameLocation":"2087:1:10","nodeType":"VariableDeclaration","scope":2512,"src":"2079:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:10"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"success","nameLocation":"2118:7:10","nodeType":"VariableDeclaration","scope":2512,"src":"2113:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2484,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"result","nameLocation":"2135:6:10","nodeType":"VariableDeclaration","scope":2512,"src":"2127:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:10"},"scope":4023,"src":"2052:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2541,"nodeType":"Block","src":"2505:391:10","statements":[{"id":2540,"nodeType":"UncheckedBlock","src":"2515:375:10","statements":[{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"c","nameLocation":"2547:1:10","nodeType":"VariableDeclaration","scope":2540,"src":"2539:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2529,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2555:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:10"},{"AST":{"nodeType":"YulBlock","src":"2595:188:10","statements":[{"nodeType":"YulAssignment","src":"2727:42:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:10"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:10"},"nodeType":"YulFunctionCall","src":"2744:9:10"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:10"},"nodeType":"YulFunctionCall","src":"2741:16:10"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:10"},"nodeType":"YulFunctionCall","src":"2759:9:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:10"},"nodeType":"YulFunctionCall","src":"2738:31:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2515,"isOffset":false,"isSlot":false,"src":"2751:1:10","valueSize":1},{"declaration":2515,"isOffset":false,"isSlot":false,"src":"2766:1:10","valueSize":1},{"declaration":2517,"isOffset":false,"isSlot":false,"src":"2755:1:10","valueSize":1},{"declaration":2525,"isOffset":false,"isSlot":false,"src":"2748:1:10","valueSize":1},{"declaration":2520,"isOffset":false,"isSlot":false,"src":"2727:7:10","valueSize":1}],"flags":["memory-safe"],"id":2530,"nodeType":"InlineAssembly","src":"2570:213:10"},{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2842:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2851:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2535,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2871:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2533,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2855:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"2855:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"2842:37:10"}]}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"2298:111:10","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:10","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"a","nameLocation":"2438:1:10","nodeType":"VariableDeclaration","scope":2542,"src":"2430:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"b","nameLocation":"2449:1:10","nodeType":"VariableDeclaration","scope":2542,"src":"2441:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:10"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"success","nameLocation":"2480:7:10","nodeType":"VariableDeclaration","scope":2542,"src":"2475:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2519,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"result","nameLocation":"2497:6:10","nodeType":"VariableDeclaration","scope":2542,"src":"2489:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:10"},"scope":4023,"src":"2414:482:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"3111:231:10","statements":[{"id":2561,"nodeType":"UncheckedBlock","src":"3121:215:10","statements":[{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2554,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3145:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3155:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2559,"nodeType":"ExpressionStatement","src":"3145:15:10"},{"AST":{"nodeType":"YulBlock","src":"3199:127:10","statements":[{"nodeType":"YulAssignment","src":"3293:19:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:10"},"nodeType":"YulFunctionCall","src":"3303:9:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2545,"isOffset":false,"isSlot":false,"src":"3307:1:10","valueSize":1},{"declaration":2547,"isOffset":false,"isSlot":false,"src":"3310:1:10","valueSize":1},{"declaration":2552,"isOffset":false,"isSlot":false,"src":"3293:6:10","valueSize":1}],"flags":["memory-safe"],"id":2560,"nodeType":"InlineAssembly","src":"3174:152:10"}]}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"2902:113:10","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:10","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"a","nameLocation":"3044:1:10","nodeType":"VariableDeclaration","scope":2563,"src":"3036:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"b","nameLocation":"3055:1:10","nodeType":"VariableDeclaration","scope":2563,"src":"3047:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:10"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"success","nameLocation":"3086:7:10","nodeType":"VariableDeclaration","scope":2563,"src":"3081:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2549,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"result","nameLocation":"3103:6:10","nodeType":"VariableDeclaration","scope":2563,"src":"3095:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:10"},"scope":4023,"src":"3020:322:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"3567:231:10","statements":[{"id":2582,"nodeType":"UncheckedBlock","src":"3577:215:10","statements":[{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"3601:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3611:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"nodeType":"ExpressionStatement","src":"3601:15:10"},{"AST":{"nodeType":"YulBlock","src":"3655:127:10","statements":[{"nodeType":"YulAssignment","src":"3749:19:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:10"},"nodeType":"YulFunctionCall","src":"3759:9:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2566,"isOffset":false,"isSlot":false,"src":"3763:1:10","valueSize":1},{"declaration":2568,"isOffset":false,"isSlot":false,"src":"3766:1:10","valueSize":1},{"declaration":2573,"isOffset":false,"isSlot":false,"src":"3749:6:10","valueSize":1}],"flags":["memory-safe"],"id":2581,"nodeType":"InlineAssembly","src":"3630:152:10"}]}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"3348:123:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:10","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"a","nameLocation":"3500:1:10","nodeType":"VariableDeclaration","scope":2584,"src":"3492:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"b","nameLocation":"3511:1:10","nodeType":"VariableDeclaration","scope":2584,"src":"3503:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:10"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"success","nameLocation":"3542:7:10","nodeType":"VariableDeclaration","scope":2584,"src":"3537:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2570,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"result","nameLocation":"3559:6:10","nodeType":"VariableDeclaration","scope":2584,"src":"3551:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:10"},"scope":4023,"src":"3476:322:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"3989:122:10","statements":[{"assignments":[2595,2597],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"success","nameLocation":"4005:7:10","nodeType":"VariableDeclaration","scope":2613,"src":"4000:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2594,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"result","nameLocation":"4022:6:10","nodeType":"VariableDeclaration","scope":2613,"src":"4014:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2602,"initialValue":{"arguments":[{"id":2599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4039:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"4042:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2598,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"4032:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:10"},{"expression":{"arguments":[{"id":2604,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"4069:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"4078:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:10","memberName":"max","nodeType":"MemberAccess","src":"4086:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"4061:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2593,"id":2612,"nodeType":"Return","src":"4054:50:10"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"3804:103:10","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:10","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"a","nameLocation":"3943:1:10","nodeType":"VariableDeclaration","scope":2614,"src":"3935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"b","nameLocation":"3954:1:10","nodeType":"VariableDeclaration","scope":2614,"src":"3946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:10"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"3980:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:10"},"scope":4023,"src":"3912:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"4294:73:10","statements":[{"assignments":[null,2625],"declarations":[null,{"constant":false,"id":2625,"mutability":"mutable","name":"result","nameLocation":"4315:6:10","nodeType":"VariableDeclaration","scope":2633,"src":"4307:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2630,"initialValue":{"arguments":[{"id":2627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4332:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4335:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2626,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4325:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:10"},{"expression":{"id":2631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4354:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2623,"id":2632,"nodeType":"Return","src":"4347:13:10"}]},"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"4117:95:10","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:10","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"a","nameLocation":"4248:1:10","nodeType":"VariableDeclaration","scope":2634,"src":"4240:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"b","nameLocation":"4259:1:10","nodeType":"VariableDeclaration","scope":2634,"src":"4251:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:10"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"4285:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:10"},"scope":4023,"src":"4217:150:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2663,"nodeType":"Block","src":"4564:122:10","statements":[{"assignments":[2645,2647],"declarations":[{"constant":false,"id":2645,"mutability":"mutable","name":"success","nameLocation":"4580:7:10","nodeType":"VariableDeclaration","scope":2663,"src":"4575:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2644,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"result","nameLocation":"4597:6:10","nodeType":"VariableDeclaration","scope":2663,"src":"4589:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2652,"initialValue":{"arguments":[{"id":2649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"4614:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"4617:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2648,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4607:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:10"},{"expression":{"arguments":[{"id":2654,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"4644:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"4653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:10","memberName":"max","nodeType":"MemberAccess","src":"4661:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2653,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"4636:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2643,"id":2662,"nodeType":"Return","src":"4629:50:10"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"4373:109:10","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:10","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"a","nameLocation":"4518:1:10","nodeType":"VariableDeclaration","scope":2664,"src":"4510:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"b","nameLocation":"4529:1:10","nodeType":"VariableDeclaration","scope":2664,"src":"4521:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:10"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"4555:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:10"},"scope":4023,"src":"4487:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2690,"nodeType":"Block","src":"5158:207:10","statements":[{"id":2689,"nodeType":"UncheckedBlock","src":"5168:191:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"5306:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5312:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2678,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"5316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2683,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"5337:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2681,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"5321:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"5321:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2675,"id":2688,"nodeType":"Return","src":"5299:49:10"}]}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"4692:374:10","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:10","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"condition","nameLocation":"5093:9:10","nodeType":"VariableDeclaration","scope":2691,"src":"5088:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2666,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"a","nameLocation":"5112:1:10","nodeType":"VariableDeclaration","scope":2691,"src":"5104:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"b","nameLocation":"5123:1:10","nodeType":"VariableDeclaration","scope":2691,"src":"5115:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:10"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2691,"src":"5149:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:10"},"scope":4023,"src":"5071:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2709,"nodeType":"Block","src":"5502:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"5527:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5531:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"5534:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2706,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5537:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2701,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"5519:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2700,"id":2708,"nodeType":"Return","src":"5512:27:10"}]},"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"5371:59:10","text":" @dev Returns the largest of two numbers."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:10","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"a","nameLocation":"5456:1:10","nodeType":"VariableDeclaration","scope":2710,"src":"5448:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"b","nameLocation":"5467:1:10","nodeType":"VariableDeclaration","scope":2710,"src":"5459:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:10"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"5493:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:10"},"scope":4023,"src":"5435:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"5684:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"5709:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5713:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"5716:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2725,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5719:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2720,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2719,"id":2727,"nodeType":"Return","src":"5694:27:10"}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"5552:60:10","text":" @dev Returns the smallest of two numbers."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:10","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"a","nameLocation":"5638:1:10","nodeType":"VariableDeclaration","scope":2729,"src":"5630:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"b","nameLocation":"5649:1:10","nodeType":"VariableDeclaration","scope":2729,"src":"5641:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:10"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"5675:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:10"},"scope":4023,"src":"5617:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"5912:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"5967:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"5971:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"5977:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"5981:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2738,"id":2750,"nodeType":"Return","src":"5959:28:10"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"5734:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:10","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"a","nameLocation":"5866:1:10","nodeType":"VariableDeclaration","scope":2752,"src":"5858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"b","nameLocation":"5877:1:10","nodeType":"VariableDeclaration","scope":2752,"src":"5869:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:10"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"5903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:10"},"scope":4023,"src":"5841:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"6286:633:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6300:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"6296:150:10","trueBody":{"id":2772,"nodeType":"Block","src":"6308:138:10","statements":[{"expression":{"arguments":[{"expression":{"id":2768,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6412:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":428,"src":"6412:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2765,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6400:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":460,"src":"6400:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"ExpressionStatement","src":"6400:35:10"}]}},{"id":2791,"nodeType":"UncheckedBlock","src":"6829:84:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"6876:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2774,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"6860:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"6860:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"6887:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6896:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2761,"id":2790,"nodeType":"Return","src":"6853:49:10"}]}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"6000:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:10","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"a","nameLocation":"6240:1:10","nodeType":"VariableDeclaration","scope":2793,"src":"6232:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"b","nameLocation":"6251:1:10","nodeType":"VariableDeclaration","scope":2793,"src":"6243:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:10"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"6277:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:10"},"scope":4023,"src":"6215:704:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2928,"nodeType":"Block","src":"7340:3585:10","statements":[{"id":2927,"nodeType":"UncheckedBlock","src":"7350:3569:10","statements":[{"assignments":[2806,2808],"declarations":[{"constant":false,"id":2806,"mutability":"mutable","name":"high","nameLocation":"7383:4:10","nodeType":"VariableDeclaration","scope":2927,"src":"7375:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"low","nameLocation":"7397:3:10","nodeType":"VariableDeclaration","scope":2927,"src":"7389:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2813,"initialValue":{"arguments":[{"id":2810,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"7411:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2811,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"7414:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"7404:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"7498:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2822,"nodeType":"IfStatement","src":"7494:365:10","trueBody":{"id":2821,"nodeType":"Block","src":"7509:350:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7827:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2818,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"7833:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2804,"id":2820,"nodeType":"Return","src":"7820:24:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"7969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2824,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"7984:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"nodeType":"IfStatement","src":"7965:142:10","trueBody":{"id":2840,"nodeType":"Block","src":"7990:117:10","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2830,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"8028:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8046:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":428,"src":"8046:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2835,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8070:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":424,"src":"8070:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"8020:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2826,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8008:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":460,"src":"8008:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2839,"nodeType":"ExpressionStatement","src":"8008:84:10"}]}},{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:10","nodeType":"VariableDeclaration","scope":2927,"src":"8359:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2844,"nodeType":"VariableDeclarationStatement","src":"8359:17:10"},{"AST":{"nodeType":"YulBlock","src":"8415:283:10","statements":[{"nodeType":"YulAssignment","src":"8484:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:10"},"nodeType":"YulFunctionCall","src":"8497:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:10"}]},{"nodeType":"YulAssignment","src":"8604:37:10","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:10"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:10"},"nodeType":"YulFunctionCall","src":"8622:18:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:10"},"nodeType":"YulFunctionCall","src":"8612:29:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:10"}]},{"nodeType":"YulAssignment","src":"8658:26:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:10"},"nodeType":"YulFunctionCall","src":"8665:19:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2800,"isOffset":false,"isSlot":false,"src":"8510:11:10","valueSize":1},{"declaration":2806,"isOffset":false,"isSlot":false,"src":"8604:4:10","valueSize":1},{"declaration":2806,"isOffset":false,"isSlot":false,"src":"8616:4:10","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"8636:3:10","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"8658:3:10","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"8669:3:10","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"8484:9:10","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"8625:9:10","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"8674:9:10","valueSize":1},{"declaration":2796,"isOffset":false,"isSlot":false,"src":"8504:1:10","valueSize":1},{"declaration":2798,"isOffset":false,"isSlot":false,"src":"8507:1:10","valueSize":1}],"flags":["memory-safe"],"id":2845,"nodeType":"InlineAssembly","src":"8390:308:10"},{"assignments":[2847],"declarations":[{"constant":false,"id":2847,"mutability":"mutable","name":"twos","nameLocation":"8910:4:10","nodeType":"VariableDeclaration","scope":2927,"src":"8902:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2854,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2848,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"8917:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2850,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"8936:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:10"},{"AST":{"nodeType":"YulBlock","src":"8987:359:10","statements":[{"nodeType":"YulAssignment","src":"9052:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:10"},"nodeType":"YulFunctionCall","src":"9067:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:10"}]},{"nodeType":"YulAssignment","src":"9153:21:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:10"},"nodeType":"YulFunctionCall","src":"9160:14:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:10"}]},{"nodeType":"YulAssignment","src":"9293:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:10"},"nodeType":"YulFunctionCall","src":"9309:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:10"},"nodeType":"YulFunctionCall","src":"9305:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:10"},"nodeType":"YulFunctionCall","src":"9301:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2800,"isOffset":false,"isSlot":false,"src":"9052:11:10","valueSize":1},{"declaration":2800,"isOffset":false,"isSlot":false,"src":"9071:11:10","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"9153:3:10","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"9164:3:10","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"9084:4:10","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"9169:4:10","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"9293:4:10","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"9316:4:10","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"9323:4:10","valueSize":1}],"flags":["memory-safe"],"id":2855,"nodeType":"InlineAssembly","src":"8962:384:10"},{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2856,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9409:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"9416:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2858,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9423:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2861,"nodeType":"ExpressionStatement","src":"9409:18:10"},{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:10","nodeType":"VariableDeclaration","scope":2927,"src":"9762:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2870,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2865,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"9785:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:10"},{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2871,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10033:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2874,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"10018:36:10"},{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2879,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10103:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2882,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ExpressionStatement","src":"10088:36:10"},{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2887,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10175:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2890,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2894,"nodeType":"ExpressionStatement","src":"10160:36:10"},{"expression":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2895,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10246:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2898,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"nodeType":"ExpressionStatement","src":"10231:36:10"},{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2903,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10304:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10319:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2906,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2910,"nodeType":"ExpressionStatement","src":"10304:36:10"},{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"10393:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2914,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"10378:36:10"},{"expression":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10859:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"10868:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2921,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2924,"nodeType":"ExpressionStatement","src":"10859:22:10"},{"expression":{"id":2925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10902:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2804,"id":2926,"nodeType":"Return","src":"10895:13:10"}]}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"6925:312:10","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:10","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"x","nameLocation":"7266:1:10","nodeType":"VariableDeclaration","scope":2929,"src":"7258:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"y","nameLocation":"7277:1:10","nodeType":"VariableDeclaration","scope":2929,"src":"7269:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:10","nodeType":"VariableDeclaration","scope":2929,"src":"7280:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:10"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"result","nameLocation":"7332:6:10","nodeType":"VariableDeclaration","scope":2929,"src":"7324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:10"},"scope":4023,"src":"7242:3683:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2965,"nodeType":"Block","src":"11164:128:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2945,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11188:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2946,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"11191:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2947,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"11194:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2944,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2929,2966],"referencedDeclaration":2929,"src":"11181:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2952,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"11242:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":2951,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"11225:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2414_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2955,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11262:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2956,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"11265:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"11268:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2954,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2949,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"11209:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"11209:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2943,"id":2964,"nodeType":"Return","src":"11174:111:10"}]},"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"10931:118:10","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:10","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"x","nameLocation":"11078:1:10","nodeType":"VariableDeclaration","scope":2966,"src":"11070:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"y","nameLocation":"11089:1:10","nodeType":"VariableDeclaration","scope":2966,"src":"11081:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:10","nodeType":"VariableDeclaration","scope":2966,"src":"11092:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:10","nodeType":"VariableDeclaration","scope":2966,"src":"11113:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":2938,"nodeType":"UserDefinedTypeName","pathNode":{"id":2937,"name":"Rounding","nameLocations":["11113:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"11113:8:10"},"referencedDeclaration":2414,"src":"11113:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:10"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"11155:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:10"},"scope":4023,"src":"11054:238:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3015,"nodeType":"Block","src":"11500:245:10","statements":[{"id":3014,"nodeType":"UncheckedBlock","src":"11510:229:10","statements":[{"assignments":[2979,2981],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"high","nameLocation":"11543:4:10","nodeType":"VariableDeclaration","scope":3014,"src":"11535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"low","nameLocation":"11557:3:10","nodeType":"VariableDeclaration","scope":3014,"src":"11549:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2986,"initialValue":{"arguments":[{"id":2983,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"11571:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2984,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"11564:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"11594:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2989,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"11607:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"nodeType":"IfStatement","src":"11590:86:10","trueBody":{"id":2999,"nodeType":"Block","src":"11610:66:10","statements":[{"expression":{"arguments":[{"expression":{"id":2995,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"11640:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":424,"src":"11640:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2992,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"11628:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":460,"src":"11628:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2998,"nodeType":"ExpressionStatement","src":"11628:33:10"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"11697:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3003,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"11712:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"11719:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3009,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"11726:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2977,"id":3013,"nodeType":"Return","src":"11689:39:10"}]}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"11298:111:10","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:10","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"x","nameLocation":"11438:1:10","nodeType":"VariableDeclaration","scope":3016,"src":"11430:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"y","nameLocation":"11449:1:10","nodeType":"VariableDeclaration","scope":3016,"src":"11441:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"n","nameLocation":"11458:1:10","nodeType":"VariableDeclaration","scope":3016,"src":"11452:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2972,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:10"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"result","nameLocation":"11492:6:10","nodeType":"VariableDeclaration","scope":3016,"src":"11484:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:10"},"scope":4023,"src":"11414:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"11963:113:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3032,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"11987:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3033,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"11990:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3034,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"11993:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3031,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3016,3055],"referencedDeclaration":3016,"src":"11980:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3039,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"12031:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":3038,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"12014:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2414_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3042,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"12051:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3043,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"12054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3045,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12062:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3041,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3036,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"11998:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"11998:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3030,"id":3053,"nodeType":"Return","src":"11973:96:10"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"11751:109:10","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:10","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"x","nameLocation":"11889:1:10","nodeType":"VariableDeclaration","scope":3055,"src":"11881:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"y","nameLocation":"11900:1:10","nodeType":"VariableDeclaration","scope":3055,"src":"11892:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"n","nameLocation":"11909:1:10","nodeType":"VariableDeclaration","scope":3055,"src":"11903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3022,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:10","nodeType":"VariableDeclaration","scope":3055,"src":"11912:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":3025,"nodeType":"UserDefinedTypeName","pathNode":{"id":3024,"name":"Rounding","nameLocations":["11912:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"11912:8:10"},"referencedDeclaration":2414,"src":"11912:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:10"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3055,"src":"11954:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:10"},"scope":4023,"src":"11865:211:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"12710:1849:10","statements":[{"id":3150,"nodeType":"UncheckedBlock","src":"12720:1833:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12748:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3070,"nodeType":"IfStatement","src":"12744:20:10","trueBody":{"expression":{"hexValue":"30","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3064,"id":3069,"nodeType":"Return","src":"12756:8:10"}},{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:10","nodeType":"VariableDeclaration","scope":3150,"src":"13235:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3076,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"13255:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3074,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"13259:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:10"},{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:10","nodeType":"VariableDeclaration","scope":3150,"src":"13274:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3080,"initialValue":{"id":3079,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"13288:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:10"},{"assignments":[3082],"declarations":[{"constant":false,"id":3082,"mutability":"mutable","name":"x","nameLocation":"13432:1:10","nodeType":"VariableDeclaration","scope":3150,"src":"13425:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3081,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3084,"initialValue":{"hexValue":"30","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:10"},{"assignments":[3086],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"y","nameLocation":"13458:1:10","nodeType":"VariableDeclaration","scope":3150,"src":"13451:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3085,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3088,"initialValue":{"hexValue":"31","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:10"},{"body":{"id":3125,"nodeType":"Block","src":"13501:882:10","statements":[{"assignments":[3093],"declarations":[{"constant":false,"id":3093,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:10","nodeType":"VariableDeclaration","scope":3125,"src":"13519:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3097,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"13538:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3095,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13544:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:10"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3098,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"13573:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3099,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13578:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3100,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3101,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13678:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"13923:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13929:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3104,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"13941:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3109,"nodeType":"ExpressionStatement","src":"13572:395:10"},{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3110,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"13987:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3111,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"13990:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3113,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"14072:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"14326:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3115,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"14330:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3118,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"14341:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3116,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:10","typeDescriptions":{}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"ExpressionStatement","src":"13986:382:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13485:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"WhileStatement","src":"13478:905:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"14401:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"IfStatement","src":"14397:22:10","trueBody":{"expression":{"hexValue":"30","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3064,"id":3131,"nodeType":"Return","src":"14411:8:10"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"14470:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"14477:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:10","subExpression":{"id":3140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"14490:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:10","typeDescriptions":{}}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3146,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"14502:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:10","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3133,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"14462:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3064,"id":3149,"nodeType":"Return","src":"14455:50:10"}]}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"12082:553:10","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:10","nodeType":"FunctionDefinition","parameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"a","nameLocation":"12664:1:10","nodeType":"VariableDeclaration","scope":3152,"src":"12656:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"n","nameLocation":"12675:1:10","nodeType":"VariableDeclaration","scope":3152,"src":"12667:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:10"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"12701:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:10"},"scope":4023,"src":"12640:1919:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3172,"nodeType":"Block","src":"15159:82:10","statements":[{"id":3171,"nodeType":"UncheckedBlock","src":"15169:66:10","statements":[{"expression":{"arguments":[{"id":3164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"15212:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"15215:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3168,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"15222:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3162,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"15200:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4023_$","typeString":"type(library Math)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:10","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"15200:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3161,"id":3170,"nodeType":"Return","src":"15193:31:10"}]}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"14565:514:10","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:10","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"a","nameLocation":"15113:1:10","nodeType":"VariableDeclaration","scope":3173,"src":"15105:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"p","nameLocation":"15124:1:10","nodeType":"VariableDeclaration","scope":3173,"src":"15116:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:10"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3173,"src":"15150:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:10"},"scope":4023,"src":"15084:157:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"16011:174:10","statements":[{"assignments":[3186,3188],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"success","nameLocation":"16027:7:10","nodeType":"VariableDeclaration","scope":3208,"src":"16022:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3185,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"result","nameLocation":"16044:6:10","nodeType":"VariableDeclaration","scope":3208,"src":"16036:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3194,"initialValue":{"arguments":[{"id":3190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"16064:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3191,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"16067:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3192,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"16070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3189,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3233,3315],"referencedDeclaration":3233,"src":"16054:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:10"},{"condition":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:10","subExpression":{"id":3195,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"16087:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3205,"nodeType":"IfStatement","src":"16082:74:10","trueBody":{"id":3204,"nodeType":"Block","src":"16096:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":3200,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"16122:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":428,"src":"16122:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3197,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"16110:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":460,"src":"16110:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"ExpressionStatement","src":"16110:35:10"}]}},{"expression":{"id":3206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"16172:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3184,"id":3207,"nodeType":"Return","src":"16165:13:10"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"15247:678:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:10","nodeType":"FunctionDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"b","nameLocation":"15954:1:10","nodeType":"VariableDeclaration","scope":3209,"src":"15946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"e","nameLocation":"15965:1:10","nodeType":"VariableDeclaration","scope":3209,"src":"15957:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"m","nameLocation":"15976:1:10","nodeType":"VariableDeclaration","scope":3209,"src":"15968:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:10"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"16002:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:10"},"scope":4023,"src":"15930:255:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3232,"nodeType":"Block","src":"17039:1493:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"17053:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"nodeType":"IfStatement","src":"17049:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3222,"id":3229,"nodeType":"Return","src":"17061:17:10"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:10"},"nodeType":"YulFunctionCall","src":"17138:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:10"},"nodeType":"YulFunctionCall","src":"18050:17:10"},"nodeType":"YulExpressionStatement","src":"18050:17:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:10"},"nodeType":"YulFunctionCall","src":"18087:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:10"},"nodeType":"YulFunctionCall","src":"18080:28:10"},"nodeType":"YulExpressionStatement","src":"18080:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:10"},"nodeType":"YulFunctionCall","src":"18128:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:10"},"nodeType":"YulFunctionCall","src":"18121:28:10"},"nodeType":"YulExpressionStatement","src":"18121:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:10"},"nodeType":"YulFunctionCall","src":"18169:14:10"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:10"},"nodeType":"YulFunctionCall","src":"18162:25:10"},"nodeType":"YulExpressionStatement","src":"18162:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:10"},"nodeType":"YulFunctionCall","src":"18207:14:10"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:10"},"nodeType":"YulFunctionCall","src":"18200:25:10"},"nodeType":"YulExpressionStatement","src":"18200:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:10"},"nodeType":"YulFunctionCall","src":"18245:14:10"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:10"},"nodeType":"YulFunctionCall","src":"18238:25:10"},"nodeType":"YulExpressionStatement","src":"18238:25:10"},{"nodeType":"YulAssignment","src":"18425:57:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:10"},"nodeType":"YulFunctionCall","src":"18447:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:10","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:10","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:10"},"nodeType":"YulFunctionCall","src":"18436:46:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:10"}]},{"nodeType":"YulAssignment","src":"18495:21:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:10","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:10"},"nodeType":"YulFunctionCall","src":"18505:11:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3212,"isOffset":false,"isSlot":false,"src":"18185:1:10","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"18223:1:10","valueSize":1},{"declaration":3216,"isOffset":false,"isSlot":false,"src":"18261:1:10","valueSize":1},{"declaration":3221,"isOffset":false,"isSlot":false,"src":"18495:6:10","valueSize":1},{"declaration":3219,"isOffset":false,"isSlot":false,"src":"18425:7:10","valueSize":1}],"flags":["memory-safe"],"id":3231,"nodeType":"InlineAssembly","src":"17088:1438:10"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"16191:738:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3233,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:10","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"b","nameLocation":"16961:1:10","nodeType":"VariableDeclaration","scope":3233,"src":"16953:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"e","nameLocation":"16972:1:10","nodeType":"VariableDeclaration","scope":3233,"src":"16964:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"m","nameLocation":"16983:1:10","nodeType":"VariableDeclaration","scope":3233,"src":"16975:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:10"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"success","nameLocation":"17014:7:10","nodeType":"VariableDeclaration","scope":3233,"src":"17009:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3218,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"result","nameLocation":"17031:6:10","nodeType":"VariableDeclaration","scope":3233,"src":"17023:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:10"},"scope":4023,"src":"16934:1598:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3268,"nodeType":"Block","src":"18729:179:10","statements":[{"assignments":[3246,3248],"declarations":[{"constant":false,"id":3246,"mutability":"mutable","name":"success","nameLocation":"18745:7:10","nodeType":"VariableDeclaration","scope":3268,"src":"18740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3245,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"result","nameLocation":"18767:6:10","nodeType":"VariableDeclaration","scope":3268,"src":"18754:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3247,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3254,"initialValue":{"arguments":[{"id":3250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"18787:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3251,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"18790:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3252,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"18793:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3249,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3233,3315],"referencedDeclaration":3315,"src":"18777:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:10"},{"condition":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:10","subExpression":{"id":3255,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"18810:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3265,"nodeType":"IfStatement","src":"18805:74:10","trueBody":{"id":3264,"nodeType":"Block","src":"18819:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":3260,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"18845:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":428,"src":"18845:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3257,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"18833:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$461_$","typeString":"type(library Panic)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":460,"src":"18833:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3263,"nodeType":"ExpressionStatement","src":"18833:35:10"}]}},{"expression":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"18895:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3244,"id":3267,"nodeType":"Return","src":"18888:13:10"}]},"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"18538:85:10","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:10","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"b","nameLocation":"18657:1:10","nodeType":"VariableDeclaration","scope":3269,"src":"18644:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3235,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"e","nameLocation":"18673:1:10","nodeType":"VariableDeclaration","scope":3269,"src":"18660:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3237,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"m","nameLocation":"18689:1:10","nodeType":"VariableDeclaration","scope":3269,"src":"18676:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3239,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:10"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"18715:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:10"},"scope":4023,"src":"18628:280:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3314,"nodeType":"Block","src":"19162:771:10","statements":[{"condition":{"arguments":[{"id":3284,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"19187:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3283,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"19176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3293,"nodeType":"IfStatement","src":"19172:47:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3287,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3282,"id":3292,"nodeType":"Return","src":"19191:28:10"}},{"assignments":[3295],"declarations":[{"constant":false,"id":3295,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:10","nodeType":"VariableDeclaration","scope":3314,"src":"19230:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"expression":{"id":3296,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"19245:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:10","memberName":"length","nodeType":"MemberAccess","src":"19245:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:10"},{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"19335:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"19361:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:10","memberName":"length","nodeType":"MemberAccess","src":"19361:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3304,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"19371:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:10","memberName":"length","nodeType":"MemberAccess","src":"19371:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3306,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"19381:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"19387:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3308,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"19390:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3309,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"19393:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3300,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3312,"nodeType":"ExpressionStatement","src":"19335:60:10"},{"AST":{"nodeType":"YulBlock","src":"19431:496:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:10"},"nodeType":"YulFunctionCall","src":"19460:17:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:10","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:10"},"nodeType":"YulFunctionCall","src":"19589:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:10","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:10"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:10"},"nodeType":"YulFunctionCall","src":"19611:13:10"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:10"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:10"},"nodeType":"YulFunctionCall","src":"19578:62:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:10"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:10"},"nodeType":"YulFunctionCall","src":"19789:20:10"},"nodeType":"YulExpressionStatement","src":"19789:20:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:10","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:10"},"nodeType":"YulFunctionCall","src":"19898:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:10"},"nodeType":"YulFunctionCall","src":"19885:32:10"},"nodeType":"YulExpressionStatement","src":"19885:32:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":3295,"isOffset":false,"isSlot":false,"src":"19635:4:10","valueSize":1},{"declaration":3295,"isOffset":false,"isSlot":false,"src":"19804:4:10","valueSize":1},{"declaration":3295,"isOffset":false,"isSlot":false,"src":"19911:4:10","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"19464:6:10","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"19617:6:10","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"19796:6:10","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"19567:7:10","valueSize":1}],"flags":["memory-safe"],"id":3313,"nodeType":"InlineAssembly","src":"19406:521:10"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"18914:88:10","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:10","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"b","nameLocation":"19048:1:10","nodeType":"VariableDeclaration","scope":3315,"src":"19035:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3271,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"e","nameLocation":"19072:1:10","nodeType":"VariableDeclaration","scope":3315,"src":"19059:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3273,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"m","nameLocation":"19096:1:10","nodeType":"VariableDeclaration","scope":3315,"src":"19083:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3275,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:10"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"success","nameLocation":"19132:7:10","nodeType":"VariableDeclaration","scope":3315,"src":"19127:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3278,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"result","nameLocation":"19154:6:10","nodeType":"VariableDeclaration","scope":3315,"src":"19141:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3280,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:10"},"scope":4023,"src":"19007:926:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"20088:176:10","statements":[{"body":{"id":3343,"nodeType":"Block","src":"20145:92:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3334,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"20163:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3336,"indexExpression":{"id":3335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"20173:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"20159:68:10","trueBody":{"id":3341,"nodeType":"Block","src":"20182:45:10","statements":[{"expression":{"hexValue":"66616c7365","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3322,"id":3340,"nodeType":"Return","src":"20200:12:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"20118:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3328,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"20122:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:10","memberName":"length","nodeType":"MemberAccess","src":"20122:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3344,"initializationExpression":{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"i","nameLocation":"20111:1:10","nodeType":"VariableDeclaration","scope":3344,"src":"20103:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3326,"initialValue":{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:10"},"loopExpression":{"expression":{"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:10","subExpression":{"id":3331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"20142:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"nodeType":"ExpressionStatement","src":"20140:3:10"},"nodeType":"ForStatement","src":"20098:139:10"},{"expression":{"hexValue":"74727565","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3322,"id":3346,"nodeType":"Return","src":"20246:11:10"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"19939:72:10","text":" @dev Returns whether the provided byte array is zero."},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:10","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:10","nodeType":"VariableDeclaration","scope":3348,"src":"20036:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3317,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:10"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3348,"src":"20082:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3320,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:10"},"scope":4023,"src":"20016:248:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3566,"nodeType":"Block","src":"20624:5124:10","statements":[{"id":3565,"nodeType":"UncheckedBlock","src":"20634:5108:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"20728:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3362,"nodeType":"IfStatement","src":"20724:53:10","trueBody":{"id":3361,"nodeType":"Block","src":"20736:41:10","statements":[{"expression":{"id":3359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"20761:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3355,"id":3360,"nodeType":"Return","src":"20754:8:10"}]}},{"assignments":[3364],"declarations":[{"constant":false,"id":3364,"mutability":"mutable","name":"aa","nameLocation":"21712:2:10","nodeType":"VariableDeclaration","scope":3565,"src":"21704:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3366,"initialValue":{"id":3365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"21717:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:10"},{"assignments":[3368],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"xn","nameLocation":"21740:2:10","nodeType":"VariableDeclaration","scope":3565,"src":"21732:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3370,"initialValue":{"hexValue":"31","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"21765:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3386,"nodeType":"IfStatement","src":"21761:92:10","trueBody":{"id":3385,"nodeType":"Block","src":"21783:70:10","statements":[{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3377,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"21801:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3380,"nodeType":"ExpressionStatement","src":"21801:10:10"},{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3381,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"21829:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3384,"nodeType":"ExpressionStatement","src":"21829:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"21870:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3402,"nodeType":"IfStatement","src":"21866:90:10","trueBody":{"id":3401,"nodeType":"Block","src":"21887:69:10","statements":[{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3393,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"21905:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"21905:9:10"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"21932:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"21932:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"21973:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3418,"nodeType":"IfStatement","src":"21969:90:10","trueBody":{"id":3417,"nodeType":"Block","src":"21990:69:10","statements":[{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3409,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22008:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3412,"nodeType":"ExpressionStatement","src":"22008:9:10"},{"expression":{"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3413,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22035:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3416,"nodeType":"ExpressionStatement","src":"22035:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3419,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22076:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"22072:89:10","trueBody":{"id":3433,"nodeType":"Block","src":"22093:68:10","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3425,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22111:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"22111:9:10"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22138:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"22138:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22178:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3450,"nodeType":"IfStatement","src":"22174:87:10","trueBody":{"id":3449,"nodeType":"Block","src":"22194:67:10","statements":[{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3441,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22212:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"22212:8:10"},{"expression":{"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3445,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22238:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3448,"nodeType":"ExpressionStatement","src":"22238:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3451,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22278:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"22274:87:10","trueBody":{"id":3465,"nodeType":"Block","src":"22294:67:10","statements":[{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22312:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"nodeType":"ExpressionStatement","src":"22312:8:10"},{"expression":{"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3461,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22338:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3464,"nodeType":"ExpressionStatement","src":"22338:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"22378:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3478,"nodeType":"IfStatement","src":"22374:61:10","trueBody":{"id":3477,"nodeType":"Block","src":"22394:41:10","statements":[{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3473,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22412:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ExpressionStatement","src":"22412:8:10"}]}},{"expression":{"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3479,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22855:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3481,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"22865:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ExpressionStatement","src":"22855:18:10"},{"expression":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24760:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24766:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"24771:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3491,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24775:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3498,"nodeType":"ExpressionStatement","src":"24760:23:10"},{"expression":{"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24869:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24875:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"24880:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24884:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"nodeType":"ExpressionStatement","src":"24869:23:10"},{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24980:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24986:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"24991:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3513,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"24995:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ExpressionStatement","src":"24980:23:10"},{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25089:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25095:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"25100:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3524,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25104:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ExpressionStatement","src":"25089:23:10"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3532,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25199:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25205:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"25210:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25214:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"25199:23:10"},{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3543,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25309:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25315:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"25320:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25324:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3553,"nodeType":"ExpressionStatement","src":"25309:23:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25698:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25719:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"25724:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3559,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"25728:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3555,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"25703:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"25703:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3355,"id":3564,"nodeType":"Return","src":"25691:40:10"}]}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"20270:292:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:10","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"a","nameLocation":"20589:1:10","nodeType":"VariableDeclaration","scope":3567,"src":"20581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:10"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3567,"src":"20615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:10"},"scope":4023,"src":"20567:5181:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"25921:171:10","statements":[{"id":3599,"nodeType":"UncheckedBlock","src":"25931:155:10","statements":[{"assignments":[3579],"declarations":[{"constant":false,"id":3579,"mutability":"mutable","name":"result","nameLocation":"25963:6:10","nodeType":"VariableDeclaration","scope":3599,"src":"25955:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3583,"initialValue":{"arguments":[{"id":3581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"25977:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3580,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3567,3601],"referencedDeclaration":3567,"src":"25972:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"26000:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3588,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"26042:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":3587,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"26025:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2414_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"26055:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"26064:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"26073:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3585,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26009:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26009:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3577,"id":3598,"nodeType":"Return","src":"25993:82:10"}]}]},"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"25754:86:10","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:10","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"a","nameLocation":"25867:1:10","nodeType":"VariableDeclaration","scope":3601,"src":"25859:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:10","nodeType":"VariableDeclaration","scope":3601,"src":"25870:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":3572,"nodeType":"UserDefinedTypeName","pathNode":{"id":3571,"name":"Rounding","nameLocations":["25870:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"25870:8:10"},"referencedDeclaration":2414,"src":"25870:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:10"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3601,"src":"25912:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:10"},"scope":4023,"src":"25845:247:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3691,"nodeType":"Block","src":"26281:2334:10","statements":[{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26363:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"26383:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3610,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26367:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26367:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3619,"nodeType":"ExpressionStatement","src":"26363:64:10"},{"expression":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3620,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26503:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"26525:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3624,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26530:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3621,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26508:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26508:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:10","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3633,"nodeType":"ExpressionStatement","src":"26503:56:10"},{"expression":{"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3634,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26634:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"26656:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3638,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26661:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26639:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26639:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3647,"nodeType":"ExpressionStatement","src":"26634:48:10"},{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3648,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26757:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"26779:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3652,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26784:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3649,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26762:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26762:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"26757:44:10"},{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3662,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26874:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"26896:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3666,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26901:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26879:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26879:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3675,"nodeType":"ExpressionStatement","src":"26874:42:10"},{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"26988:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"27010:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3680,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"27015:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3677,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26993:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"26993:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3689,"nodeType":"ExpressionStatement","src":"26988:41:10"},{"AST":{"nodeType":"YulBlock","src":"28490:119:10","statements":[{"nodeType":"YulAssignment","src":"28504:95:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:10"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:10"},"nodeType":"YulFunctionCall","src":"28520:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:10","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:10"},"nodeType":"YulFunctionCall","src":"28515:83:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:10"},"nodeType":"YulFunctionCall","src":"28509:90:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3607,"isOffset":false,"isSlot":false,"src":"28504:1:10","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"28512:1:10","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"28524:1:10","valueSize":1},{"declaration":3604,"isOffset":false,"isSlot":false,"src":"28527:1:10","valueSize":1}],"flags":["memory-safe"],"id":3690,"nodeType":"InlineAssembly","src":"28465:144:10"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"26098:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:10","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"x","nameLocation":"26244:1:10","nodeType":"VariableDeclaration","scope":3692,"src":"26236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:10"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"r","nameLocation":"26278:1:10","nodeType":"VariableDeclaration","scope":3692,"src":"26270:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:10"},"scope":4023,"src":"26222:2393:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"28848:175:10","statements":[{"id":3724,"nodeType":"UncheckedBlock","src":"28858:159:10","statements":[{"assignments":[3704],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"result","nameLocation":"28890:6:10","nodeType":"VariableDeclaration","scope":3724,"src":"28882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"arguments":[{"id":3706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"28904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3705,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3692,3726],"referencedDeclaration":3692,"src":"28899:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"28931:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3713,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"28973:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":3712,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"28956:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2414_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"28991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"29000:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3710,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"28940:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"28940:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3702,"id":3723,"nodeType":"Return","src":"28924:82:10"}]}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"28621:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:10","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"value","nameLocation":"28790:5:10","nodeType":"VariableDeclaration","scope":3726,"src":"28782:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:10","nodeType":"VariableDeclaration","scope":3726,"src":"28797:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":3697,"nodeType":"UserDefinedTypeName","pathNode":{"id":3696,"name":"Rounding","nameLocations":["28797:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"28797:8:10"},"referencedDeclaration":2414,"src":"28797:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:10"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"28839:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:10"},"scope":4023,"src":"28768:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3854,"nodeType":"Block","src":"29216:854:10","statements":[{"assignments":[3735],"declarations":[{"constant":false,"id":3735,"mutability":"mutable","name":"result","nameLocation":"29234:6:10","nodeType":"VariableDeclaration","scope":3854,"src":"29226:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"hexValue":"30","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:10"},{"id":3851,"nodeType":"UncheckedBlock","src":"29254:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29282:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"IfStatement","src":"29278:103:10","trueBody":{"id":3753,"nodeType":"Block","src":"29301:80:10","statements":[{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29319:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"29319:17:10"},{"expression":{"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"29354:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3752,"nodeType":"ExpressionStatement","src":"29354:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29398:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3771,"nodeType":"IfStatement","src":"29394:103:10","trueBody":{"id":3770,"nodeType":"Block","src":"29417:80:10","statements":[{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29435:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"29435:17:10"},{"expression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"29470:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3769,"nodeType":"ExpressionStatement","src":"29470:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29514:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3788,"nodeType":"IfStatement","src":"29510:103:10","trueBody":{"id":3787,"nodeType":"Block","src":"29533:80:10","statements":[{"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29551:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3782,"nodeType":"ExpressionStatement","src":"29551:17:10"},{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"29586:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ExpressionStatement","src":"29586:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29630:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3805,"nodeType":"IfStatement","src":"29626:100:10","trueBody":{"id":3804,"nodeType":"Block","src":"29648:78:10","statements":[{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29666:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3799,"nodeType":"ExpressionStatement","src":"29666:16:10"},{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"29700:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"29700:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29743:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3822,"nodeType":"IfStatement","src":"29739:100:10","trueBody":{"id":3821,"nodeType":"Block","src":"29761:78:10","statements":[{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29779:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"29779:16:10"},{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"29813:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"29813:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29856:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3839,"nodeType":"IfStatement","src":"29852:100:10","trueBody":{"id":3838,"nodeType":"Block","src":"29874:78:10","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29892:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"29892:16:10"},{"expression":{"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"29926:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3837,"nodeType":"ExpressionStatement","src":"29926:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"29969:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3850,"nodeType":"IfStatement","src":"29965:66:10","trueBody":{"id":3849,"nodeType":"Block","src":"29987:44:10","statements":[{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"30005:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ExpressionStatement","src":"30005:11:10"}]}}]},{"expression":{"id":3852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"30057:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3733,"id":3853,"nodeType":"Return","src":"30050:13:10"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"29029:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:10","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"value","nameLocation":"29177:5:10","nodeType":"VariableDeclaration","scope":3855,"src":"29169:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:10"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3855,"src":"29207:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:10"},"scope":4023,"src":"29154:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3888,"nodeType":"Block","src":"30305:177:10","statements":[{"id":3887,"nodeType":"UncheckedBlock","src":"30315:161:10","statements":[{"assignments":[3867],"declarations":[{"constant":false,"id":3867,"mutability":"mutable","name":"result","nameLocation":"30347:6:10","nodeType":"VariableDeclaration","scope":3887,"src":"30339:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3871,"initialValue":{"arguments":[{"id":3869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"30362:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3855,3889],"referencedDeclaration":3855,"src":"30356:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"30389:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3876,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"30431:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":3875,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"30414:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2414_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"30450:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"30459:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3873,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"30398:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"30398:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3865,"id":3886,"nodeType":"Return","src":"30382:83:10"}]}]},"documentation":{"id":3856,"nodeType":"StructuredDocumentation","src":"30076:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:10","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"value","nameLocation":"30247:5:10","nodeType":"VariableDeclaration","scope":3889,"src":"30239:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:10","nodeType":"VariableDeclaration","scope":3889,"src":"30254:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":3860,"nodeType":"UserDefinedTypeName","pathNode":{"id":3859,"name":"Rounding","nameLocations":["30254:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"30254:8:10"},"referencedDeclaration":2414,"src":"30254:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:10"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3889,"src":"30296:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:10"},"scope":4023,"src":"30224:258:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3965,"nodeType":"Block","src":"30800:675:10","statements":[{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3897,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"30882:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"30902:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3898,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"30886:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"30886:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3907,"nodeType":"ExpressionStatement","src":"30882:64:10"},{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"31044:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3912,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31049:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3909,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"31027:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"31027:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"nodeType":"ExpressionStatement","src":"31022:56:10"},{"expression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3922,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31153:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"31175:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3926,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31180:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3923,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"31158:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"31158:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3935,"nodeType":"ExpressionStatement","src":"31153:48:10"},{"expression":{"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31276:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"31298:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3940,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31303:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3937,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"31281:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"31281:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3949,"nodeType":"ExpressionStatement","src":"31276:44:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31426:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"31453:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3957,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"31458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3954,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"31436:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"31436:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3896,"id":3964,"nodeType":"Return","src":"31418:50:10"}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"30488:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3966,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:10","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"x","nameLocation":"30763:1:10","nodeType":"VariableDeclaration","scope":3966,"src":"30755:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:10"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"r","nameLocation":"30797:1:10","nodeType":"VariableDeclaration","scope":3966,"src":"30789:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:10"},"scope":4023,"src":"30739:736:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"31712:184:10","statements":[{"id":4001,"nodeType":"UncheckedBlock","src":"31722:168:10","statements":[{"assignments":[3978],"declarations":[{"constant":false,"id":3978,"mutability":"mutable","name":"result","nameLocation":"31754:6:10","nodeType":"VariableDeclaration","scope":4001,"src":"31746:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3982,"initialValue":{"arguments":[{"id":3980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"31770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3979,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3966,4003],"referencedDeclaration":3966,"src":"31763:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"31797:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3987,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"31839:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":3986,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"31822:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2414_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"31858:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"31873:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3984,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"31806:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"31806:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3976,"id":4000,"nodeType":"Return","src":"31790:89:10"}]}]},"documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"31481:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:10","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"value","nameLocation":"31654:5:10","nodeType":"VariableDeclaration","scope":4003,"src":"31646:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:10","nodeType":"VariableDeclaration","scope":4003,"src":"31661:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":3971,"nodeType":"UserDefinedTypeName","pathNode":{"id":3970,"name":"Rounding","nameLocations":["31661:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"31661:8:10"},"referencedDeclaration":2414,"src":"31661:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:10"},"returnParameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4003,"src":"31703:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:10"},"scope":4023,"src":"31630:266:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4021,"nodeType":"Block","src":"32094:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4014,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"32117:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}],"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4012,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:10","typeDescriptions":{}}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4011,"id":4020,"nodeType":"Return","src":"32104:31:10"}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"31902:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4022,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:10","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:10","nodeType":"VariableDeclaration","scope":4022,"src":"32046:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"},"typeName":{"id":4006,"nodeType":"UserDefinedTypeName","pathNode":{"id":4005,"name":"Rounding","nameLocations":["32046:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"32046:8:10"},"referencedDeclaration":2414,"src":"32046:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:10"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4022,"src":"32088:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4009,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:10"},"scope":4023,"src":"32020:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4024,"src":"281:31863:10","usedErrors":[],"usedEvents":[]}],"src":"103:32042:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5788]},"id":5789,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4025,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4026,"nodeType":"StructuredDocumentation","src":"218:550:11","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5788,"linearizedBaseContracts":[5788],"name":"SafeCast","nameLocation":"777:8:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4027,"nodeType":"StructuredDocumentation","src":"792:68:11","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4033,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:11","nodeType":"ErrorDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"bits","nameLocation":"908:4:11","nodeType":"VariableDeclaration","scope":4033,"src":"902:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4028,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"value","nameLocation":"922:5:11","nodeType":"VariableDeclaration","scope":4033,"src":"914:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:11"},"src":"865:64:11"},{"documentation":{"id":4034,"nodeType":"StructuredDocumentation","src":"935:75:11","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4038,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:11","nodeType":"ErrorDefinition","parameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"value","nameLocation":"1056:5:11","nodeType":"VariableDeclaration","scope":4038,"src":"1049:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4035,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:11"},"src":"1015:48:11"},{"documentation":{"id":4039,"nodeType":"StructuredDocumentation","src":"1069:67:11","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4045,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:11","nodeType":"ErrorDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"bits","nameLocation":"1183:4:11","nodeType":"VariableDeclaration","scope":4045,"src":"1177:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4040,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"value","nameLocation":"1196:5:11","nodeType":"VariableDeclaration","scope":4045,"src":"1189:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4042,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:11"},"src":"1141:62:11"},{"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"1209:75:11","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4050,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:11","nodeType":"ErrorDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"value","nameLocation":"1331:5:11","nodeType":"VariableDeclaration","scope":4050,"src":"1323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:11"},"src":"1289:49:11"},{"body":{"id":4077,"nodeType":"Block","src":"1695:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1709:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4060,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:11","memberName":"max","nodeType":"MemberAccess","src":"1717:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4071,"nodeType":"IfStatement","src":"1705:105:11","trueBody":{"id":4070,"nodeType":"Block","src":"1736:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4065,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"1757:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4069,"nodeType":"RevertStatement","src":"1750:49:11"}]}},{"expression":{"arguments":[{"id":4074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4072,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:11","typeDescriptions":{}}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4057,"id":4076,"nodeType":"Return","src":"1819:21:11"}]},"documentation":{"id":4051,"nodeType":"StructuredDocumentation","src":"1344:280:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:11","nodeType":"FunctionDefinition","parameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"value","nameLocation":"1656:5:11","nodeType":"VariableDeclaration","scope":4078,"src":"1648:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:11"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"1686:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4055,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:11"},"scope":5788,"src":"1629:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4105,"nodeType":"Block","src":"2204:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"2218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4088,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:11","memberName":"max","nodeType":"MemberAccess","src":"2226:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4099,"nodeType":"IfStatement","src":"2214:105:11","trueBody":{"id":4098,"nodeType":"Block","src":"2245:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"2302:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4093,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2266:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4097,"nodeType":"RevertStatement","src":"2259:49:11"}]}},{"expression":{"arguments":[{"id":4102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4100,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:11","typeDescriptions":{}}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4085,"id":4104,"nodeType":"Return","src":"2328:21:11"}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"1853:280:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:11","nodeType":"FunctionDefinition","parameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"value","nameLocation":"2165:5:11","nodeType":"VariableDeclaration","scope":4106,"src":"2157:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:11"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4106,"src":"2195:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4083,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:11"},"scope":5788,"src":"2138:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4133,"nodeType":"Block","src":"2713:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4116,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4115,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:11","memberName":"max","nodeType":"MemberAccess","src":"2735:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4127,"nodeType":"IfStatement","src":"2723:105:11","trueBody":{"id":4126,"nodeType":"Block","src":"2754:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"2811:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4121,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2775:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4125,"nodeType":"RevertStatement","src":"2768:49:11"}]}},{"expression":{"arguments":[{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"2852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4128,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:11","typeDescriptions":{}}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4113,"id":4132,"nodeType":"Return","src":"2837:21:11"}]},"documentation":{"id":4107,"nodeType":"StructuredDocumentation","src":"2362:280:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4134,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:11","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"value","nameLocation":"2674:5:11","nodeType":"VariableDeclaration","scope":4134,"src":"2666:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:11"},"returnParameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4134,"src":"2704:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4111,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:11"},"scope":5788,"src":"2647:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"3222:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"3236:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4144,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4143,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:11","memberName":"max","nodeType":"MemberAccess","src":"3244:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4155,"nodeType":"IfStatement","src":"3232:105:11","trueBody":{"id":4154,"nodeType":"Block","src":"3263:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"3320:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4149,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"3284:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4153,"nodeType":"RevertStatement","src":"3277:49:11"}]}},{"expression":{"arguments":[{"id":4158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"3361:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4156,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:11","typeDescriptions":{}}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4141,"id":4160,"nodeType":"Return","src":"3346:21:11"}]},"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"2871:280:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:11","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"value","nameLocation":"3183:5:11","nodeType":"VariableDeclaration","scope":4162,"src":"3175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:11"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"3213:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4139,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:11"},"scope":5788,"src":"3156:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4189,"nodeType":"Block","src":"3731:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4172,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:11","memberName":"max","nodeType":"MemberAccess","src":"3753:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4183,"nodeType":"IfStatement","src":"3741:105:11","trueBody":{"id":4182,"nodeType":"Block","src":"3772:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3829:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4177,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"3793:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4181,"nodeType":"RevertStatement","src":"3786:49:11"}]}},{"expression":{"arguments":[{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4184,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:11","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4169,"id":4188,"nodeType":"Return","src":"3855:21:11"}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"3380:280:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4190,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:11","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"value","nameLocation":"3692:5:11","nodeType":"VariableDeclaration","scope":4190,"src":"3684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:11"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4190,"src":"3722:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4167,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:11"},"scope":5788,"src":"3665:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"4240:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"4254:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4200,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:11","memberName":"max","nodeType":"MemberAccess","src":"4262:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"nodeType":"IfStatement","src":"4250:105:11","trueBody":{"id":4210,"nodeType":"Block","src":"4281:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"4338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4205,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"4302:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4209,"nodeType":"RevertStatement","src":"4295:49:11"}]}},{"expression":{"arguments":[{"id":4214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"4379:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4212,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{}}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4197,"id":4216,"nodeType":"Return","src":"4364:21:11"}]},"documentation":{"id":4191,"nodeType":"StructuredDocumentation","src":"3889:280:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:11","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"value","nameLocation":"4201:5:11","nodeType":"VariableDeclaration","scope":4218,"src":"4193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:11"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"4231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4195,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:11"},"scope":5788,"src":"4174:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"4749:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"4763:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4228,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:11","memberName":"max","nodeType":"MemberAccess","src":"4771:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"4759:105:11","trueBody":{"id":4238,"nodeType":"Block","src":"4790:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"4847:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4233,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"4811:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"RevertStatement","src":"4804:49:11"}]}},{"expression":{"arguments":[{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"4888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4240,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:11","typeDescriptions":{}}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4225,"id":4244,"nodeType":"Return","src":"4873:21:11"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"4398:280:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:11","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"value","nameLocation":"4710:5:11","nodeType":"VariableDeclaration","scope":4246,"src":"4702:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:11"},"returnParameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4246,"src":"4740:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4223,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:11"},"scope":5788,"src":"4683:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4273,"nodeType":"Block","src":"5258:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"5272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4256,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:11","memberName":"max","nodeType":"MemberAccess","src":"5280:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4267,"nodeType":"IfStatement","src":"5268:105:11","trueBody":{"id":4266,"nodeType":"Block","src":"5299:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"5356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4261,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"5320:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4265,"nodeType":"RevertStatement","src":"5313:49:11"}]}},{"expression":{"arguments":[{"id":4270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"5397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4268,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:11","typeDescriptions":{}}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4253,"id":4272,"nodeType":"Return","src":"5382:21:11"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"4907:280:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:11","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"value","nameLocation":"5219:5:11","nodeType":"VariableDeclaration","scope":4274,"src":"5211:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:11"},"returnParameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4274,"src":"5249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4251,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:11"},"scope":5788,"src":"5192:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"5767:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"5781:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4284,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:11","memberName":"max","nodeType":"MemberAccess","src":"5789:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4295,"nodeType":"IfStatement","src":"5777:105:11","trueBody":{"id":4294,"nodeType":"Block","src":"5808:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"5865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4289,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"5829:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4293,"nodeType":"RevertStatement","src":"5822:49:11"}]}},{"expression":{"arguments":[{"id":4298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"5906:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4296,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:11","typeDescriptions":{}}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4281,"id":4300,"nodeType":"Return","src":"5891:21:11"}]},"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"5416:280:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:11","nodeType":"FunctionDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"value","nameLocation":"5728:5:11","nodeType":"VariableDeclaration","scope":4302,"src":"5720:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:11"},"returnParameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4302,"src":"5758:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4279,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:11"},"scope":5788,"src":"5701:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4329,"nodeType":"Block","src":"6276:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"6290:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4312,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:11","memberName":"max","nodeType":"MemberAccess","src":"6298:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4323,"nodeType":"IfStatement","src":"6286:105:11","trueBody":{"id":4322,"nodeType":"Block","src":"6317:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"6374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4317,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"6338:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4321,"nodeType":"RevertStatement","src":"6331:49:11"}]}},{"expression":{"arguments":[{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"6415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4324,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:11","typeDescriptions":{}}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4309,"id":4328,"nodeType":"Return","src":"6400:21:11"}]},"documentation":{"id":4303,"nodeType":"StructuredDocumentation","src":"5925:280:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:11","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"value","nameLocation":"6237:5:11","nodeType":"VariableDeclaration","scope":4330,"src":"6229:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:11"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4330,"src":"6267:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4307,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:11"},"scope":5788,"src":"6210:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"6785:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"6799:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4340,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:11","memberName":"max","nodeType":"MemberAccess","src":"6807:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4351,"nodeType":"IfStatement","src":"6795:105:11","trueBody":{"id":4350,"nodeType":"Block","src":"6826:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"6883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4345,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"6847:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4349,"nodeType":"RevertStatement","src":"6840:49:11"}]}},{"expression":{"arguments":[{"id":4354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"6924:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4352,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:11","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4337,"id":4356,"nodeType":"Return","src":"6909:21:11"}]},"documentation":{"id":4331,"nodeType":"StructuredDocumentation","src":"6434:280:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:11","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"value","nameLocation":"6746:5:11","nodeType":"VariableDeclaration","scope":4358,"src":"6738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:11"},"returnParameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4358,"src":"6776:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4335,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:11"},"scope":5788,"src":"6719:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4385,"nodeType":"Block","src":"7294:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7308:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4368,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:11","memberName":"max","nodeType":"MemberAccess","src":"7316:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4379,"nodeType":"IfStatement","src":"7304:105:11","trueBody":{"id":4378,"nodeType":"Block","src":"7335:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7392:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4373,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"7356:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4377,"nodeType":"RevertStatement","src":"7349:49:11"}]}},{"expression":{"arguments":[{"id":4382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"7433:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4380,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:11","typeDescriptions":{}}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4365,"id":4384,"nodeType":"Return","src":"7418:21:11"}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"6943:280:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:11","nodeType":"FunctionDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"value","nameLocation":"7255:5:11","nodeType":"VariableDeclaration","scope":4386,"src":"7247:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:11"},"returnParameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4386,"src":"7285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4363,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:11"},"scope":5788,"src":"7228:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"7803:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4396,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:11","memberName":"max","nodeType":"MemberAccess","src":"7825:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4407,"nodeType":"IfStatement","src":"7813:105:11","trueBody":{"id":4406,"nodeType":"Block","src":"7844:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7901:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4401,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"7865:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4405,"nodeType":"RevertStatement","src":"7858:49:11"}]}},{"expression":{"arguments":[{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4408,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:11","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4393,"id":4412,"nodeType":"Return","src":"7927:21:11"}]},"documentation":{"id":4387,"nodeType":"StructuredDocumentation","src":"7452:280:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:11","nodeType":"FunctionDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"value","nameLocation":"7764:5:11","nodeType":"VariableDeclaration","scope":4414,"src":"7756:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:11"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"7794:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4391,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:11"},"scope":5788,"src":"7737:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4441,"nodeType":"Block","src":"8312:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"8326:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4424,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:11","memberName":"max","nodeType":"MemberAccess","src":"8334:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4435,"nodeType":"IfStatement","src":"8322:105:11","trueBody":{"id":4434,"nodeType":"Block","src":"8353:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"8410:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4429,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"8374:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4433,"nodeType":"RevertStatement","src":"8367:49:11"}]}},{"expression":{"arguments":[{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"8451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4436,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:11","typeDescriptions":{}}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4421,"id":4440,"nodeType":"Return","src":"8436:21:11"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"7961:280:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:11","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"value","nameLocation":"8273:5:11","nodeType":"VariableDeclaration","scope":4442,"src":"8265:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:11"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4442,"src":"8303:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4419,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:11"},"scope":5788,"src":"8246:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4469,"nodeType":"Block","src":"8821:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4452,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:11","memberName":"max","nodeType":"MemberAccess","src":"8843:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4463,"nodeType":"IfStatement","src":"8831:105:11","trueBody":{"id":4462,"nodeType":"Block","src":"8862:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"8883:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4461,"nodeType":"RevertStatement","src":"8876:49:11"}]}},{"expression":{"arguments":[{"id":4466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8960:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4464,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:11","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4449,"id":4468,"nodeType":"Return","src":"8945:21:11"}]},"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"8470:280:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:11","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"value","nameLocation":"8782:5:11","nodeType":"VariableDeclaration","scope":4470,"src":"8774:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:11"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4470,"src":"8812:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4447,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:11"},"scope":5788,"src":"8755:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"9330:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9344:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4480,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:11","memberName":"max","nodeType":"MemberAccess","src":"9352:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4491,"nodeType":"IfStatement","src":"9340:105:11","trueBody":{"id":4490,"nodeType":"Block","src":"9371:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4485,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"9392:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4489,"nodeType":"RevertStatement","src":"9385:49:11"}]}},{"expression":{"arguments":[{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9469:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4492,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:11","typeDescriptions":{}}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4477,"id":4496,"nodeType":"Return","src":"9454:21:11"}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"8979:280:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:11","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"value","nameLocation":"9291:5:11","nodeType":"VariableDeclaration","scope":4498,"src":"9283:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:11"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"9321:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4475,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:11"},"scope":5788,"src":"9264:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4525,"nodeType":"Block","src":"9839:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"9853:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4508,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:11","memberName":"max","nodeType":"MemberAccess","src":"9861:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4519,"nodeType":"IfStatement","src":"9849:105:11","trueBody":{"id":4518,"nodeType":"Block","src":"9880:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"9937:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4513,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"9901:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4517,"nodeType":"RevertStatement","src":"9894:49:11"}]}},{"expression":{"arguments":[{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"9978:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4520,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:11","typeDescriptions":{}}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4505,"id":4524,"nodeType":"Return","src":"9963:21:11"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"9488:280:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:11","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"value","nameLocation":"9800:5:11","nodeType":"VariableDeclaration","scope":4526,"src":"9792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:11"},"returnParameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4526,"src":"9830:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4503,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:11"},"scope":5788,"src":"9773:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4553,"nodeType":"Block","src":"10348:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4536,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:11","memberName":"max","nodeType":"MemberAccess","src":"10370:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4547,"nodeType":"IfStatement","src":"10358:105:11","trueBody":{"id":4546,"nodeType":"Block","src":"10389:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10446:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4541,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"10410:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4545,"nodeType":"RevertStatement","src":"10403:49:11"}]}},{"expression":{"arguments":[{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10487:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4548,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:11","typeDescriptions":{}}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4533,"id":4552,"nodeType":"Return","src":"10472:21:11"}]},"documentation":{"id":4527,"nodeType":"StructuredDocumentation","src":"9997:280:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:11","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"value","nameLocation":"10309:5:11","nodeType":"VariableDeclaration","scope":4554,"src":"10301:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:11"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4554,"src":"10339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4531,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:11"},"scope":5788,"src":"10282:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"10857:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"10871:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4564,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:11","memberName":"max","nodeType":"MemberAccess","src":"10879:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4575,"nodeType":"IfStatement","src":"10867:105:11","trueBody":{"id":4574,"nodeType":"Block","src":"10898:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"10955:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4569,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"10919:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4573,"nodeType":"RevertStatement","src":"10912:49:11"}]}},{"expression":{"arguments":[{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"10996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4576,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:11","typeDescriptions":{}}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4561,"id":4580,"nodeType":"Return","src":"10981:21:11"}]},"documentation":{"id":4555,"nodeType":"StructuredDocumentation","src":"10506:280:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:11","nodeType":"FunctionDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"value","nameLocation":"10818:5:11","nodeType":"VariableDeclaration","scope":4582,"src":"10810:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:11"},"returnParameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4582,"src":"10848:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4559,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:11"},"scope":5788,"src":"10791:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4609,"nodeType":"Block","src":"11360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4592,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4591,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:11","memberName":"max","nodeType":"MemberAccess","src":"11382:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4603,"nodeType":"IfStatement","src":"11370:103:11","trueBody":{"id":4602,"nodeType":"Block","src":"11400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4597,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"11421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4601,"nodeType":"RevertStatement","src":"11414:48:11"}]}},{"expression":{"arguments":[{"id":4606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4604,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:11","typeDescriptions":{}}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4589,"id":4608,"nodeType":"Return","src":"11482:20:11"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"11015:276:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4610,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"11322:5:11","nodeType":"VariableDeclaration","scope":4610,"src":"11314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:11"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4610,"src":"11352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4587,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:11"},"scope":5788,"src":"11296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"11860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"11874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4620,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:11","memberName":"max","nodeType":"MemberAccess","src":"11882:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4631,"nodeType":"IfStatement","src":"11870:103:11","trueBody":{"id":4630,"nodeType":"Block","src":"11900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"11956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"11921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4629,"nodeType":"RevertStatement","src":"11914:48:11"}]}},{"expression":{"arguments":[{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4632,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:11","typeDescriptions":{}}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4617,"id":4636,"nodeType":"Return","src":"11982:20:11"}]},"documentation":{"id":4611,"nodeType":"StructuredDocumentation","src":"11515:276:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"value","nameLocation":"11822:5:11","nodeType":"VariableDeclaration","scope":4638,"src":"11814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:11"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"11852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4615,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:11"},"scope":5788,"src":"11796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4665,"nodeType":"Block","src":"12360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"12374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4648,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:11","memberName":"max","nodeType":"MemberAccess","src":"12382:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4659,"nodeType":"IfStatement","src":"12370:103:11","trueBody":{"id":4658,"nodeType":"Block","src":"12400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"12456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"12421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4657,"nodeType":"RevertStatement","src":"12414:48:11"}]}},{"expression":{"arguments":[{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"12496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4660,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:11","typeDescriptions":{}}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4645,"id":4664,"nodeType":"Return","src":"12482:20:11"}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"12015:276:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"value","nameLocation":"12322:5:11","nodeType":"VariableDeclaration","scope":4666,"src":"12314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:11"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"12352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4643,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:11"},"scope":5788,"src":"12296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4693,"nodeType":"Block","src":"12860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"12874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4676,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:11","memberName":"max","nodeType":"MemberAccess","src":"12882:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4687,"nodeType":"IfStatement","src":"12870:103:11","trueBody":{"id":4686,"nodeType":"Block","src":"12900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"12956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4681,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"12921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4685,"nodeType":"RevertStatement","src":"12914:48:11"}]}},{"expression":{"arguments":[{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"12996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4688,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:11","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4673,"id":4692,"nodeType":"Return","src":"12982:20:11"}]},"documentation":{"id":4667,"nodeType":"StructuredDocumentation","src":"12515:276:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4694,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"value","nameLocation":"12822:5:11","nodeType":"VariableDeclaration","scope":4694,"src":"12814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:11"},"returnParameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4694,"src":"12852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4671,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:11"},"scope":5788,"src":"12796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"13360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"13374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4704,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:11","memberName":"max","nodeType":"MemberAccess","src":"13382:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"nodeType":"IfStatement","src":"13370:103:11","trueBody":{"id":4714,"nodeType":"Block","src":"13400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"13456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4709,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"13421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4713,"nodeType":"RevertStatement","src":"13414:48:11"}]}},{"expression":{"arguments":[{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"13496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4716,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:11","typeDescriptions":{}}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4701,"id":4720,"nodeType":"Return","src":"13482:20:11"}]},"documentation":{"id":4695,"nodeType":"StructuredDocumentation","src":"13015:276:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"value","nameLocation":"13322:5:11","nodeType":"VariableDeclaration","scope":4722,"src":"13314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:11"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4722,"src":"13352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4699,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:11"},"scope":5788,"src":"13296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"13860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"13874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4732,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4731,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:11","memberName":"max","nodeType":"MemberAccess","src":"13882:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4743,"nodeType":"IfStatement","src":"13870:103:11","trueBody":{"id":4742,"nodeType":"Block","src":"13900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"13956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4737,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"13921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4741,"nodeType":"RevertStatement","src":"13914:48:11"}]}},{"expression":{"arguments":[{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"13996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4744,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:11","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4729,"id":4748,"nodeType":"Return","src":"13982:20:11"}]},"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"13515:276:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"13822:5:11","nodeType":"VariableDeclaration","scope":4750,"src":"13814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:11"},"returnParameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"13852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4727,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:11"},"scope":5788,"src":"13796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"14360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4760,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:11","memberName":"max","nodeType":"MemberAccess","src":"14382:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4771,"nodeType":"IfStatement","src":"14370:103:11","trueBody":{"id":4770,"nodeType":"Block","src":"14400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4765,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"14421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4769,"nodeType":"RevertStatement","src":"14414:48:11"}]}},{"expression":{"arguments":[{"id":4774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4772,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:11","typeDescriptions":{}}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4757,"id":4776,"nodeType":"Return","src":"14482:20:11"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"14015:276:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"value","nameLocation":"14322:5:11","nodeType":"VariableDeclaration","scope":4778,"src":"14314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:11"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"14352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4755,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:11"},"scope":5788,"src":"14296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4805,"nodeType":"Block","src":"14860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"14874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4788,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:11","memberName":"max","nodeType":"MemberAccess","src":"14882:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4799,"nodeType":"IfStatement","src":"14870:103:11","trueBody":{"id":4798,"nodeType":"Block","src":"14900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"14956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4793,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"14921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4797,"nodeType":"RevertStatement","src":"14914:48:11"}]}},{"expression":{"arguments":[{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"14996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4800,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:11","typeDescriptions":{}}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4785,"id":4804,"nodeType":"Return","src":"14982:20:11"}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"14515:276:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4806,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"value","nameLocation":"14822:5:11","nodeType":"VariableDeclaration","scope":4806,"src":"14814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:11"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4806,"src":"14852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4783,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:11"},"scope":5788,"src":"14796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4833,"nodeType":"Block","src":"15360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"15374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4816,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4815,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:11","memberName":"max","nodeType":"MemberAccess","src":"15382:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"15370:103:11","trueBody":{"id":4826,"nodeType":"Block","src":"15400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"15456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4821,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"15421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4825,"nodeType":"RevertStatement","src":"15414:48:11"}]}},{"expression":{"arguments":[{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"15496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4828,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:11","typeDescriptions":{}}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4813,"id":4832,"nodeType":"Return","src":"15482:20:11"}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"15015:276:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"value","nameLocation":"15322:5:11","nodeType":"VariableDeclaration","scope":4834,"src":"15314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:11"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4834,"src":"15352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4811,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:11"},"scope":5788,"src":"15296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4861,"nodeType":"Block","src":"15860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"15874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4844,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4843,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:11","memberName":"max","nodeType":"MemberAccess","src":"15882:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"nodeType":"IfStatement","src":"15870:103:11","trueBody":{"id":4854,"nodeType":"Block","src":"15900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"15956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4849,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"15921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4853,"nodeType":"RevertStatement","src":"15914:48:11"}]}},{"expression":{"arguments":[{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"15996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4856,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:11","typeDescriptions":{}}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4841,"id":4860,"nodeType":"Return","src":"15982:20:11"}]},"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"15515:276:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4862,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"value","nameLocation":"15822:5:11","nodeType":"VariableDeclaration","scope":4862,"src":"15814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:11"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4862,"src":"15852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4839,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:11"},"scope":5788,"src":"15796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"16360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"16374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4872,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4871,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:11","memberName":"max","nodeType":"MemberAccess","src":"16382:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"IfStatement","src":"16370:103:11","trueBody":{"id":4882,"nodeType":"Block","src":"16400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"16456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4877,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"16421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4881,"nodeType":"RevertStatement","src":"16414:48:11"}]}},{"expression":{"arguments":[{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"16496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4884,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:11","typeDescriptions":{}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4869,"id":4888,"nodeType":"Return","src":"16482:20:11"}]},"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"16015:276:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"value","nameLocation":"16322:5:11","nodeType":"VariableDeclaration","scope":4890,"src":"16314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:11"},"returnParameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"16352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4867,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:11"},"scope":5788,"src":"16296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4917,"nodeType":"Block","src":"16854:146:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"16868:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4900,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4899,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:11","memberName":"max","nodeType":"MemberAccess","src":"16876:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"16864:101:11","trueBody":{"id":4910,"nodeType":"Block","src":"16893:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"16948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4905,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"16914:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4909,"nodeType":"RevertStatement","src":"16907:47:11"}]}},{"expression":{"arguments":[{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"16987:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4912,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:11","typeDescriptions":{}}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4897,"id":4916,"nodeType":"Return","src":"16974:19:11"}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"16515:272:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:11","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"value","nameLocation":"16817:5:11","nodeType":"VariableDeclaration","scope":4918,"src":"16809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:11"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"16847:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4895,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:11"},"scope":5788,"src":"16792:208:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4940,"nodeType":"Block","src":"17236:128:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17250:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4934,"nodeType":"IfStatement","src":"17246:81:11","trueBody":{"id":4933,"nodeType":"Block","src":"17261:66:11","statements":[{"errorCall":{"arguments":[{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17310:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4929,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"17282:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4932,"nodeType":"RevertStatement","src":"17275:41:11"}]}},{"expression":{"arguments":[{"id":4937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"17351:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:11","typeDescriptions":{}}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4925,"id":4939,"nodeType":"Return","src":"17336:21:11"}]},"documentation":{"id":4919,"nodeType":"StructuredDocumentation","src":"17006:160:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:11","nodeType":"FunctionDefinition","parameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"value","nameLocation":"17197:5:11","nodeType":"VariableDeclaration","scope":4941,"src":"17190:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4920,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:11"},"returnParameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4941,"src":"17227:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:11"},"scope":5788,"src":"17171:193:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"17761:150:11","statements":[{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"17771:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"17791:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4950,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:11","typeDescriptions":{}}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4955,"nodeType":"ExpressionStatement","src":"17771:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"17811:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"17825:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4965,"nodeType":"IfStatement","src":"17807:98:11","trueBody":{"id":4964,"nodeType":"Block","src":"17832:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"17888:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4959,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"17853:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4963,"nodeType":"RevertStatement","src":"17846:48:11"}]}}]},"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"17370:312:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:11","nodeType":"FunctionDefinition","parameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"value","nameLocation":"17712:5:11","nodeType":"VariableDeclaration","scope":4967,"src":"17705:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4943,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:11"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:11","nodeType":"VariableDeclaration","scope":4967,"src":"17742:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4946,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:11"},"scope":5788,"src":"17687:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"18308:150:11","statements":[{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"18318:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"18338:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4976,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:11","typeDescriptions":{}}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4981,"nodeType":"ExpressionStatement","src":"18318:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"18358:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"18372:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"18354:98:11","trueBody":{"id":4990,"nodeType":"Block","src":"18379:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"18435:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4985,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"18400:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4989,"nodeType":"RevertStatement","src":"18393:48:11"}]}}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"17917:312:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:11","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"18259:5:11","nodeType":"VariableDeclaration","scope":4993,"src":"18252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4969,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:11"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:11","nodeType":"VariableDeclaration","scope":4993,"src":"18289:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4972,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:11"},"scope":5788,"src":"18234:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"18855:150:11","statements":[{"expression":{"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"18865:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"18885:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5002,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:11","typeDescriptions":{}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5007,"nodeType":"ExpressionStatement","src":"18865:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"18905:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"18919:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"18901:98:11","trueBody":{"id":5016,"nodeType":"Block","src":"18926:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"18982:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5011,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"18947:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5015,"nodeType":"RevertStatement","src":"18940:48:11"}]}}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"18464:312:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:11","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"value","nameLocation":"18806:5:11","nodeType":"VariableDeclaration","scope":5019,"src":"18799:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4995,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:11"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:11","nodeType":"VariableDeclaration","scope":5019,"src":"18836:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4998,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:11"},"scope":5788,"src":"18781:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5044,"nodeType":"Block","src":"19402:150:11","statements":[{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"19412:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"19432:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5028,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:11","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5033,"nodeType":"ExpressionStatement","src":"19412:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"19452:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"19466:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"19448:98:11","trueBody":{"id":5042,"nodeType":"Block","src":"19473:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"19529:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"19494:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5041,"nodeType":"RevertStatement","src":"19487:48:11"}]}}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"19011:312:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:11","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"19353:5:11","nodeType":"VariableDeclaration","scope":5045,"src":"19346:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5021,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:11"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:11","nodeType":"VariableDeclaration","scope":5045,"src":"19383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5024,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:11"},"scope":5788,"src":"19328:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5070,"nodeType":"Block","src":"19949:150:11","statements":[{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"19959:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"19979:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5054,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:11","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5059,"nodeType":"ExpressionStatement","src":"19959:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"19999:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"20013:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"19995:98:11","trueBody":{"id":5068,"nodeType":"Block","src":"20020:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"20076:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"20041:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"RevertStatement","src":"20034:48:11"}]}}]},"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"19558:312:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:11","nodeType":"FunctionDefinition","parameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"value","nameLocation":"19900:5:11","nodeType":"VariableDeclaration","scope":5071,"src":"19893:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5047,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:11"},"returnParameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:11","nodeType":"VariableDeclaration","scope":5071,"src":"19930:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5050,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:11"},"scope":5788,"src":"19875:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"20496:150:11","statements":[{"expression":{"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"20506:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"20526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5080,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:11","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5085,"nodeType":"ExpressionStatement","src":"20506:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"20546:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"20560:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5095,"nodeType":"IfStatement","src":"20542:98:11","trueBody":{"id":5094,"nodeType":"Block","src":"20567:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"20623:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"20588:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5093,"nodeType":"RevertStatement","src":"20581:48:11"}]}}]},"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"20105:312:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:11","nodeType":"FunctionDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"value","nameLocation":"20447:5:11","nodeType":"VariableDeclaration","scope":5097,"src":"20440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5073,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:11"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:11","nodeType":"VariableDeclaration","scope":5097,"src":"20477:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5076,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:11"},"scope":5788,"src":"20422:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5122,"nodeType":"Block","src":"21043:150:11","statements":[{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"21053:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"21073:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5106,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:11","typeDescriptions":{}}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5111,"nodeType":"ExpressionStatement","src":"21053:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"21093:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"21107:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5121,"nodeType":"IfStatement","src":"21089:98:11","trueBody":{"id":5120,"nodeType":"Block","src":"21114:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"21170:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"21135:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5119,"nodeType":"RevertStatement","src":"21128:48:11"}]}}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"20652:312:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:11","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"value","nameLocation":"20994:5:11","nodeType":"VariableDeclaration","scope":5123,"src":"20987:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5099,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:11"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:11","nodeType":"VariableDeclaration","scope":5123,"src":"21024:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5102,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:11"},"scope":5788,"src":"20969:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5148,"nodeType":"Block","src":"21590:150:11","statements":[{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"21600:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"21620:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5132,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:11","typeDescriptions":{}}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5137,"nodeType":"ExpressionStatement","src":"21600:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"21640:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"21654:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5147,"nodeType":"IfStatement","src":"21636:98:11","trueBody":{"id":5146,"nodeType":"Block","src":"21661:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"21717:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"21682:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5145,"nodeType":"RevertStatement","src":"21675:48:11"}]}}]},"documentation":{"id":5124,"nodeType":"StructuredDocumentation","src":"21199:312:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:11","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"value","nameLocation":"21541:5:11","nodeType":"VariableDeclaration","scope":5149,"src":"21534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5125,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:11"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:11","nodeType":"VariableDeclaration","scope":5149,"src":"21571:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5128,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:11"},"scope":5788,"src":"21516:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"22137:150:11","statements":[{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"22147:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"22167:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5158,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:11","typeDescriptions":{}}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5163,"nodeType":"ExpressionStatement","src":"22147:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"22187:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"22201:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5173,"nodeType":"IfStatement","src":"22183:98:11","trueBody":{"id":5172,"nodeType":"Block","src":"22208:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"22264:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"22229:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5171,"nodeType":"RevertStatement","src":"22222:48:11"}]}}]},"documentation":{"id":5150,"nodeType":"StructuredDocumentation","src":"21746:312:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:11","nodeType":"FunctionDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"value","nameLocation":"22088:5:11","nodeType":"VariableDeclaration","scope":5175,"src":"22081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5151,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:11"},"returnParameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:11","nodeType":"VariableDeclaration","scope":5175,"src":"22118:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5154,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:11"},"scope":5788,"src":"22063:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5200,"nodeType":"Block","src":"22684:150:11","statements":[{"expression":{"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"22694:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"22714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5184,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:11","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5189,"nodeType":"ExpressionStatement","src":"22694:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"22734:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"22748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"22730:98:11","trueBody":{"id":5198,"nodeType":"Block","src":"22755:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"22811:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"22776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5197,"nodeType":"RevertStatement","src":"22769:48:11"}]}}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"22293:312:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:11","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"22635:5:11","nodeType":"VariableDeclaration","scope":5201,"src":"22628:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5177,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:11"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:11","nodeType":"VariableDeclaration","scope":5201,"src":"22665:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5180,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:11"},"scope":5788,"src":"22610:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"23231:150:11","statements":[{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"23241:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23261:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5210,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:11","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5215,"nodeType":"ExpressionStatement","src":"23241:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"23281:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23295:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"23277:98:11","trueBody":{"id":5224,"nodeType":"Block","src":"23302:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23358:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"23323:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5223,"nodeType":"RevertStatement","src":"23316:48:11"}]}}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"22840:312:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:11","nodeType":"FunctionDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"value","nameLocation":"23182:5:11","nodeType":"VariableDeclaration","scope":5227,"src":"23175:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5203,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:11"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:11","nodeType":"VariableDeclaration","scope":5227,"src":"23212:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5206,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:11"},"scope":5788,"src":"23157:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"23778:150:11","statements":[{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"23788:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"23808:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5236,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:11","typeDescriptions":{}}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5241,"nodeType":"ExpressionStatement","src":"23788:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"23828:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"23842:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5251,"nodeType":"IfStatement","src":"23824:98:11","trueBody":{"id":5250,"nodeType":"Block","src":"23849:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"23905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"23870:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"RevertStatement","src":"23863:48:11"}]}}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"23387:312:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:11","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"value","nameLocation":"23729:5:11","nodeType":"VariableDeclaration","scope":5253,"src":"23722:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5229,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:11"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:11","nodeType":"VariableDeclaration","scope":5253,"src":"23759:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5232,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:11"},"scope":5788,"src":"23704:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"24325:150:11","statements":[{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"24335:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"24355:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5262,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:11","typeDescriptions":{}}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5267,"nodeType":"ExpressionStatement","src":"24335:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"24375:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"24389:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"24371:98:11","trueBody":{"id":5276,"nodeType":"Block","src":"24396:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"24452:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"24417:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5275,"nodeType":"RevertStatement","src":"24410:48:11"}]}}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"23934:312:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:11","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"24276:5:11","nodeType":"VariableDeclaration","scope":5279,"src":"24269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5255,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:11"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:11","nodeType":"VariableDeclaration","scope":5279,"src":"24306:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5258,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:11"},"scope":5788,"src":"24251:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5304,"nodeType":"Block","src":"24872:150:11","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"24882:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"24902:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5288,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:11","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5293,"nodeType":"ExpressionStatement","src":"24882:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"24922:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"24936:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"nodeType":"IfStatement","src":"24918:98:11","trueBody":{"id":5302,"nodeType":"Block","src":"24943:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"24999:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"24964:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"RevertStatement","src":"24957:48:11"}]}}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"24481:312:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:11","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"value","nameLocation":"24823:5:11","nodeType":"VariableDeclaration","scope":5305,"src":"24816:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5281,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:11"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:11","nodeType":"VariableDeclaration","scope":5305,"src":"24853:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5284,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:11"},"scope":5788,"src":"24798:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"25419:150:11","statements":[{"expression":{"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"25429:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"25449:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5314,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:11","typeDescriptions":{}}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5319,"nodeType":"ExpressionStatement","src":"25429:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"25469:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"25483:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"nodeType":"IfStatement","src":"25465:98:11","trueBody":{"id":5328,"nodeType":"Block","src":"25490:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"25546:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"25511:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5327,"nodeType":"RevertStatement","src":"25504:48:11"}]}}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"25028:312:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:11","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"value","nameLocation":"25370:5:11","nodeType":"VariableDeclaration","scope":5331,"src":"25363:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5307,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:11"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:11","nodeType":"VariableDeclaration","scope":5331,"src":"25400:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5310,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:11"},"scope":5788,"src":"25345:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"25966:150:11","statements":[{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"25976:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"25996:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5340,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:11","typeDescriptions":{}}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5345,"nodeType":"ExpressionStatement","src":"25976:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"26016:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"26030:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"26012:98:11","trueBody":{"id":5354,"nodeType":"Block","src":"26037:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"26093:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"26058:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5353,"nodeType":"RevertStatement","src":"26051:48:11"}]}}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"25575:312:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:11","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"25917:5:11","nodeType":"VariableDeclaration","scope":5357,"src":"25910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5333,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:11"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:11","nodeType":"VariableDeclaration","scope":5357,"src":"25947:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5336,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:11"},"scope":5788,"src":"25892:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"26513:150:11","statements":[{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"26523:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"26543:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5366,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:11","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5371,"nodeType":"ExpressionStatement","src":"26523:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"26563:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"26577:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5381,"nodeType":"IfStatement","src":"26559:98:11","trueBody":{"id":5380,"nodeType":"Block","src":"26584:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"26640:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"26605:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"RevertStatement","src":"26598:48:11"}]}}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"26122:312:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:11","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"26464:5:11","nodeType":"VariableDeclaration","scope":5383,"src":"26457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5359,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:11"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:11","nodeType":"VariableDeclaration","scope":5383,"src":"26494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5362,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:11"},"scope":5788,"src":"26439:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5408,"nodeType":"Block","src":"27060:150:11","statements":[{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"27070:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"27090:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5392,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:11","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5397,"nodeType":"ExpressionStatement","src":"27070:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"27110:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"27124:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"27106:98:11","trueBody":{"id":5406,"nodeType":"Block","src":"27131:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"27187:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"27152:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5405,"nodeType":"RevertStatement","src":"27145:48:11"}]}}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"26669:312:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:11","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"value","nameLocation":"27011:5:11","nodeType":"VariableDeclaration","scope":5409,"src":"27004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5385,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:11"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:11","nodeType":"VariableDeclaration","scope":5409,"src":"27041:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5388,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:11"},"scope":5788,"src":"26986:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"27607:150:11","statements":[{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"27617:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"27637:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5418,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:11","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5423,"nodeType":"ExpressionStatement","src":"27617:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"27657:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"27671:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"27653:98:11","trueBody":{"id":5432,"nodeType":"Block","src":"27678:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"27734:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"27699:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"RevertStatement","src":"27692:48:11"}]}}]},"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"27216:312:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:11","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"value","nameLocation":"27558:5:11","nodeType":"VariableDeclaration","scope":5435,"src":"27551:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5411,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:11"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:11","nodeType":"VariableDeclaration","scope":5435,"src":"27588:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5414,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:11"},"scope":5788,"src":"27533:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"28147:148:11","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"28157:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"28176:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5444,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:11","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5449,"nodeType":"ExpressionStatement","src":"28157:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"28196:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"28210:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"28192:97:11","trueBody":{"id":5458,"nodeType":"Block","src":"28217:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"28272:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"28238:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"28231:47:11"}]}}]},"documentation":{"id":5436,"nodeType":"StructuredDocumentation","src":"27763:307:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:11","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"value","nameLocation":"28099:5:11","nodeType":"VariableDeclaration","scope":5461,"src":"28092:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5437,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:11"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:11","nodeType":"VariableDeclaration","scope":5461,"src":"28129:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5440,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:11"},"scope":5788,"src":"28075:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"28685:148:11","statements":[{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"28695:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"28714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5470,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:11","typeDescriptions":{}}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5475,"nodeType":"ExpressionStatement","src":"28695:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"28734:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"28748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5485,"nodeType":"IfStatement","src":"28730:97:11","trueBody":{"id":5484,"nodeType":"Block","src":"28755:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"28810:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"28776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5483,"nodeType":"RevertStatement","src":"28769:47:11"}]}}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"28301:307:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:11","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"28637:5:11","nodeType":"VariableDeclaration","scope":5487,"src":"28630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5463,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:11"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:11","nodeType":"VariableDeclaration","scope":5487,"src":"28667:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5466,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:11"},"scope":5788,"src":"28613:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"29223:148:11","statements":[{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"29233:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29252:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5496,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:11","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5501,"nodeType":"ExpressionStatement","src":"29233:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"29272:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29286:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"29268:97:11","trueBody":{"id":5510,"nodeType":"Block","src":"29293:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29348:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"29314:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5509,"nodeType":"RevertStatement","src":"29307:47:11"}]}}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"28839:307:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:11","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"29175:5:11","nodeType":"VariableDeclaration","scope":5513,"src":"29168:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:11"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:11","nodeType":"VariableDeclaration","scope":5513,"src":"29205:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5492,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:11"},"scope":5788,"src":"29151:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"29761:148:11","statements":[{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"29771:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"29790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5522,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:11","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5527,"nodeType":"ExpressionStatement","src":"29771:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"29810:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"29824:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"29806:97:11","trueBody":{"id":5536,"nodeType":"Block","src":"29831:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"29886:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"29852:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"RevertStatement","src":"29845:47:11"}]}}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"29377:307:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:11","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"29713:5:11","nodeType":"VariableDeclaration","scope":5539,"src":"29706:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5515,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:11"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:11","nodeType":"VariableDeclaration","scope":5539,"src":"29743:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5518,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:11"},"scope":5788,"src":"29689:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"30299:148:11","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"30309:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"30328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5548,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:11","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5553,"nodeType":"ExpressionStatement","src":"30309:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"30348:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5563,"nodeType":"IfStatement","src":"30344:97:11","trueBody":{"id":5562,"nodeType":"Block","src":"30369:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"30424:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"30390:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5561,"nodeType":"RevertStatement","src":"30383:47:11"}]}}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"29915:307:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:11","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"30251:5:11","nodeType":"VariableDeclaration","scope":5565,"src":"30244:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5541,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:11"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:11","nodeType":"VariableDeclaration","scope":5565,"src":"30281:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5544,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:11"},"scope":5788,"src":"30227:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"30837:148:11","statements":[{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"30847:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"30866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5574,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:11","typeDescriptions":{}}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5579,"nodeType":"ExpressionStatement","src":"30847:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"30886:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"30900:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"30882:97:11","trueBody":{"id":5588,"nodeType":"Block","src":"30907:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"30962:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"30928:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"30921:47:11"}]}}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"30453:307:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:11","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"value","nameLocation":"30789:5:11","nodeType":"VariableDeclaration","scope":5591,"src":"30782:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5567,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:11"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:11","nodeType":"VariableDeclaration","scope":5591,"src":"30819:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5570,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:11"},"scope":5788,"src":"30765:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"31375:148:11","statements":[{"expression":{"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"31385:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"31404:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5600,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:11","typeDescriptions":{}}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5605,"nodeType":"ExpressionStatement","src":"31385:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"31424:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"31438:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"31420:97:11","trueBody":{"id":5614,"nodeType":"Block","src":"31445:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"31500:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"31466:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"31459:47:11"}]}}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"30991:307:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:11","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"value","nameLocation":"31327:5:11","nodeType":"VariableDeclaration","scope":5617,"src":"31320:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5593,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:11"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:11","nodeType":"VariableDeclaration","scope":5617,"src":"31357:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5596,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:11"},"scope":5788,"src":"31303:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"31913:148:11","statements":[{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"31923:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"31942:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5626,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:11","typeDescriptions":{}}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5631,"nodeType":"ExpressionStatement","src":"31923:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"31962:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"31976:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5641,"nodeType":"IfStatement","src":"31958:97:11","trueBody":{"id":5640,"nodeType":"Block","src":"31983:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"32038:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"32004:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5639,"nodeType":"RevertStatement","src":"31997:47:11"}]}}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"31529:307:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:11","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"31865:5:11","nodeType":"VariableDeclaration","scope":5643,"src":"31858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5619,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:11"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:11","nodeType":"VariableDeclaration","scope":5643,"src":"31895:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5622,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:11"},"scope":5788,"src":"31841:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5668,"nodeType":"Block","src":"32451:148:11","statements":[{"expression":{"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"32461:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"32480:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5652,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:11","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5657,"nodeType":"ExpressionStatement","src":"32461:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"32500:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"32514:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5667,"nodeType":"IfStatement","src":"32496:97:11","trueBody":{"id":5666,"nodeType":"Block","src":"32521:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"32576:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"32542:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5665,"nodeType":"RevertStatement","src":"32535:47:11"}]}}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"32067:307:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:11","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"value","nameLocation":"32403:5:11","nodeType":"VariableDeclaration","scope":5669,"src":"32396:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5645,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:11"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:11","nodeType":"VariableDeclaration","scope":5669,"src":"32433:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5648,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:11"},"scope":5788,"src":"32379:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"32989:148:11","statements":[{"expression":{"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"32999:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"33018:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5678,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:11","typeDescriptions":{}}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5683,"nodeType":"ExpressionStatement","src":"32999:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"33038:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"33052:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5693,"nodeType":"IfStatement","src":"33034:97:11","trueBody":{"id":5692,"nodeType":"Block","src":"33059:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"33114:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"33080:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5691,"nodeType":"RevertStatement","src":"33073:47:11"}]}}]},"documentation":{"id":5670,"nodeType":"StructuredDocumentation","src":"32605:307:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:11","nodeType":"FunctionDefinition","parameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"value","nameLocation":"32941:5:11","nodeType":"VariableDeclaration","scope":5695,"src":"32934:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5671,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:11"},"returnParameters":{"id":5676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:11","nodeType":"VariableDeclaration","scope":5695,"src":"32971:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5674,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:11"},"scope":5788,"src":"32917:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"33527:148:11","statements":[{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"33537:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"33556:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5704,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:11","typeDescriptions":{}}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5709,"nodeType":"ExpressionStatement","src":"33537:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"33576:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"33590:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"33572:97:11","trueBody":{"id":5718,"nodeType":"Block","src":"33597:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"33652:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"33618:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"RevertStatement","src":"33611:47:11"}]}}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"33143:307:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:11","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"33479:5:11","nodeType":"VariableDeclaration","scope":5721,"src":"33472:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5697,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:11"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:11","nodeType":"VariableDeclaration","scope":5721,"src":"33509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5700,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:11"},"scope":5788,"src":"33455:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5746,"nodeType":"Block","src":"34058:146:11","statements":[{"expression":{"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"34068:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"34086:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5730,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:11","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5735,"nodeType":"ExpressionStatement","src":"34068:24:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"34106:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"34120:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5745,"nodeType":"IfStatement","src":"34102:96:11","trueBody":{"id":5744,"nodeType":"Block","src":"34127:71:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"34181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"34148:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5743,"nodeType":"RevertStatement","src":"34141:46:11"}]}}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"33681:302:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:11","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"34011:5:11","nodeType":"VariableDeclaration","scope":5747,"src":"34004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5723,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:11"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:11","nodeType":"VariableDeclaration","scope":5747,"src":"34041:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5726,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:11"},"scope":5788,"src":"33988:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5776,"nodeType":"Block","src":"34444:250:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"34557:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5759,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5758,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:11","memberName":"max","nodeType":"MemberAccess","src":"34573:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:11","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5770,"nodeType":"IfStatement","src":"34553:105:11","trueBody":{"id":5769,"nodeType":"Block","src":"34592:66:11","statements":[{"errorCall":{"arguments":[{"id":5766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"34641:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5765,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"34613:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5768,"nodeType":"RevertStatement","src":"34606:41:11"}]}},{"expression":{"arguments":[{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"34681:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5771,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:11","typeDescriptions":{}}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5754,"id":5775,"nodeType":"Return","src":"34667:20:11"}]},"documentation":{"id":5748,"nodeType":"StructuredDocumentation","src":"34210:165:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:11","nodeType":"FunctionDefinition","parameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"value","nameLocation":"34406:5:11","nodeType":"VariableDeclaration","scope":5777,"src":"34398:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5749,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:11"},"returnParameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5777,"src":"34436:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5752,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:11"},"scope":5788,"src":"34380:314:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"34853:87:11","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:11","statements":[{"nodeType":"YulAssignment","src":"34902:22:11","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:11"},"nodeType":"YulFunctionCall","src":"34914:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:11"},"nodeType":"YulFunctionCall","src":"34907:17:11"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5780,"isOffset":false,"isSlot":false,"src":"34921:1:11","valueSize":1},{"declaration":5783,"isOffset":false,"isSlot":false,"src":"34902:1:11","valueSize":1}],"flags":["memory-safe"],"id":5785,"nodeType":"InlineAssembly","src":"34863:71:11"}]},"documentation":{"id":5778,"nodeType":"StructuredDocumentation","src":"34700:90:11","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:11","nodeType":"FunctionDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"b","nameLocation":"34816:1:11","nodeType":"VariableDeclaration","scope":5787,"src":"34811:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5779,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:11"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"u","nameLocation":"34850:1:11","nodeType":"VariableDeclaration","scope":5787,"src":"34842:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:11"},"scope":5788,"src":"34795:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5789,"src":"769:34173:11","usedErrors":[4033,4038,4045,4050],"usedEvents":[]}],"src":"192:34751:11"},"id":11},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5788],"SignedMath":[5932]},"id":5933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5790,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5933,"sourceUnit":5789,"src":"135:40:12","symbolAliases":[{"foreign":{"id":5791,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"143:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"177:80:12","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5932,"linearizedBaseContracts":[5932],"name":"SignedMath","nameLocation":"266:10:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":5822,"nodeType":"Block","src":"746:215:12","statements":[{"id":5821,"nodeType":"UncheckedBlock","src":"756:199:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"894:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"900:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"904:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5814,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"932:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5812,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"916:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5788_$","typeString":"type(library SafeCast)"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"916:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5810,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:12","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5804,"id":5820,"nodeType":"Return","src":"887:57:12"}]}]},"documentation":{"id":5794,"nodeType":"StructuredDocumentation","src":"283:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5823,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:12","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"condition","nameLocation":"684:9:12","nodeType":"VariableDeclaration","scope":5823,"src":"679:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5795,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5798,"mutability":"mutable","name":"a","nameLocation":"702:1:12","nodeType":"VariableDeclaration","scope":5823,"src":"695:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5797,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5800,"mutability":"mutable","name":"b","nameLocation":"712:1:12","nodeType":"VariableDeclaration","scope":5823,"src":"705:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5799,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:12"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5823,"src":"738:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5802,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:12"},"scope":5932,"src":"662:299:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5841,"nodeType":"Block","src":"1102:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"1127:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"1131:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"1134:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"1137:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5833,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"1119:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5832,"id":5840,"nodeType":"Return","src":"1112:27:12"}]},"documentation":{"id":5824,"nodeType":"StructuredDocumentation","src":"967:66:12","text":" @dev Returns the largest of two signed numbers."},"id":5842,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:12","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"a","nameLocation":"1058:1:12","nodeType":"VariableDeclaration","scope":5842,"src":"1051:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5825,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5828,"mutability":"mutable","name":"b","nameLocation":"1068:1:12","nodeType":"VariableDeclaration","scope":5842,"src":"1061:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5827,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:12"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5842,"src":"1094:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5830,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:12"},"scope":5932,"src":"1038:108:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5860,"nodeType":"Block","src":"1288:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"1313:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5854,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"1317:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"1320:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5857,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"1323:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"1305:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5851,"id":5859,"nodeType":"Return","src":"1298:27:12"}]},"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"1152:67:12","text":" @dev Returns the smallest of two signed numbers."},"id":5861,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:12","nodeType":"FunctionDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"a","nameLocation":"1244:1:12","nodeType":"VariableDeclaration","scope":5861,"src":"1237:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5844,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5847,"mutability":"mutable","name":"b","nameLocation":"1254:1:12","nodeType":"VariableDeclaration","scope":5861,"src":"1247:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5846,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:12"},"returnParameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5861,"src":"1280:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5849,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:12"},"scope":5932,"src":"1224:108:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5904,"nodeType":"Block","src":"1537:162:12","statements":[{"assignments":[5872],"declarations":[{"constant":false,"id":5872,"mutability":"mutable","name":"x","nameLocation":"1606:1:12","nodeType":"VariableDeclaration","scope":5904,"src":"1599:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5871,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5885,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"1611:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"1615:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"1622:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5878,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"1626:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:12"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"1651:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5891,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"1671:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:12","typeDescriptions":{}}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5887,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:12","typeDescriptions":{}}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"1685:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"1689:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5870,"id":5903,"nodeType":"Return","src":"1644:48:12"}]},"documentation":{"id":5862,"nodeType":"StructuredDocumentation","src":"1338:126:12","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5905,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:12","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"a","nameLocation":"1493:1:12","nodeType":"VariableDeclaration","scope":5905,"src":"1486:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5863,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5866,"mutability":"mutable","name":"b","nameLocation":"1503:1:12","nodeType":"VariableDeclaration","scope":5905,"src":"1496:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5865,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:12"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5905,"src":"1529:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5868,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:12"},"scope":5932,"src":"1469:230:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"1843:767:12","statements":[{"id":5929,"nodeType":"UncheckedBlock","src":"1853:751:12","statements":[{"assignments":[5914],"declarations":[{"constant":false,"id":5914,"mutability":"mutable","name":"mask","nameLocation":"2424:4:12","nodeType":"VariableDeclaration","scope":5929,"src":"2417:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5913,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5918,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5915,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"2431:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"2576:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5922,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"2580:4:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5925,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"2588:4:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:12","typeDescriptions":{}}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5912,"id":5928,"nodeType":"Return","src":"2560:33:12"}]}]},"documentation":{"id":5906,"nodeType":"StructuredDocumentation","src":"1705:78:12","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:12","nodeType":"FunctionDefinition","parameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"n","nameLocation":"1808:1:12","nodeType":"VariableDeclaration","scope":5931,"src":"1801:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5907,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:12"},"returnParameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"1834:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:12"},"scope":5932,"src":"1788:822:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5933,"src":"258:2354:12","usedErrors":[],"usedEvents":[]}],"src":"109:2504:12"},"id":12},"contracts/MedicineRegistry.sol":{"ast":{"absolutePath":"contracts/MedicineRegistry.sol","exportedSymbols":{"AccessControl":[296],"Context":[409],"ECDSA":[2280],"ERC165":[2390],"IAccessControl":[379],"IERC165":[2402],"IMediToken":[5946],"MedicineRegistry":[7185],"MessageHashUtils":[2366],"ReentrancyGuard":[530],"Strings":[1932]},"id":7186,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5934,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":5935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7186,"sourceUnit":297,"src":"61:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7186,"sourceUnit":531,"src":"121:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":5937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7186,"sourceUnit":2281,"src":"182:62:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":5938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7186,"sourceUnit":2367,"src":"246:73:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMediToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5946,"linearizedBaseContracts":[5946],"name":"IMediToken","nameLocation":"333:10:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":5945,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"360:4:13","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"to","nameLocation":"373:2:13","nodeType":"VariableDeclaration","scope":5945,"src":"365:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5939,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5942,"mutability":"mutable","name":"amount","nameLocation":"385:6:13","nodeType":"VariableDeclaration","scope":5945,"src":"377:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"364:28:13"},"returnParameters":{"id":5944,"nodeType":"ParameterList","parameters":[],"src":"401:0:13"},"scope":5946,"src":"351:51:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7186,"src":"323:82:13","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":5948,"name":"AccessControl","nameLocations":["542:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"542:13:13"},"id":5949,"nodeType":"InheritanceSpecifier","src":"542:13:13"},{"baseName":{"id":5950,"name":"ReentrancyGuard","nameLocations":["557:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":530,"src":"557:15:13"},"id":5951,"nodeType":"InheritanceSpecifier","src":"557:15:13"}],"canonicalName":"MedicineRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":5947,"nodeType":"StructuredDocumentation","src":"409:102:13","text":" @title MedicineRegistry V2\n @dev Enhanced registry with complete supply chain tracking"},"fullyImplemented":true,"id":7185,"linearizedBaseContracts":[7185,530,296,2390,2402,379,409],"name":"MedicineRegistry","nameLocation":"522:16:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5954,"libraryName":{"id":5952,"name":"ECDSA","nameLocations":["586:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"586:5:13"},"nodeType":"UsingForDirective","src":"580:24:13","typeName":{"id":5953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"596:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":5957,"libraryName":{"id":5955,"name":"MessageHashUtils","nameLocations":["616:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2366,"src":"616:16:13"},"nodeType":"UsingForDirective","src":"610:35:13","typeName":{"id":5956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"637:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"functionSelector":"965288b0","id":5962,"mutability":"constant","name":"MANUFACTURER_ROLE","nameLocation":"691:17:13","nodeType":"VariableDeclaration","scope":7185,"src":"667:74:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"667:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d414e5546414354555245525f524f4c45","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"721:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_eefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed","typeString":"literal_string \"MANUFACTURER_ROLE\""},"value":"MANUFACTURER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_eefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed","typeString":"literal_string \"MANUFACTURER_ROLE\""}],"id":5959,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"711:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"711:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e7705db6","id":5967,"mutability":"constant","name":"VERIFIER_ROLE","nameLocation":"772:13:13","nodeType":"VariableDeclaration","scope":7185,"src":"748:66:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"748:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"56455249464945525f524f4c45","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"798:15:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""},"value":"VERIFIER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""}],"id":5964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"788:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"MedicineRegistry.ParticipantRole","id":5974,"members":[{"id":5968,"name":"NONE","nameLocation":"886:4:13","nodeType":"EnumValue","src":"886:4:13"},{"id":5969,"name":"TRANSPORTER","nameLocation":"901:11:13","nodeType":"EnumValue","src":"901:11:13"},{"id":5970,"name":"SUPPLIER","nameLocation":"923:8:13","nodeType":"EnumValue","src":"923:8:13"},{"id":5971,"name":"DISTRIBUTOR","nameLocation":"942:11:13","nodeType":"EnumValue","src":"942:11:13"},{"id":5972,"name":"WHOLESALER","nameLocation":"964:10:13","nodeType":"EnumValue","src":"964:10:13"},{"id":5973,"name":"RETAILER","nameLocation":"985:8:13","nodeType":"EnumValue","src":"985:8:13"}],"name":"ParticipantRole","nameLocation":"859:15:13","nodeType":"EnumDefinition","src":"854:146:13"},{"canonicalName":"MedicineRegistry.SupplyChainParticipant","id":5988,"members":[{"constant":false,"id":5976,"mutability":"mutable","name":"participantAddress","nameLocation":"1061:18:13","nodeType":"VariableDeclaration","scope":5988,"src":"1053:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5975,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5979,"mutability":"mutable","name":"role","nameLocation":"1106:4:13","nodeType":"VariableDeclaration","scope":5988,"src":"1090:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},"typeName":{"id":5978,"nodeType":"UserDefinedTypeName","pathNode":{"id":5977,"name":"ParticipantRole","nameLocations":["1090:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"1090:15:13"},"referencedDeclaration":5974,"src":"1090:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"visibility":"internal"},{"constant":false,"id":5981,"mutability":"mutable","name":"hasVerified","nameLocation":"1126:11:13","nodeType":"VariableDeclaration","scope":5988,"src":"1121:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5980,"name":"bool","nodeType":"ElementaryTypeName","src":"1121:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"verificationTimestamp","nameLocation":"1156:21:13","nodeType":"VariableDeclaration","scope":5988,"src":"1148:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5985,"mutability":"mutable","name":"location","nameLocation":"1195:8:13","nodeType":"VariableDeclaration","scope":5988,"src":"1188:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5984,"name":"string","nodeType":"ElementaryTypeName","src":"1188:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5987,"mutability":"mutable","name":"notes","nameLocation":"1255:5:13","nodeType":"VariableDeclaration","scope":5988,"src":"1248:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5986,"name":"string","nodeType":"ElementaryTypeName","src":"1248:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"SupplyChainParticipant","nameLocation":"1019:22:13","nodeType":"StructDefinition","scope":7185,"src":"1012:288:13","visibility":"public"},{"canonicalName":"MedicineRegistry.MedicineBatch","id":6023,"members":[{"constant":false,"id":5990,"mutability":"mutable","name":"manufacturer","nameLocation":"1352:12:13","nodeType":"VariableDeclaration","scope":6023,"src":"1344:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5989,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5992,"mutability":"mutable","name":"batchId","nameLocation":"1382:7:13","nodeType":"VariableDeclaration","scope":6023,"src":"1375:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5991,"name":"string","nodeType":"ElementaryTypeName","src":"1375:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5994,"mutability":"mutable","name":"drugName","nameLocation":"1407:8:13","nodeType":"VariableDeclaration","scope":6023,"src":"1400:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5993,"name":"string","nodeType":"ElementaryTypeName","src":"1400:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5996,"mutability":"mutable","name":"ingredients","nameLocation":"1433:11:13","nodeType":"VariableDeclaration","scope":6023,"src":"1426:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5995,"name":"string","nodeType":"ElementaryTypeName","src":"1426:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5998,"mutability":"mutable","name":"expiryDate","nameLocation":"1463:10:13","nodeType":"VariableDeclaration","scope":6023,"src":"1455:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6000,"mutability":"mutable","name":"registeredAt","nameLocation":"1492:12:13","nodeType":"VariableDeclaration","scope":6023,"src":"1484:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6004,"mutability":"mutable","name":"supplyChain","nameLocation":"1584:11:13","nodeType":"VariableDeclaration","scope":6023,"src":"1559:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage_ptr","typeString":"struct MedicineRegistry.SupplyChainParticipant[]"},"typeName":{"baseType":{"id":6002,"nodeType":"UserDefinedTypeName","pathNode":{"id":6001,"name":"SupplyChainParticipant","nameLocations":["1559:22:13"],"nodeType":"IdentifierPath","referencedDeclaration":5988,"src":"1559:22:13"},"referencedDeclaration":5988,"src":"1559:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage_ptr","typeString":"struct MedicineRegistry.SupplyChainParticipant"}},"id":6003,"nodeType":"ArrayTypeName","src":"1559:24:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage_ptr","typeString":"struct MedicineRegistry.SupplyChainParticipant[]"}},"visibility":"internal"},{"constant":false,"id":6008,"mutability":"mutable","name":"isParticipant","nameLocation":"1631:13:13","nodeType":"VariableDeclaration","scope":6023,"src":"1606:38:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6007,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6005,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1606:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6006,"name":"bool","nodeType":"ElementaryTypeName","src":"1625:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":6010,"mutability":"mutable","name":"requiredVerifications","nameLocation":"1663:21:13","nodeType":"VariableDeclaration","scope":6023,"src":"1655:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1655:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6012,"mutability":"mutable","name":"completedVerifications","nameLocation":"1703:22:13","nodeType":"VariableDeclaration","scope":6023,"src":"1695:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6014,"mutability":"mutable","name":"rewardClaimed","nameLocation":"1788:13:13","nodeType":"VariableDeclaration","scope":6023,"src":"1783:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6013,"name":"bool","nodeType":"ElementaryTypeName","src":"1783:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6016,"mutability":"mutable","name":"rewardClaimant","nameLocation":"1820:14:13","nodeType":"VariableDeclaration","scope":6023,"src":"1812:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6015,"name":"address","nodeType":"ElementaryTypeName","src":"1812:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6018,"mutability":"mutable","name":"rewardClaimedAt","nameLocation":"1853:15:13","nodeType":"VariableDeclaration","scope":6023,"src":"1845:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"1845:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6020,"mutability":"mutable","name":"exists","nameLocation":"1919:6:13","nodeType":"VariableDeclaration","scope":6023,"src":"1914:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6019,"name":"bool","nodeType":"ElementaryTypeName","src":"1914:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6022,"mutability":"mutable","name":"isFullyVerified","nameLocation":"1941:15:13","nodeType":"VariableDeclaration","scope":6023,"src":"1936:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6021,"name":"bool","nodeType":"ElementaryTypeName","src":"1936:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MedicineBatch","nameLocation":"1319:13:13","nodeType":"StructDefinition","scope":7185,"src":"1312:652:13","visibility":"public"},{"constant":false,"functionSelector":"7ef1446a","id":6028,"mutability":"mutable","name":"batches","nameLocation":"2032:7:13","nodeType":"VariableDeclaration","scope":7185,"src":"1992:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string => struct MedicineRegistry.MedicineBatch)"},"typeName":{"id":6027,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6024,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1992:32:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string => struct MedicineRegistry.MedicineBatch)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6026,"nodeType":"UserDefinedTypeName","pathNode":{"id":6025,"name":"MedicineBatch","nameLocations":["2010:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"2010:13:13"},"referencedDeclaration":6023,"src":"2010:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}}},"visibility":"public"},{"constant":false,"functionSelector":"87c71463","id":6033,"mutability":"mutable","name":"manufacturerBatches","nameLocation":"2082:19:13","nodeType":"VariableDeclaration","scope":7185,"src":"2046:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":6032,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6029,"name":"address","nodeType":"ElementaryTypeName","src":"2054:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2046:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6030,"name":"string","nodeType":"ElementaryTypeName","src":"2065:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6031,"nodeType":"ArrayTypeName","src":"2065:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"e58dd2aa","id":6038,"mutability":"mutable","name":"participantBatches","nameLocation":"2144:18:13","nodeType":"VariableDeclaration","scope":7185,"src":"2108:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":6037,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6034,"name":"address","nodeType":"ElementaryTypeName","src":"2116:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2108:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6035,"name":"string","nodeType":"ElementaryTypeName","src":"2127:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6036,"nodeType":"ArrayTypeName","src":"2127:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"89ec0b8f","id":6041,"mutability":"mutable","name":"mediToken","nameLocation":"2216:9:13","nodeType":"VariableDeclaration","scope":7185,"src":"2198:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMediToken_$5946","typeString":"contract IMediToken"},"typeName":{"id":6040,"nodeType":"UserDefinedTypeName","pathNode":{"id":6039,"name":"IMediToken","nameLocations":["2198:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5946,"src":"2198:10:13"},"referencedDeclaration":5946,"src":"2198:10:13","typeDescriptions":{"typeIdentifier":"t_contract$_IMediToken_$5946","typeString":"contract IMediToken"}},"visibility":"public"},{"constant":true,"functionSelector":"504bc3cc","id":6044,"mutability":"constant","name":"CUSTOMER_REWARD","nameLocation":"2280:15:13","nodeType":"VariableDeclaration","scope":7185,"src":"2256:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2256:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2298:7:13","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"f3baf070","id":6047,"mutability":"constant","name":"MAX_PARTICIPANTS","nameLocation":"2352:16:13","nodeType":"VariableDeclaration","scope":7185,"src":"2328:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2328:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2371:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"anonymous":false,"eventSelector":"aaed3963d690ad719845c971af2818fddeefa8e32d2ea5bd2391ba5fcc3131f4","id":6057,"name":"BatchRegistered","nameLocation":"2430:15:13","nodeType":"EventDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"2471:7:13","nodeType":"VariableDeclaration","scope":6057,"src":"2456:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6048,"name":"string","nodeType":"ElementaryTypeName","src":"2456:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6051,"indexed":true,"mutability":"mutable","name":"manufacturer","nameLocation":"2505:12:13","nodeType":"VariableDeclaration","scope":6057,"src":"2489:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6050,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6053,"indexed":false,"mutability":"mutable","name":"participantCount","nameLocation":"2536:16:13","nodeType":"VariableDeclaration","scope":6057,"src":"2528:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2571:9:13","nodeType":"VariableDeclaration","scope":6057,"src":"2563:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2563:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2445:142:13"},"src":"2424:164:13"},{"anonymous":false,"eventSelector":"6b7a69a77940fa31671b50a4966820b5ed7889f9dde2c78c2bf2d7e00b20c9d0","id":6066,"name":"ParticipantAdded","nameLocation":"2606:16:13","nodeType":"EventDefinition","parameters":{"id":6065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"2648:7:13","nodeType":"VariableDeclaration","scope":6066,"src":"2633:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6058,"name":"string","nodeType":"ElementaryTypeName","src":"2633:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6061,"indexed":true,"mutability":"mutable","name":"participant","nameLocation":"2682:11:13","nodeType":"VariableDeclaration","scope":6066,"src":"2666:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6060,"name":"address","nodeType":"ElementaryTypeName","src":"2666:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6064,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"2720:4:13","nodeType":"VariableDeclaration","scope":6066,"src":"2704:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},"typeName":{"id":6063,"nodeType":"UserDefinedTypeName","pathNode":{"id":6062,"name":"ParticipantRole","nameLocations":["2704:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"2704:15:13"},"referencedDeclaration":5974,"src":"2704:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"visibility":"internal"}],"src":"2622:109:13"},"src":"2600:132:13"},{"anonymous":false,"eventSelector":"36007a401bce1db31823d520649f66714a8006e1fe3d7e62b17b01e0e7c138cc","id":6079,"name":"BatchVerified","nameLocation":"2750:13:13","nodeType":"EventDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"2789:7:13","nodeType":"VariableDeclaration","scope":6079,"src":"2774:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6067,"name":"string","nodeType":"ElementaryTypeName","src":"2774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6070,"indexed":true,"mutability":"mutable","name":"verifier","nameLocation":"2823:8:13","nodeType":"VariableDeclaration","scope":6079,"src":"2807:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6069,"name":"address","nodeType":"ElementaryTypeName","src":"2807:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6073,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"2858:4:13","nodeType":"VariableDeclaration","scope":6079,"src":"2842:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},"typeName":{"id":6072,"nodeType":"UserDefinedTypeName","pathNode":{"id":6071,"name":"ParticipantRole","nameLocations":["2842:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"2842:15:13"},"referencedDeclaration":5974,"src":"2842:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"visibility":"internal"},{"constant":false,"id":6075,"indexed":false,"mutability":"mutable","name":"verificationNumber","nameLocation":"2881:18:13","nodeType":"VariableDeclaration","scope":6079,"src":"2873:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6077,"indexed":false,"mutability":"mutable","name":"totalRequired","nameLocation":"2918:13:13","nodeType":"VariableDeclaration","scope":6079,"src":"2910:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2910:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2763:175:13"},"src":"2744:195:13"},{"anonymous":false,"eventSelector":"65cef3a6702469117c0b8570219f54ee19f5025d27673b1450617f83c2ad75de","id":6085,"name":"BatchFullyVerified","nameLocation":"2957:18:13","nodeType":"EventDefinition","parameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"3001:7:13","nodeType":"VariableDeclaration","scope":6085,"src":"2986:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6080,"name":"string","nodeType":"ElementaryTypeName","src":"2986:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6083,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3027:9:13","nodeType":"VariableDeclaration","scope":6085,"src":"3019:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:68:13"},"src":"2951:93:13"},{"anonymous":false,"eventSelector":"b55c5d24f032fde07ae43e1c485a5204d17225fc7d79318955976775412338f4","id":6095,"name":"RewardClaimed","nameLocation":"3062:13:13","nodeType":"EventDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"3101:7:13","nodeType":"VariableDeclaration","scope":6095,"src":"3086:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6086,"name":"string","nodeType":"ElementaryTypeName","src":"3086:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6089,"indexed":true,"mutability":"mutable","name":"customer","nameLocation":"3135:8:13","nodeType":"VariableDeclaration","scope":6095,"src":"3119:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6088,"name":"address","nodeType":"ElementaryTypeName","src":"3119:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6091,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3162:6:13","nodeType":"VariableDeclaration","scope":6095,"src":"3154:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"3154:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3187:9:13","nodeType":"VariableDeclaration","scope":6095,"src":"3179:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3075:128:13"},"src":"3056:148:13"},{"anonymous":false,"eventSelector":"3628502e1f981786cb0dcb995e3e648f6721753a1158b696653760bc36fce5aa","id":6103,"name":"VerificationFailed","nameLocation":"3222:18:13","nodeType":"EventDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"3266:7:13","nodeType":"VariableDeclaration","scope":6103,"src":"3251:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6096,"name":"string","nodeType":"ElementaryTypeName","src":"3251:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6099,"indexed":true,"mutability":"mutable","name":"attemptedVerifier","nameLocation":"3300:17:13","nodeType":"VariableDeclaration","scope":6103,"src":"3284:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6098,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6101,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"3335:6:13","nodeType":"VariableDeclaration","scope":6103,"src":"3328:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6100,"name":"string","nodeType":"ElementaryTypeName","src":"3328:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3240:108:13"},"src":"3216:133:13"},{"body":{"id":6126,"nodeType":"Block","src":"3393:158:13","statements":[{"expression":{"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6108,"name":"mediToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"3404:9:13","typeDescriptions":{"typeIdentifier":"t_contract$_IMediToken_$5946","typeString":"contract IMediToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6110,"name":"_mediToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"3427:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6109,"name":"IMediToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"3416:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMediToken_$5946_$","typeString":"type(contract IMediToken)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMediToken_$5946","typeString":"contract IMediToken"}},"src":"3404:34:13","typeDescriptions":{"typeIdentifier":"t_contract$_IMediToken_$5946","typeString":"contract IMediToken"}},"id":6113,"nodeType":"ExpressionStatement","src":"3404:34:13"},{"expression":{"arguments":[{"id":6115,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3460:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6116,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6114,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3449:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3449:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6119,"nodeType":"ExpressionStatement","src":"3449:42:13"},{"expression":{"arguments":[{"id":6121,"name":"MANUFACTURER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"3513:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3532:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3536:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3532:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6120,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3502:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6125,"nodeType":"ExpressionStatement","src":"3502:41:13"}]},"id":6127,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"_mediToken","nameLocation":"3381:10:13","nodeType":"VariableDeclaration","scope":6127,"src":"3373:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6104,"name":"address","nodeType":"ElementaryTypeName","src":"3373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3372:20:13"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[],"src":"3393:0:13"},"scope":7185,"src":"3361:190:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6393,"nodeType":"Block","src":"3991:2203:13","statements":[{"expression":{"arguments":[{"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4010:25:13","subExpression":{"expression":{"baseExpression":{"id":6153,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"4011:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6155,"indexExpression":{"id":6154,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"4019:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4011:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"id":6156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4029:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"4011:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820616c726561647920657869737473","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4037:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0","typeString":"literal_string \"Batch already exists\""},"value":"Batch already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0","typeString":"literal_string \"Batch already exists\""}],"id":6152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4002:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4002:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6160,"nodeType":"ExpressionStatement","src":"4002:58:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6162,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"4079:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4093:6:13","memberName":"length","nodeType":"MemberAccess","src":"4079:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6164,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"4103:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4110:6:13","memberName":"length","nodeType":"MemberAccess","src":"4103:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4079:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d69736d61746368656420617272617973","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4118:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481","typeString":"literal_string \"Mismatched arrays\""},"value":"Mismatched arrays"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481","typeString":"literal_string \"Mismatched arrays\""}],"id":6161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4071:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4071:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"ExpressionStatement","src":"4071:67:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6171,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"4157:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4171:6:13","memberName":"length","nodeType":"MemberAccess","src":"4157:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6173,"name":"_locations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"4181:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4192:6:13","memberName":"length","nodeType":"MemberAccess","src":"4181:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4157:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d69736d617463686564206c6f636174696f6e73","id":6176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4200:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_03dbd4c4a2f4f5817b24578ebcc441c1d9ef61762853f787de380bf47b0f56ac","typeString":"literal_string \"Mismatched locations\""},"value":"Mismatched locations"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03dbd4c4a2f4f5817b24578ebcc441c1d9ef61762853f787de380bf47b0f56ac","typeString":"literal_string \"Mismatched locations\""}],"id":6170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4149:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6178,"nodeType":"ExpressionStatement","src":"4149:74:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6180,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"4242:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:13","memberName":"length","nodeType":"MemberAccess","src":"4242:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6182,"name":"MAX_PARTICIPANTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"4266:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4242:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206d616e79207061727469636970616e7473","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4284:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_44f200bf17edbd5d629caccffb2004cc809d225027162b5cf716be52302a19a3","typeString":"literal_string \"Too many participants\""},"value":"Too many participants"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44f200bf17edbd5d629caccffb2004cc809d225027162b5cf716be52302a19a3","typeString":"literal_string \"Too many participants\""}],"id":6179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4234:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6186,"nodeType":"ExpressionStatement","src":"4234:74:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6188,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"4327:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:13","memberName":"length","nodeType":"MemberAccess","src":"4327:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4350:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4327:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c65617374206f6e65207061727469636970616e74207265717569726564","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4353:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccf18108b555d0ca329a7f70497f7b350006412d6bff44726572cbb47ad64673","typeString":"literal_string \"At least one participant required\""},"value":"At least one participant required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccf18108b555d0ca329a7f70497f7b350006412d6bff44726572cbb47ad64673","typeString":"literal_string \"At least one participant required\""}],"id":6187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4319:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"ExpressionStatement","src":"4319:70:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6196,"name":"_expiryDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"4408:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6197,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4422:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4428:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4422:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578706972792064617465206d75737420626520696e20667574757265","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4439:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a536cadcf7bd7b5649e578eabe8b70cc270b36bbbf75f188de5a0a505f87821","typeString":"literal_string \"Expiry date must be in future\""},"value":"Expiry date must be in future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a536cadcf7bd7b5649e578eabe8b70cc270b36bbbf75f188de5a0a505f87821","typeString":"literal_string \"Expiry date must be in future\""}],"id":6195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4400:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6202,"nodeType":"ExpressionStatement","src":"4400:71:13"},{"assignments":[6205],"declarations":[{"constant":false,"id":6205,"mutability":"mutable","name":"batch","nameLocation":"4543:5:13","nodeType":"VariableDeclaration","scope":6393,"src":"4521:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":6204,"nodeType":"UserDefinedTypeName","pathNode":{"id":6203,"name":"MedicineBatch","nameLocations":["4521:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"4521:13:13"},"referencedDeclaration":6023,"src":"4521:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":6209,"initialValue":{"baseExpression":{"id":6206,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"4551:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6208,"indexExpression":{"id":6207,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"4559:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4551:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4521:47:13"},{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6210,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4579:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4585:12:13","memberName":"manufacturer","nodeType":"MemberAccess","referencedDeclaration":5990,"src":"4579:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4600:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4604:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4600:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4579:31:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6216,"nodeType":"ExpressionStatement","src":"4579:31:13"},{"expression":{"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6217,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4621:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4627:7:13","memberName":"batchId","nodeType":"MemberAccess","referencedDeclaration":5992,"src":"4621:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6220,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"4637:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4621:24:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6222,"nodeType":"ExpressionStatement","src":"4621:24:13"},{"expression":{"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6223,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4656:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4662:8:13","memberName":"drugName","nodeType":"MemberAccess","referencedDeclaration":5994,"src":"4656:14:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6226,"name":"_drugName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"4673:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4656:26:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6228,"nodeType":"ExpressionStatement","src":"4656:26:13"},{"expression":{"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6229,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4693:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4699:11:13","memberName":"ingredients","nodeType":"MemberAccess","referencedDeclaration":5996,"src":"4693:17:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6232,"name":"_ingredients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"4713:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4693:32:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6234,"nodeType":"ExpressionStatement","src":"4693:32:13"},{"expression":{"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6235,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4736:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4742:10:13","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"4736:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6238,"name":"_expiryDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"4755:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4736:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6240,"nodeType":"ExpressionStatement","src":"4736:30:13"},{"expression":{"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6241,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4777:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4783:12:13","memberName":"registeredAt","nodeType":"MemberAccess","referencedDeclaration":6000,"src":"4777:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6244,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4798:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4804:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4798:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4777:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6247,"nodeType":"ExpressionStatement","src":"4777:36:13"},{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6248,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4824:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4830:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"4824:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4839:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4824:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6253,"nodeType":"ExpressionStatement","src":"4824:19:13"},{"expression":{"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6254,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4854:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4860:21:13","memberName":"requiredVerifications","nodeType":"MemberAccess","referencedDeclaration":6010,"src":"4854:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6257,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"4884:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4898:6:13","memberName":"length","nodeType":"MemberAccess","src":"4884:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:50:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6260,"nodeType":"ExpressionStatement","src":"4854:50:13"},{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6261,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4915:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4921:22:13","memberName":"completedVerifications","nodeType":"MemberAccess","referencedDeclaration":6012,"src":"4915:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4946:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4915:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6266,"nodeType":"ExpressionStatement","src":"4915:32:13"},{"expression":{"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6267,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4958:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4964:15:13","memberName":"isFullyVerified","nodeType":"MemberAccess","referencedDeclaration":6022,"src":"4958:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4982:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4958:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6272,"nodeType":"ExpressionStatement","src":"4958:29:13"},{"expression":{"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6273,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"4998:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5004:13:13","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"4998:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5020:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4998:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6278,"nodeType":"ExpressionStatement","src":"4998:27:13"},{"body":{"id":6373,"nodeType":"Block","src":"5139:816:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6291,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5162:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6293,"indexExpression":{"id":6292,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5176:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5182:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6294,"name":"address","nodeType":"ElementaryTypeName","src":"5182:7:13","typeDescriptions":{}}},"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5162:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207061727469636970616e742061646472657373","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5194:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_2225061bca1349a8a3197b2978d1d80f7b352a81d212157dbc629a5dd75e6aed","typeString":"literal_string \"Invalid participant address\""},"value":"Invalid participant address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2225061bca1349a8a3197b2978d1d80f7b352a81d212157dbc629a5dd75e6aed","typeString":"literal_string \"Invalid participant address\""}],"id":6290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5154:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6301,"nodeType":"ExpressionStatement","src":"5154:70:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6303,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"5247:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"id":6305,"indexExpression":{"id":6304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5254:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5247:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6306,"name":"ParticipantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"5260:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ParticipantRole_$5974_$","typeString":"type(enum MedicineRegistry.ParticipantRole)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5276:4:13","memberName":"NONE","nodeType":"MemberAccess","referencedDeclaration":5968,"src":"5260:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"src":"5247:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726f6c65","id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5282:14:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb","typeString":"literal_string \"Invalid role\""},"value":"Invalid role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb","typeString":"literal_string \"Invalid role\""}],"id":6302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6311,"nodeType":"ExpressionStatement","src":"5239:58:13"},{"expression":{"arguments":[{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5320:38:13","subExpression":{"baseExpression":{"expression":{"id":6313,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"5321:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5327:13:13","memberName":"isParticipant","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"5321:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6318,"indexExpression":{"baseExpression":{"id":6315,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5341:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6317,"indexExpression":{"id":6316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5355:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5341:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5321:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475706c6963617465207061727469636970616e74","id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5360:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c1b25d3252708683c9e650e461dd436feb45936e806a6b4abb8704e3ce51c0b","typeString":"literal_string \"Duplicate participant\""},"value":"Duplicate participant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c1b25d3252708683c9e650e461dd436feb45936e806a6b4abb8704e3ce51c0b","typeString":"literal_string \"Duplicate participant\""}],"id":6312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5312:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6322,"nodeType":"ExpressionStatement","src":"5312:72:13"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":6329,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5498:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6331,"indexExpression":{"id":6330,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5512:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5498:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6332,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"5539:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"id":6334,"indexExpression":{"id":6333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5546:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5539:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},{"hexValue":"66616c7365","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5580:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5627:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"baseExpression":{"id":6337,"name":"_locations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"5657:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6339,"indexExpression":{"id":6338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5668:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5657:13:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5696:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":6328,"name":"SupplyChainParticipant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"5436:22:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SupplyChainParticipant_$5988_storage_ptr_$","typeString":"type(struct MedicineRegistry.SupplyChainParticipant storage pointer)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5478:18:13","5533:4:13","5567:11:13","5604:21:13","5647:8:13","5689:5:13"],"names":["participantAddress","role","hasVerified","verificationTimestamp","location","notes"],"nodeType":"FunctionCall","src":"5436:278:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_memory_ptr","typeString":"struct MedicineRegistry.SupplyChainParticipant memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_memory_ptr","typeString":"struct MedicineRegistry.SupplyChainParticipant memory"}],"expression":{"expression":{"id":6323,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"5413:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5419:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"5413:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5431:4:13","memberName":"push","nodeType":"MemberAccess","src":"5413:22:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage_ptr_$_t_struct$_SupplyChainParticipant_$5988_storage_$returns$__$attached_to$_t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage_ptr_$","typeString":"function (struct MedicineRegistry.SupplyChainParticipant storage ref[] storage pointer,struct MedicineRegistry.SupplyChainParticipant storage ref)"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5413:302:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6343,"nodeType":"ExpressionStatement","src":"5413:302:13"},{"expression":{"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6344,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"5744:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5750:13:13","memberName":"isParticipant","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"5744:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6350,"indexExpression":{"baseExpression":{"id":6346,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5764:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6348,"indexExpression":{"id":6347,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5778:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5764:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5744:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5784:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5744:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6353,"nodeType":"ExpressionStatement","src":"5744:44:13"},{"expression":{"arguments":[{"id":6360,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"5845:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":6354,"name":"participantBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"5803:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":6358,"indexExpression":{"baseExpression":{"id":6355,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5822:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6357,"indexExpression":{"id":6356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5836:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5822:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5803:36:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5840:4:13","memberName":"push","nodeType":"MemberAccess","src":"5803:41:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5803:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6362,"nodeType":"ExpressionStatement","src":"5803:51:13"},{"eventCall":{"arguments":[{"id":6364,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"5905:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":6365,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5915:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6367,"indexExpression":{"id":6366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5929:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5915:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6368,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"5933:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"id":6370,"indexExpression":{"id":6369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5940:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5933:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}],"id":6363,"name":"ParticipantAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"5888:16:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_ParticipantRole_$5974_$returns$__$","typeString":"function (string memory,address,enum MedicineRegistry.ParticipantRole)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5888:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6372,"nodeType":"EmitStatement","src":"5883:60:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5108:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6284,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5112:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5126:6:13","memberName":"length","nodeType":"MemberAccess","src":"5112:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5108:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6374,"initializationExpression":{"assignments":[6280],"declarations":[{"constant":false,"id":6280,"mutability":"mutable","name":"i","nameLocation":"5101:1:13","nodeType":"VariableDeclaration","scope":6374,"src":"5093:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"5093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6282,"initialValue":{"hexValue":"30","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5105:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5093:13:13"},"loopExpression":{"expression":{"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5134:3:13","subExpression":{"id":6287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"5134:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6289,"nodeType":"ExpressionStatement","src":"5134:3:13"},"nodeType":"ForStatement","src":"5088:867:13"},{"expression":{"arguments":[{"id":6380,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"6012:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":6375,"name":"manufacturerBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"5975:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":6378,"indexExpression":{"expression":{"id":6376,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5995:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5999:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5995:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5975:31:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6007:4:13","memberName":"push","nodeType":"MemberAccess","src":"5975:36:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5975:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6382,"nodeType":"ExpressionStatement","src":"5975:46:13"},{"eventCall":{"arguments":[{"id":6384,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"6077:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6100:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6104:6:13","memberName":"sender","nodeType":"MemberAccess","src":"6100:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6387,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"6125:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6139:6:13","memberName":"length","nodeType":"MemberAccess","src":"6125:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6389,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6160:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6166:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"6160:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6383,"name":"BatchRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"6047:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256,uint256)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6047:139:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6392,"nodeType":"EmitStatement","src":"6042:144:13"}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"3563:86:13","text":" @dev Register a new medicine batch with supply chain participants"},"functionSelector":"8010c3ae","id":6394,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6149,"name":"MANUFACTURER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"3972:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6150,"kind":"modifierInvocation","modifierName":{"id":6148,"name":"onlyRole","nameLocations":["3963:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"3963:8:13"},"nodeType":"ModifierInvocation","src":"3963:27:13"}],"name":"registerBatchWithSupplyChain","nameLocation":"3664:28:13","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"_batchId","nameLocation":"3717:8:13","nodeType":"VariableDeclaration","scope":6394,"src":"3703:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6129,"name":"string","nodeType":"ElementaryTypeName","src":"3703:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6132,"mutability":"mutable","name":"_drugName","nameLocation":"3750:9:13","nodeType":"VariableDeclaration","scope":6394,"src":"3736:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6131,"name":"string","nodeType":"ElementaryTypeName","src":"3736:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6134,"mutability":"mutable","name":"_ingredients","nameLocation":"3784:12:13","nodeType":"VariableDeclaration","scope":6394,"src":"3770:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6133,"name":"string","nodeType":"ElementaryTypeName","src":"3770:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6136,"mutability":"mutable","name":"_expiryDate","nameLocation":"3815:11:13","nodeType":"VariableDeclaration","scope":6394,"src":"3807:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3807:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6139,"mutability":"mutable","name":"_participants","nameLocation":"3854:13:13","nodeType":"VariableDeclaration","scope":6394,"src":"3837:30:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6137,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6138,"nodeType":"ArrayTypeName","src":"3837:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6143,"mutability":"mutable","name":"_roles","nameLocation":"3903:6:13","nodeType":"VariableDeclaration","scope":6394,"src":"3878:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[]"},"typeName":{"baseType":{"id":6141,"nodeType":"UserDefinedTypeName","pathNode":{"id":6140,"name":"ParticipantRole","nameLocations":["3878:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"3878:15:13"},"referencedDeclaration":5974,"src":"3878:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"id":6142,"nodeType":"ArrayTypeName","src":"3878:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_storage_ptr","typeString":"enum MedicineRegistry.ParticipantRole[]"}},"visibility":"internal"},{"constant":false,"id":6146,"mutability":"mutable","name":"_locations","nameLocation":"3936:10:13","nodeType":"VariableDeclaration","scope":6394,"src":"3920:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6144,"name":"string","nodeType":"ElementaryTypeName","src":"3920:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6145,"nodeType":"ArrayTypeName","src":"3920:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3692:261:13"},"returnParameters":{"id":6151,"nodeType":"ParameterList","parameters":[],"src":"3991:0:13"},"scope":7185,"src":"3655:2539:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6594,"nodeType":"Block","src":"6446:1982:13","statements":[{"assignments":[6408],"declarations":[{"constant":false,"id":6408,"mutability":"mutable","name":"batch","nameLocation":"6479:5:13","nodeType":"VariableDeclaration","scope":6594,"src":"6457:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":6407,"nodeType":"UserDefinedTypeName","pathNode":{"id":6406,"name":"MedicineBatch","nameLocations":["6457:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"6457:13:13"},"referencedDeclaration":6023,"src":"6457:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":6412,"initialValue":{"baseExpression":{"id":6409,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"6487:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6411,"indexExpression":{"id":6410,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"6495:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6457:47:13"},{"expression":{"arguments":[{"expression":{"id":6414,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"6523:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6529:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"6523:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820646f6573206e6f74206578697374","id":6416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6537:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""},"value":"Batch does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""}],"id":6413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6515:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6418,"nodeType":"ExpressionStatement","src":"6515:45:13"},{"expression":{"arguments":[{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6579:20:13","subExpression":{"expression":{"id":6420,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"6580:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6586:13:13","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"6580:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820616c72656164792064656c69766572656420746f20637573746f6d6572","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6601:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d537f8160039b1fcf1dc021a7b8878d2aac81c14d040c1e91f6a995f0a8256ba","typeString":"literal_string \"Batch already delivered to customer\""},"value":"Batch already delivered to customer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d537f8160039b1fcf1dc021a7b8878d2aac81c14d040c1e91f6a995f0a8256ba","typeString":"literal_string \"Batch already delivered to customer\""}],"id":6419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6571:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6571:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6425,"nodeType":"ExpressionStatement","src":"6571:68:13"},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":6427,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"6658:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6664:13:13","memberName":"isParticipant","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"6658:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6431,"indexExpression":{"expression":{"id":6429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6678:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6682:6:13","memberName":"sender","nodeType":"MemberAccess","src":"6678:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6658:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564207061727469636970616e74","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:28:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8792260baa46187182c86e5f500ce6d1d628011ee1c422112c15db5e56e632bc","typeString":"literal_string \"Not authorized participant\""},"value":"Not authorized participant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8792260baa46187182c86e5f500ce6d1d628011ee1c422112c15db5e56e632bc","typeString":"literal_string \"Not authorized participant\""}],"id":6426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6650:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6650:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6434,"nodeType":"ExpressionStatement","src":"6650:70:13"},{"assignments":[6436],"declarations":[{"constant":false,"id":6436,"mutability":"mutable","name":"messageHash","nameLocation":"6778:11:13","nodeType":"VariableDeclaration","scope":6594,"src":"6770:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6770:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6447,"initialValue":{"arguments":[{"arguments":[{"id":6440,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"6833:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6843:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6847:6:13","memberName":"sender","nodeType":"MemberAccess","src":"6843:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6443,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6855:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6861:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"6855:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6438,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6816:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6820:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"6816:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6816:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6437,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6792:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6792:90:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6770:112:13"},{"assignments":[6449],"declarations":[{"constant":false,"id":6449,"mutability":"mutable","name":"ethSignedMessageHash","nameLocation":"6901:20:13","nodeType":"VariableDeclaration","scope":6594,"src":"6893:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6893:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6453,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6450,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"6924:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6936:22:13","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"6924:34:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6893:67:13"},{"assignments":[6455],"declarations":[{"constant":false,"id":6455,"mutability":"mutable","name":"signer","nameLocation":"6979:6:13","nodeType":"VariableDeclaration","scope":6594,"src":"6971:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6460,"initialValue":{"arguments":[{"id":6458,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"7017:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6456,"name":"ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"6988:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7009:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2036,"src":"6988:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6988:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6971:57:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6462,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"7047:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7057:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7061:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7057:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7047:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7069:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":6461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7039:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6468,"nodeType":"ExpressionStatement","src":"7039:50:13"},{"assignments":[6470],"declarations":[{"constant":false,"id":6470,"mutability":"mutable","name":"verified","nameLocation":"7168:8:13","nodeType":"VariableDeclaration","scope":6594,"src":"7163:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6469,"name":"bool","nodeType":"ElementaryTypeName","src":"7163:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6472,"initialValue":{"hexValue":"66616c7365","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7179:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"7163:21:13"},{"assignments":[6475],"declarations":[{"constant":false,"id":6475,"mutability":"mutable","name":"verifierRole","nameLocation":"7211:12:13","nodeType":"VariableDeclaration","scope":6594,"src":"7195:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},"typeName":{"id":6474,"nodeType":"UserDefinedTypeName","pathNode":{"id":6473,"name":"ParticipantRole","nameLocations":["7195:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"7195:15:13"},"referencedDeclaration":5974,"src":"7195:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"visibility":"internal"}],"id":6478,"initialValue":{"expression":{"id":6476,"name":"ParticipantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"7226:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ParticipantRole_$5974_$","typeString":"type(enum MedicineRegistry.ParticipantRole)"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7242:4:13","memberName":"NONE","nodeType":"MemberAccess","referencedDeclaration":5968,"src":"7226:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"nodeType":"VariableDeclarationStatement","src":"7195:51:13"},{"body":{"id":6557,"nodeType":"Block","src":"7322:575:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":6491,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7341:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7347:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7341:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6494,"indexExpression":{"id":6493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7359:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7341:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7362:18:13","memberName":"participantAddress","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"7341:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7384:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7388:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7384:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7341:53:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6556,"nodeType":"IfStatement","src":"7337:549:13","trueBody":{"id":6555,"nodeType":"Block","src":"7396:490:13","statements":[{"expression":{"arguments":[{"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7423:33:13","subExpression":{"expression":{"baseExpression":{"expression":{"id":6500,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7424:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7430:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7424:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6503,"indexExpression":{"id":6502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7442:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7424:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7445:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"7424:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207665726966696564","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7458:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","typeString":"literal_string \"Already verified\""},"value":"Already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","typeString":"literal_string \"Already verified\""}],"id":6499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7415:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7415:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"ExpressionStatement","src":"7415:62:13"},{"expression":{"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":6509,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7514:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7520:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7514:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6513,"indexExpression":{"id":6511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7532:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7514:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7535:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"7514:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7549:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7514:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6517,"nodeType":"ExpressionStatement","src":"7514:39:13"},{"expression":{"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":6518,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7572:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7578:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7572:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6522,"indexExpression":{"id":6520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7590:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7572:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7593:21:13","memberName":"verificationTimestamp","nodeType":"MemberAccess","referencedDeclaration":5983,"src":"7572:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6524,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7617:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7623:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"7617:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7572:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6527,"nodeType":"ExpressionStatement","src":"7572:60:13"},{"expression":{"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":6528,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7651:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7657:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7651:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6532,"indexExpression":{"id":6530,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7669:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7651:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7672:5:13","memberName":"notes","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"7651:26:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6534,"name":"_notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"7680:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7651:35:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6536,"nodeType":"ExpressionStatement","src":"7651:35:13"},{"expression":{"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7723:30:13","subExpression":{"expression":{"id":6537,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7723:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7729:22:13","memberName":"completedVerifications","nodeType":"MemberAccess","referencedDeclaration":6012,"src":"7723:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6541,"nodeType":"ExpressionStatement","src":"7723:30:13"},{"expression":{"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6542,"name":"verifierRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"7772:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6543,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7787:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7793:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7787:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6546,"indexExpression":{"id":6545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7805:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7787:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7808:4:13","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":5979,"src":"7787:25:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"src":"7772:40:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"id":6549,"nodeType":"ExpressionStatement","src":"7772:40:13"},{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6550,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"7831:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7842:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7831:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6553,"nodeType":"ExpressionStatement","src":"7831:15:13"},{"id":6554,"nodeType":"Break","src":"7865:5:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7287:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":6484,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"7291:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7297:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"7291:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7309:6:13","memberName":"length","nodeType":"MemberAccess","src":"7291:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7287:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6558,"initializationExpression":{"assignments":[6480],"declarations":[{"constant":false,"id":6480,"mutability":"mutable","name":"i","nameLocation":"7280:1:13","nodeType":"VariableDeclaration","scope":6558,"src":"7272:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"7272:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6482,"initialValue":{"hexValue":"30","id":6481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7284:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7272:13:13"},"loopExpression":{"expression":{"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7317:3:13","subExpression":{"id":6488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7317:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6490,"nodeType":"ExpressionStatement","src":"7317:3:13"},"nodeType":"ForStatement","src":"7267:630:13"},{"expression":{"arguments":[{"id":6560,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"7925:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566572696669636174696f6e206661696c6564","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7935:21:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0","typeString":"literal_string \"Verification failed\""},"value":"Verification failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0","typeString":"literal_string \"Verification failed\""}],"id":6559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7917:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7917:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6563,"nodeType":"ExpressionStatement","src":"7917:40:13"},{"eventCall":{"arguments":[{"id":6565,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"8011:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8034:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8038:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8034:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6568,"name":"verifierRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"8059:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},{"expression":{"id":6569,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"8086:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8092:22:13","memberName":"completedVerifications","nodeType":"MemberAccess","referencedDeclaration":6012,"src":"8086:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6571,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"8129:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8135:21:13","memberName":"requiredVerifications","nodeType":"MemberAccess","referencedDeclaration":6010,"src":"8129:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6564,"name":"BatchVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"7983:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_ParticipantRole_$5974_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,address,enum MedicineRegistry.ParticipantRole,uint256,uint256)"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7983:184:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6574,"nodeType":"EmitStatement","src":"7978:189:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6575,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"8240:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8246:22:13","memberName":"completedVerifications","nodeType":"MemberAccess","referencedDeclaration":6012,"src":"8240:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6577,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"8272:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8278:21:13","memberName":"requiredVerifications","nodeType":"MemberAccess","referencedDeclaration":6010,"src":"8272:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8240:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6593,"nodeType":"IfStatement","src":"8236:185:13","trueBody":{"id":6592,"nodeType":"Block","src":"8301:120:13","statements":[{"expression":{"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6580,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"8316:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8322:15:13","memberName":"isFullyVerified","nodeType":"MemberAccess","referencedDeclaration":6022,"src":"8316:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8340:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8316:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6585,"nodeType":"ExpressionStatement","src":"8316:28:13"},{"eventCall":{"arguments":[{"id":6587,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"8383:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6588,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8393:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8399:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8393:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"name":"BatchFullyVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"8364:18:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6591,"nodeType":"EmitStatement","src":"8359:50:13"}]}}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"6206:73:13","text":" @dev Supply chain participant verifies batch receipt"},"functionSelector":"7069fc74","id":6595,"implemented":true,"kind":"function","modifiers":[{"id":6404,"kind":"modifierInvocation","modifierName":{"id":6403,"name":"nonReentrant","nameLocations":["6433:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"6433:12:13"},"nodeType":"ModifierInvocation","src":"6433:12:13"}],"name":"verifyBatchAsParticipant","nameLocation":"6294:24:13","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"_batchId","nameLocation":"6343:8:13","nodeType":"VariableDeclaration","scope":6595,"src":"6329:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6396,"name":"string","nodeType":"ElementaryTypeName","src":"6329:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6399,"mutability":"mutable","name":"_notes","nameLocation":"6376:6:13","nodeType":"VariableDeclaration","scope":6595,"src":"6362:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6398,"name":"string","nodeType":"ElementaryTypeName","src":"6362:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6401,"mutability":"mutable","name":"_signature","nameLocation":"6406:10:13","nodeType":"VariableDeclaration","scope":6595,"src":"6393:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6400,"name":"bytes","nodeType":"ElementaryTypeName","src":"6393:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6318:105:13"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[],"src":"6446:0:13"},"scope":7185,"src":"6285:2143:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6675,"nodeType":"Block","src":"8602:794:13","statements":[{"assignments":[6605],"declarations":[{"constant":false,"id":6605,"mutability":"mutable","name":"batch","nameLocation":"8635:5:13","nodeType":"VariableDeclaration","scope":6675,"src":"8613:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":6604,"nodeType":"UserDefinedTypeName","pathNode":{"id":6603,"name":"MedicineBatch","nameLocations":["8613:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"8613:13:13"},"referencedDeclaration":6023,"src":"8613:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":6609,"initialValue":{"baseExpression":{"id":6606,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"8643:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6608,"indexExpression":{"id":6607,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"8651:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8643:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8613:47:13"},{"expression":{"arguments":[{"expression":{"id":6611,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8689:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8695:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"8689:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820646f6573206e6f74206578697374","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8703:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""},"value":"Batch does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""}],"id":6610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8681:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8681:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6615,"nodeType":"ExpressionStatement","src":"8681:45:13"},{"expression":{"arguments":[{"expression":{"id":6617,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8745:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8751:15:13","memberName":"isFullyVerified","nodeType":"MemberAccess","referencedDeclaration":6022,"src":"8745:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537570706c7920636861696e20766572696669636174696f6e20696e636f6d706c657465","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8768:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_48ce041a86fbaeed13960e32e12cf050e0b1d32b3b104d2e8f4d2929b0d35057","typeString":"literal_string \"Supply chain verification incomplete\""},"value":"Supply chain verification incomplete"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48ce041a86fbaeed13960e32e12cf050e0b1d32b3b104d2e8f4d2929b0d35057","typeString":"literal_string \"Supply chain verification incomplete\""}],"id":6616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8737:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8737:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6621,"nodeType":"ExpressionStatement","src":"8737:70:13"},{"expression":{"arguments":[{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8826:20:13","subExpression":{"expression":{"id":6623,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8827:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8833:13:13","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"8827:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420616c726561647920636c61696d6564","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8848:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c","typeString":"literal_string \"Reward already claimed\""},"value":"Reward already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c","typeString":"literal_string \"Reward already claimed\""}],"id":6622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8818:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8818:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6628,"nodeType":"ExpressionStatement","src":"8818:55:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6630,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8892:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8898:10:13","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"8892:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6632,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8911:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8917:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8911:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8892:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65646963696e652065787069726564","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8928:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6b40f6da1100400e5dc8eb15d22b38c024a6aa550a776a85baae739343ceb28","typeString":"literal_string \"Medicine expired\""},"value":"Medicine expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6b40f6da1100400e5dc8eb15d22b38c024a6aa550a776a85baae739343ceb28","typeString":"literal_string \"Medicine expired\""}],"id":6629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8884:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8884:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6637,"nodeType":"ExpressionStatement","src":"8884:63:13"},{"expression":{"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6638,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"9003:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9009:13:13","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"9003:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9025:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9003:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6643,"nodeType":"ExpressionStatement","src":"9003:26:13"},{"expression":{"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6644,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"9040:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9046:14:13","memberName":"rewardClaimant","nodeType":"MemberAccess","referencedDeclaration":6016,"src":"9040:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9063:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9067:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9063:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9040:33:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6650,"nodeType":"ExpressionStatement","src":"9040:33:13"},{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6651,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"9084:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9090:15:13","memberName":"rewardClaimedAt","nodeType":"MemberAccess","referencedDeclaration":6018,"src":"9084:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6654,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9108:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9114:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9108:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9084:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6657,"nodeType":"ExpressionStatement","src":"9084:39:13"},{"expression":{"arguments":[{"expression":{"id":6661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9202:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9206:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9202:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6663,"name":"CUSTOMER_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"9214:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6658,"name":"mediToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"9187:9:13","typeDescriptions":{"typeIdentifier":"t_contract$_IMediToken_$5946","typeString":"contract IMediToken"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9197:4:13","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"9187:14:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9187:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6665,"nodeType":"ExpressionStatement","src":"9187:43:13"},{"eventCall":{"arguments":[{"id":6667,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"9284:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9307:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9311:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9307:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6670,"name":"CUSTOMER_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"9332:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6671,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9362:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9368:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9362:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6666,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"9256:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256,uint256)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9256:132:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6674,"nodeType":"EmitStatement","src":"9251:137:13"}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"8440:81:13","text":" @dev Customer claims reward after all verifications complete"},"functionSelector":"7037b1a7","id":6676,"implemented":true,"kind":"function","modifiers":[{"id":6601,"kind":"modifierInvocation","modifierName":{"id":6600,"name":"nonReentrant","nameLocations":["8589:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"8589:12:13"},"nodeType":"ModifierInvocation","src":"8589:12:13"}],"name":"claimCustomerReward","nameLocation":"8536:19:13","nodeType":"FunctionDefinition","parameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"_batchId","nameLocation":"8570:8:13","nodeType":"VariableDeclaration","scope":6676,"src":"8556:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6597,"name":"string","nodeType":"ElementaryTypeName","src":"8556:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8555:24:13"},"returnParameters":{"id":6602,"nodeType":"ParameterList","parameters":[],"src":"8602:0:13"},"scope":7185,"src":"8527:869:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6715,"nodeType":"Block","src":"9809:312:13","statements":[{"assignments":[6696],"declarations":[{"constant":false,"id":6696,"mutability":"mutable","name":"batch","nameLocation":"9842:5:13","nodeType":"VariableDeclaration","scope":6715,"src":"9820:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":6695,"nodeType":"UserDefinedTypeName","pathNode":{"id":6694,"name":"MedicineBatch","nameLocations":["9820:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"9820:13:13"},"referencedDeclaration":6023,"src":"9820:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":6700,"initialValue":{"baseExpression":{"id":6697,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"9850:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6699,"indexExpression":{"id":6698,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"9858:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9850:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9820:47:13"},{"expression":{"components":[{"expression":{"id":6701,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9900:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9906:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"9900:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6703,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9927:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9933:15:13","memberName":"isFullyVerified","nodeType":"MemberAccess","referencedDeclaration":6022,"src":"9927:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6705,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9963:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9969:13:13","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"9963:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6707,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9997:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10003:22:13","memberName":"completedVerifications","nodeType":"MemberAccess","referencedDeclaration":6012,"src":"9997:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6709,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"10040:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10046:21:13","memberName":"requiredVerifications","nodeType":"MemberAccess","referencedDeclaration":6010,"src":"10040:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6711,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"10082:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10088:14:13","memberName":"rewardClaimant","nodeType":"MemberAccess","referencedDeclaration":6016,"src":"10082:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9885:228:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_address_$","typeString":"tuple(bool,bool,bool,uint256,uint256,address)"}},"functionReturnParameters":6693,"id":6714,"nodeType":"Return","src":"9878:235:13"}]},"documentation":{"id":6677,"nodeType":"StructuredDocumentation","src":"9408:57:13","text":" @dev Check batch verification status"},"functionSelector":"ee6a6d0e","id":6716,"implemented":true,"kind":"function","modifiers":[],"name":"getBatchStatus","nameLocation":"9480:14:13","nodeType":"FunctionDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"_batchId","nameLocation":"9509:8:13","nodeType":"VariableDeclaration","scope":6716,"src":"9495:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6678,"name":"string","nodeType":"ElementaryTypeName","src":"9495:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9494:24:13"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"exists","nameLocation":"9591:6:13","nodeType":"VariableDeclaration","scope":6716,"src":"9586:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6681,"name":"bool","nodeType":"ElementaryTypeName","src":"9586:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6684,"mutability":"mutable","name":"isFullyVerified","nameLocation":"9617:15:13","nodeType":"VariableDeclaration","scope":6716,"src":"9612:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6683,"name":"bool","nodeType":"ElementaryTypeName","src":"9612:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6686,"mutability":"mutable","name":"rewardClaimed","nameLocation":"9652:13:13","nodeType":"VariableDeclaration","scope":6716,"src":"9647:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6685,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6688,"mutability":"mutable","name":"completedVerifications","nameLocation":"9688:22:13","nodeType":"VariableDeclaration","scope":6716,"src":"9680:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"9680:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6690,"mutability":"mutable","name":"requiredVerifications","nameLocation":"9733:21:13","nodeType":"VariableDeclaration","scope":6716,"src":"9725:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"9725:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6692,"mutability":"mutable","name":"rewardClaimant","nameLocation":"9777:14:13","nodeType":"VariableDeclaration","scope":6716,"src":"9769:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6691,"name":"address","nodeType":"ElementaryTypeName","src":"9769:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9571:231:13"},"scope":7185,"src":"9471:650:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6845,"nodeType":"Block","src":"10507:770:13","statements":[{"assignments":[6737],"declarations":[{"constant":false,"id":6737,"mutability":"mutable","name":"batch","nameLocation":"10540:5:13","nodeType":"VariableDeclaration","scope":6845,"src":"10518:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":6736,"nodeType":"UserDefinedTypeName","pathNode":{"id":6735,"name":"MedicineBatch","nameLocations":["10518:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"10518:13:13"},"referencedDeclaration":6023,"src":"10518:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":6741,"initialValue":{"baseExpression":{"id":6738,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"10548:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6740,"indexExpression":{"id":6739,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"10556:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10548:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10518:47:13"},{"expression":{"arguments":[{"expression":{"id":6743,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"10584:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10590:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"10584:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820646f6573206e6f74206578697374","id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10598:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""},"value":"Batch does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""}],"id":6742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10576:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10576:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6747,"nodeType":"ExpressionStatement","src":"10576:45:13"},{"assignments":[6749],"declarations":[{"constant":false,"id":6749,"mutability":"mutable","name":"length","nameLocation":"10650:6:13","nodeType":"VariableDeclaration","scope":6845,"src":"10642:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6748,"name":"uint256","nodeType":"ElementaryTypeName","src":"10642:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6753,"initialValue":{"expression":{"expression":{"id":6750,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"10659:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10665:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"10659:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10677:6:13","memberName":"length","nodeType":"MemberAccess","src":"10659:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10642:41:13"},{"expression":{"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6754,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"10694:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6758,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10723:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10709:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6755,"name":"address","nodeType":"ElementaryTypeName","src":"10713:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6756,"nodeType":"ArrayTypeName","src":"10713:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10709:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"10694:36:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6761,"nodeType":"ExpressionStatement","src":"10694:36:13"},{"expression":{"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6762,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"10741:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6767,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10771:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10749:21:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (enum MedicineRegistry.ParticipantRole[] memory)"},"typeName":{"baseType":{"id":6764,"nodeType":"UserDefinedTypeName","pathNode":{"id":6763,"name":"ParticipantRole","nameLocations":["10753:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"10753:15:13"},"referencedDeclaration":5974,"src":"10753:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"id":6765,"nodeType":"ArrayTypeName","src":"10753:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_storage_ptr","typeString":"enum MedicineRegistry.ParticipantRole[]"}}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10749:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"src":"10741:37:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"id":6770,"nodeType":"ExpressionStatement","src":"10741:37:13"},{"expression":{"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6771,"name":"hasVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"10789:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6775,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10814:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10803:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":6772,"name":"bool","nodeType":"ElementaryTypeName","src":"10807:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6773,"nodeType":"ArrayTypeName","src":"10807:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"10789:32:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":6778,"nodeType":"ExpressionStatement","src":"10789:32:13"},{"expression":{"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6779,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"10832:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6783,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10859:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10845:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"10849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6781,"nodeType":"ArrayTypeName","src":"10849:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"10832:34:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6786,"nodeType":"ExpressionStatement","src":"10832:34:13"},{"body":{"id":6837,"nodeType":"Block","src":"10924:272:13","statements":[{"expression":{"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6797,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"10939:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6799,"indexExpression":{"id":6798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"10952:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10939:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6800,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"10957:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10963:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"10957:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6803,"indexExpression":{"id":6802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"10975:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10957:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10978:18:13","memberName":"participantAddress","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"10957:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10939:57:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6806,"nodeType":"ExpressionStatement","src":"10939:57:13"},{"expression":{"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6807,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"11011:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},"id":6809,"indexExpression":{"id":6808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"11017:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11011:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6810,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"11022:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11028:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"11022:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6813,"indexExpression":{"id":6812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"11040:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11022:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11043:4:13","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":5979,"src":"11022:25:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"src":"11011:36:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"id":6816,"nodeType":"ExpressionStatement","src":"11011:36:13"},{"expression":{"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6817,"name":"hasVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"11062:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":6819,"indexExpression":{"id":6818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"11074:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11062:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6820,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"11079:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11085:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"11079:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6823,"indexExpression":{"id":6822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"11097:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11079:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11100:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"11079:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11062:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6826,"nodeType":"ExpressionStatement","src":"11062:49:13"},{"expression":{"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6827,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"11126:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6829,"indexExpression":{"id":6828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"11137:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11126:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6830,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"11142:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11148:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"11142:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6833,"indexExpression":{"id":6832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"11160:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11142:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11163:21:13","memberName":"verificationTimestamp","nodeType":"MemberAccess","referencedDeclaration":5983,"src":"11142:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11126:58:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6836,"nodeType":"ExpressionStatement","src":"11126:58:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"10907:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6792,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10911:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10907:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6838,"initializationExpression":{"assignments":[6788],"declarations":[{"constant":false,"id":6788,"mutability":"mutable","name":"i","nameLocation":"10900:1:13","nodeType":"VariableDeclaration","scope":6838,"src":"10892:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6787,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6790,"initialValue":{"hexValue":"30","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10904:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10892:13:13"},"loopExpression":{"expression":{"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10919:3:13","subExpression":{"id":6794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"10919:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6796,"nodeType":"ExpressionStatement","src":"10919:3:13"},"nodeType":"ForStatement","src":"10887:309:13"},{"expression":{"components":[{"id":6839,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"11224:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":6840,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"11238:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[] memory"}},{"id":6841,"name":"hasVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"11245:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":6842,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"11258:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":6843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11223:46:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,enum MedicineRegistry.ParticipantRole[] memory,bool[] memory,uint256[] memory)"}},"functionReturnParameters":6734,"id":6844,"nodeType":"Return","src":"11216:53:13"}]},"documentation":{"id":6717,"nodeType":"StructuredDocumentation","src":"10133:67:13","text":" @dev Get supply chain participants for a batch"},"functionSelector":"b838cafb","id":6846,"implemented":true,"kind":"function","modifiers":[],"name":"getSupplyChainParticipants","nameLocation":"10215:26:13","nodeType":"FunctionDefinition","parameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"_batchId","nameLocation":"10256:8:13","nodeType":"VariableDeclaration","scope":6846,"src":"10242:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6718,"name":"string","nodeType":"ElementaryTypeName","src":"10242:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10241:24:13"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6723,"mutability":"mutable","name":"participants","nameLocation":"10350:12:13","nodeType":"VariableDeclaration","scope":6846,"src":"10333:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6721,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6722,"nodeType":"ArrayTypeName","src":"10333:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6727,"mutability":"mutable","name":"roles","nameLocation":"10402:5:13","nodeType":"VariableDeclaration","scope":6846,"src":"10377:30:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr","typeString":"enum MedicineRegistry.ParticipantRole[]"},"typeName":{"baseType":{"id":6725,"nodeType":"UserDefinedTypeName","pathNode":{"id":6724,"name":"ParticipantRole","nameLocations":["10377:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5974,"src":"10377:15:13"},"referencedDeclaration":5974,"src":"10377:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_ParticipantRole_$5974","typeString":"enum MedicineRegistry.ParticipantRole"}},"id":6726,"nodeType":"ArrayTypeName","src":"10377:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_ParticipantRole_$5974_$dyn_storage_ptr","typeString":"enum MedicineRegistry.ParticipantRole[]"}},"visibility":"internal"},{"constant":false,"id":6730,"mutability":"mutable","name":"hasVerified","nameLocation":"10436:11:13","nodeType":"VariableDeclaration","scope":6846,"src":"10422:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":6728,"name":"bool","nodeType":"ElementaryTypeName","src":"10422:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6729,"nodeType":"ArrayTypeName","src":"10422:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":6733,"mutability":"mutable","name":"timestamps","nameLocation":"10479:10:13","nodeType":"VariableDeclaration","scope":6846,"src":"10462:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"10462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6732,"nodeType":"ArrayTypeName","src":"10462:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10318:182:13"},"scope":7185,"src":"10206:1071:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7011,"nodeType":"Block","src":"11639:1119:13","statements":[{"assignments":[6866],"declarations":[{"constant":false,"id":6866,"mutability":"mutable","name":"batch","nameLocation":"11672:5:13","nodeType":"VariableDeclaration","scope":7011,"src":"11650:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":6865,"nodeType":"UserDefinedTypeName","pathNode":{"id":6864,"name":"MedicineBatch","nameLocations":["11650:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"11650:13:13"},"referencedDeclaration":6023,"src":"11650:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":6870,"initialValue":{"baseExpression":{"id":6867,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"11680:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":6869,"indexExpression":{"id":6868,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"11688:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11680:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11650:47:13"},{"expression":{"arguments":[{"expression":{"id":6872,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"11716:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11722:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"11716:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820646f6573206e6f74206578697374","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11730:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""},"value":"Batch does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""}],"id":6871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11708:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11708:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"ExpressionStatement","src":"11708:45:13"},{"assignments":[6878],"declarations":[{"constant":false,"id":6878,"mutability":"mutable","name":"verifiedCount","nameLocation":"11782:13:13","nodeType":"VariableDeclaration","scope":7011,"src":"11774:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6880,"initialValue":{"hexValue":"30","id":6879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11774:25:13"},{"body":{"id":6903,"nodeType":"Block","src":"11865:114:13","statements":[{"condition":{"expression":{"baseExpression":{"expression":{"id":6893,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"11884:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11890:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"11884:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6896,"indexExpression":{"id":6895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11902:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11884:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11905:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"11884:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"11880:88:13","trueBody":{"id":6901,"nodeType":"Block","src":"11918:50:13","statements":[{"expression":{"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11937:15:13","subExpression":{"id":6898,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"11937:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6900,"nodeType":"ExpressionStatement","src":"11937:15:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11830:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":6886,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"11834:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11840:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"11834:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11852:6:13","memberName":"length","nodeType":"MemberAccess","src":"11834:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11830:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"initializationExpression":{"assignments":[6882],"declarations":[{"constant":false,"id":6882,"mutability":"mutable","name":"i","nameLocation":"11823:1:13","nodeType":"VariableDeclaration","scope":6904,"src":"11815:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"11815:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6884,"initialValue":{"hexValue":"30","id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11827:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11815:13:13"},"loopExpression":{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11860:3:13","subExpression":{"id":6890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11860:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6892,"nodeType":"ExpressionStatement","src":"11860:3:13"},"nodeType":"ForStatement","src":"11810:169:13"},{"expression":{"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6905,"name":"verifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"11999:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6909,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"12025:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12011:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6906,"name":"address","nodeType":"ElementaryTypeName","src":"12015:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6907,"nodeType":"ArrayTypeName","src":"12015:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12011:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"11999:40:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6912,"nodeType":"ExpressionStatement","src":"11999:40:13"},{"expression":{"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6913,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"12050:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6917,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"12077:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12063:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6915,"nodeType":"ArrayTypeName","src":"12067:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"12050:41:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6920,"nodeType":"ExpressionStatement","src":"12050:41:13"},{"expression":{"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6921,"name":"locations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"12102:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6925,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"12127:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12114:12:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6922,"name":"string","nodeType":"ElementaryTypeName","src":"12118:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6923,"nodeType":"ArrayTypeName","src":"12118:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12114:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"12102:39:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6928,"nodeType":"ExpressionStatement","src":"12102:39:13"},{"expression":{"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6929,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"12152:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6933,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"12173:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12160:12:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6930,"name":"string","nodeType":"ElementaryTypeName","src":"12164:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6931,"nodeType":"ArrayTypeName","src":"12164:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"12152:35:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6936,"nodeType":"ExpressionStatement","src":"12152:35:13"},{"assignments":[6938],"declarations":[{"constant":false,"id":6938,"mutability":"mutable","name":"index","nameLocation":"12216:5:13","nodeType":"VariableDeclaration","scope":7011,"src":"12208:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"12208:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6940,"initialValue":{"hexValue":"30","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12224:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12208:17:13"},{"body":{"id":7003,"nodeType":"Block","src":"12291:391:13","statements":[{"condition":{"expression":{"baseExpression":{"expression":{"id":6953,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12310:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12316:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"12310:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6956,"indexExpression":{"id":6955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12328:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12310:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12331:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"12310:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7002,"nodeType":"IfStatement","src":"12306:365:13","trueBody":{"id":7001,"nodeType":"Block","src":"12344:327:13","statements":[{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6958,"name":"verifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"12363:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6960,"indexExpression":{"id":6959,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12373:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12363:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6961,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12382:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12388:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"12382:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6964,"indexExpression":{"id":6963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12400:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12382:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12403:18:13","memberName":"participantAddress","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"12382:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12363:58:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6967,"nodeType":"ExpressionStatement","src":"12363:58:13"},{"expression":{"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6968,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"12440:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6970,"indexExpression":{"id":6969,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12440:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6971,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12460:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12466:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"12460:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6974,"indexExpression":{"id":6973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12478:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12460:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12481:21:13","memberName":"verificationTimestamp","nodeType":"MemberAccess","referencedDeclaration":5983,"src":"12460:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12440:62:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6977,"nodeType":"ExpressionStatement","src":"12440:62:13"},{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6978,"name":"locations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"12521:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6980,"indexExpression":{"id":6979,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12531:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12521:16:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6981,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12540:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12546:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"12540:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6984,"indexExpression":{"id":6983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12558:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12540:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12561:8:13","memberName":"location","nodeType":"MemberAccess","referencedDeclaration":5985,"src":"12540:29:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"12521:48:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6987,"nodeType":"ExpressionStatement","src":"12521:48:13"},{"expression":{"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6988,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"12588:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6990,"indexExpression":{"id":6989,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12594:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12588:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":6991,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12603:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12609:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"12603:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6994,"indexExpression":{"id":6993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12621:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12603:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":6995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12624:5:13","memberName":"notes","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"12603:26:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"12588:41:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6997,"nodeType":"ExpressionStatement","src":"12588:41:13"},{"expression":{"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12648:7:13","subExpression":{"id":6998,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"12648:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7000,"nodeType":"ExpressionStatement","src":"12648:7:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12256:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":6946,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12260:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":6947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12266:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"12260:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12278:6:13","memberName":"length","nodeType":"MemberAccess","src":"12260:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12256:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7004,"initializationExpression":{"assignments":[6942],"declarations":[{"constant":false,"id":6942,"mutability":"mutable","name":"i","nameLocation":"12249:1:13","nodeType":"VariableDeclaration","scope":7004,"src":"12241:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"12241:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6944,"initialValue":{"hexValue":"30","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12253:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12241:13:13"},"loopExpression":{"expression":{"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12286:3:13","subExpression":{"id":6950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"12286:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6952,"nodeType":"ExpressionStatement","src":"12286:3:13"},"nodeType":"ForStatement","src":"12236:446:13"},{"expression":{"components":[{"id":7005,"name":"verifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"12710:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":7006,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"12721:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7007,"name":"locations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"12733:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":7008,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"12744:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":7009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12709:41:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory,string memory[] memory,string memory[] memory)"}},"functionReturnParameters":6863,"id":7010,"nodeType":"Return","src":"12702:48:13"}]},"documentation":{"id":6847,"nodeType":"StructuredDocumentation","src":"11289:63:13","text":" @dev Get verification history with details"},"functionSelector":"d96d97a5","id":7012,"implemented":true,"kind":"function","modifiers":[],"name":"getVerificationHistory","nameLocation":"11367:22:13","nodeType":"FunctionDefinition","parameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"_batchId","nameLocation":"11404:8:13","nodeType":"VariableDeclaration","scope":7012,"src":"11390:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6848,"name":"string","nodeType":"ElementaryTypeName","src":"11390:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11389:24:13"},"returnParameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"verifiers","nameLocation":"11495:9:13","nodeType":"VariableDeclaration","scope":7012,"src":"11478:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6851,"name":"address","nodeType":"ElementaryTypeName","src":"11478:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6852,"nodeType":"ArrayTypeName","src":"11478:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6856,"mutability":"mutable","name":"timestamps","nameLocation":"11536:10:13","nodeType":"VariableDeclaration","scope":7012,"src":"11519:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6854,"name":"uint256","nodeType":"ElementaryTypeName","src":"11519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6855,"nodeType":"ArrayTypeName","src":"11519:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6859,"mutability":"mutable","name":"locations","nameLocation":"11577:9:13","nodeType":"VariableDeclaration","scope":7012,"src":"11561:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6857,"name":"string","nodeType":"ElementaryTypeName","src":"11561:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6858,"nodeType":"ArrayTypeName","src":"11561:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"notes","nameLocation":"11617:5:13","nodeType":"VariableDeclaration","scope":7012,"src":"11601:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6860,"name":"string","nodeType":"ElementaryTypeName","src":"11601:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6861,"nodeType":"ArrayTypeName","src":"11601:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11463:170:13"},"scope":7185,"src":"11358:1400:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7081,"nodeType":"Block","src":"13004:467:13","statements":[{"assignments":[7026],"declarations":[{"constant":false,"id":7026,"mutability":"mutable","name":"batch","nameLocation":"13037:5:13","nodeType":"VariableDeclaration","scope":7081,"src":"13015:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":7025,"nodeType":"UserDefinedTypeName","pathNode":{"id":7024,"name":"MedicineBatch","nameLocations":["13015:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"13015:13:13"},"referencedDeclaration":6023,"src":"13015:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":7030,"initialValue":{"baseExpression":{"id":7027,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"13045:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":7029,"indexExpression":{"id":7028,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"13053:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13045:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13015:47:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13077:13:13","subExpression":{"expression":{"id":7031,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"13078:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13084:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"13078:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13094:34:13","subExpression":{"baseExpression":{"expression":{"id":7034,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"13095:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13101:13:13","memberName":"isParticipant","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"13095:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7037,"indexExpression":{"id":7036,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"13115:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13095:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13077:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7045,"nodeType":"IfStatement","src":"13073:105:13","trueBody":{"id":7044,"nodeType":"Block","src":"13130:48:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13153:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":7041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13160:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":7042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13152:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$","typeString":"tuple(bool,bool)"}},"functionReturnParameters":7023,"id":7043,"nodeType":"Return","src":"13145:21:13"}]}},{"body":{"id":7075,"nodeType":"Block","src":"13253:169:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":7058,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"13272:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13278:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"13272:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7061,"indexExpression":{"id":7060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"13290:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13272:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":7062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13293:18:13","memberName":"participantAddress","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"13272:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7063,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"13315:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13272:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7074,"nodeType":"IfStatement","src":"13268:143:13","trueBody":{"id":7073,"nodeType":"Block","src":"13329:82:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13356:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"baseExpression":{"expression":{"id":7066,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"13362:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13368:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"13362:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7069,"indexExpression":{"id":7068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"13380:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13362:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":7070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13383:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"13362:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13355:40:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$","typeString":"tuple(bool,bool)"}},"functionReturnParameters":7023,"id":7072,"nodeType":"Return","src":"13348:47:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"13218:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7051,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"13222:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13228:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"13222:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13240:6:13","memberName":"length","nodeType":"MemberAccess","src":"13222:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7076,"initializationExpression":{"assignments":[7047],"declarations":[{"constant":false,"id":7047,"mutability":"mutable","name":"i","nameLocation":"13211:1:13","nodeType":"VariableDeclaration","scope":7076,"src":"13203:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7046,"name":"uint256","nodeType":"ElementaryTypeName","src":"13203:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7049,"initialValue":{"hexValue":"30","id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13215:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13203:13:13"},"loopExpression":{"expression":{"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13248:3:13","subExpression":{"id":7055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"13248:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7057,"nodeType":"ExpressionStatement","src":"13248:3:13"},"nodeType":"ForStatement","src":"13198:224:13"},{"expression":{"components":[{"hexValue":"66616c7365","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13450:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13457:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":7079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13449:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$","typeString":"tuple(bool,bool)"}},"functionReturnParameters":7023,"id":7080,"nodeType":"Return","src":"13442:21:13"}]},"documentation":{"id":7013,"nodeType":"StructuredDocumentation","src":"12770:61:13","text":" @dev Check if address can verify a batch"},"functionSelector":"a5e8f634","id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"canVerifyBatch","nameLocation":"12846:14:13","nodeType":"FunctionDefinition","parameters":{"id":7018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"mutability":"mutable","name":"_batchId","nameLocation":"12875:8:13","nodeType":"VariableDeclaration","scope":7082,"src":"12861:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7014,"name":"string","nodeType":"ElementaryTypeName","src":"12861:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7017,"mutability":"mutable","name":"_participant","nameLocation":"12893:12:13","nodeType":"VariableDeclaration","scope":7082,"src":"12885:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7016,"name":"address","nodeType":"ElementaryTypeName","src":"12885:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12860:46:13"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7020,"mutability":"mutable","name":"canVerify","nameLocation":"12965:9:13","nodeType":"VariableDeclaration","scope":7082,"src":"12960:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7019,"name":"bool","nodeType":"ElementaryTypeName","src":"12960:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7022,"mutability":"mutable","name":"alreadyVerified","nameLocation":"12981:15:13","nodeType":"VariableDeclaration","scope":7082,"src":"12976:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7021,"name":"bool","nodeType":"ElementaryTypeName","src":"12976:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12959:38:13"},"scope":7185,"src":"12837:634:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7183,"nodeType":"Block","src":"13738:783:13","statements":[{"assignments":[7097],"declarations":[{"constant":false,"id":7097,"mutability":"mutable","name":"batch","nameLocation":"13771:5:13","nodeType":"VariableDeclaration","scope":7183,"src":"13749:27:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"},"typeName":{"id":7096,"nodeType":"UserDefinedTypeName","pathNode":{"id":7095,"name":"MedicineBatch","nameLocations":["13749:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":6023,"src":"13749:13:13"},"referencedDeclaration":6023,"src":"13749:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch"}},"visibility":"internal"}],"id":7101,"initialValue":{"baseExpression":{"id":7098,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"13779:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_MedicineBatch_$6023_storage_$","typeString":"mapping(string memory => struct MedicineRegistry.MedicineBatch storage ref)"}},"id":7100,"indexExpression":{"id":7099,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"13787:8:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13779:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage","typeString":"struct MedicineRegistry.MedicineBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13749:47:13"},{"expression":{"arguments":[{"expression":{"id":7103,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"13815:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13821:6:13","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6020,"src":"13815:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820646f6573206e6f74206578697374","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13829:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""},"value":"Batch does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395","typeString":"literal_string \"Batch does not exist\""}],"id":7102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13807:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13807:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7107,"nodeType":"ExpressionStatement","src":"13807:45:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7109,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"13871:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13877:12:13","memberName":"manufacturer","nodeType":"MemberAccess","referencedDeclaration":5990,"src":"13871:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13893:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13897:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13893:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13871:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206261746368206f776e6572","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13905:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6b6647033f03da42f260fb0af824a51252976e16703a583d969c6e3b42e40b4","typeString":"literal_string \"Not batch owner\""},"value":"Not batch owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6b6647033f03da42f260fb0af824a51252976e16703a583d969c6e3b42e40b4","typeString":"literal_string \"Not batch owner\""}],"id":7108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13863:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13863:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7116,"nodeType":"ExpressionStatement","src":"13863:60:13"},{"expression":{"arguments":[{"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13942:20:13","subExpression":{"expression":{"id":7118,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"13943:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13949:13:13","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":6014,"src":"13943:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820616c72656164792064656c697665726564","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13964:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e7ee47d2b4d578ad760680b3433f2a95168c27e134ecdb5db2694dac0a8cd6f","typeString":"literal_string \"Batch already delivered\""},"value":"Batch already delivered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e7ee47d2b4d578ad760680b3433f2a95168c27e134ecdb5db2694dac0a8cd6f","typeString":"literal_string \"Batch already delivered\""}],"id":7117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13934:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13934:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7123,"nodeType":"ExpressionStatement","src":"13934:56:13"},{"body":{"id":7181,"nodeType":"Block","src":"14066:448:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":7136,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"14085:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14091:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"14085:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7139,"indexExpression":{"id":7138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"14103:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14085:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":7140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14106:18:13","memberName":"participantAddress","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"14085:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7141,"name":"_oldParticipant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"14128:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14085:58:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7180,"nodeType":"IfStatement","src":"14081:422:13","trueBody":{"id":7179,"nodeType":"Block","src":"14145:358:13","statements":[{"expression":{"arguments":[{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14172:33:13","subExpression":{"expression":{"baseExpression":{"expression":{"id":7144,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"14173:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14179:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"14173:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7147,"indexExpression":{"id":7146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"14191:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14173:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":7148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14194:11:13","memberName":"hasVerified","nodeType":"MemberAccess","referencedDeclaration":5981,"src":"14173:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207665726966696564","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14207:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","typeString":"literal_string \"Already verified\""},"value":"Already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5","typeString":"literal_string \"Already verified\""}],"id":7143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14164:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14164:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"ExpressionStatement","src":"14164:62:13"},{"expression":{"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":7153,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"14263:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14269:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"14263:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7157,"indexExpression":{"id":7155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"14281:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14263:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupplyChainParticipant_$5988_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref"}},"id":7158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14284:18:13","memberName":"participantAddress","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"14263:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7159,"name":"_newParticipant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"14305:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14263:57:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7161,"nodeType":"ExpressionStatement","src":"14263:57:13"},{"expression":{"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7162,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"14339:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14345:13:13","memberName":"isParticipant","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"14339:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7166,"indexExpression":{"id":7164,"name":"_oldParticipant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"14359:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14339:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14378:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14339:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7169,"nodeType":"ExpressionStatement","src":"14339:44:13"},{"expression":{"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7170,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"14402:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14408:13:13","memberName":"isParticipant","nodeType":"MemberAccess","referencedDeclaration":6008,"src":"14402:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7174,"indexExpression":{"id":7172,"name":"_newParticipant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"14422:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14402:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14441:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14402:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7177,"nodeType":"ExpressionStatement","src":"14402:43:13"},{"id":7178,"nodeType":"Break","src":"14482:5:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"14031:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7129,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"14035:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_MedicineBatch_$6023_storage_ptr","typeString":"struct MedicineRegistry.MedicineBatch storage pointer"}},"id":7130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14041:11:13","memberName":"supplyChain","nodeType":"MemberAccess","referencedDeclaration":6004,"src":"14035:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SupplyChainParticipant_$5988_storage_$dyn_storage","typeString":"struct MedicineRegistry.SupplyChainParticipant storage ref[] storage ref"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14053:6:13","memberName":"length","nodeType":"MemberAccess","src":"14035:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14031:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7182,"initializationExpression":{"assignments":[7125],"declarations":[{"constant":false,"id":7125,"mutability":"mutable","name":"i","nameLocation":"14024:1:13","nodeType":"VariableDeclaration","scope":7182,"src":"14016:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7124,"name":"uint256","nodeType":"ElementaryTypeName","src":"14016:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7127,"initialValue":{"hexValue":"30","id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14028:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14016:13:13"},"loopExpression":{"expression":{"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14061:3:13","subExpression":{"id":7133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"14061:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7135,"nodeType":"ExpressionStatement","src":"14061:3:13"},"nodeType":"ForStatement","src":"14011:503:13"}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"13483:77:13","text":" @dev Emergency: Allow manufacturer to update participant"},"functionSelector":"e829b041","id":7184,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7092,"name":"MANUFACTURER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"13719:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7093,"kind":"modifierInvocation","modifierName":{"id":7091,"name":"onlyRole","nameLocations":["13710:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"13710:8:13"},"nodeType":"ModifierInvocation","src":"13710:27:13"}],"name":"updateParticipant","nameLocation":"13575:17:13","nodeType":"FunctionDefinition","parameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"_batchId","nameLocation":"13617:8:13","nodeType":"VariableDeclaration","scope":7184,"src":"13603:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7084,"name":"string","nodeType":"ElementaryTypeName","src":"13603:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7087,"mutability":"mutable","name":"_oldParticipant","nameLocation":"13644:15:13","nodeType":"VariableDeclaration","scope":7184,"src":"13636:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7086,"name":"address","nodeType":"ElementaryTypeName","src":"13636:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7089,"mutability":"mutable","name":"_newParticipant","nameLocation":"13678:15:13","nodeType":"VariableDeclaration","scope":7184,"src":"13670:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7088,"name":"address","nodeType":"ElementaryTypeName","src":"13670:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13592:108:13"},"returnParameters":{"id":7094,"nodeType":"ParameterList","parameters":[],"src":"13738:0:13"},"scope":7185,"src":"13566:955:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7186,"src":"513:14011:13","usedErrors":[306,309,475,1943,1948,1953],"usedEvents":[318,327,336,6057,6066,6079,6085,6095,6103]}],"src":"33:14491:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d63ce4e14043b34e4c6dcd455f241e08307ca4606e59a4476bc619285ca23f0a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 EXTCODECOPY 0xE4 0xE1 BLOCKHASH NUMBER 0xB3 0x4E 0x4C PUSH14 0xCD455F241E08307CA4606E59A447 PUSH12 0xC619285CA23F0A64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d63ce4e14043b34e4c6dcd455f241e08307ca4606e59a4476bc619285ca23f0a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 EXTCODECOPY 0xE4 0xE1 BLOCKHASH NUMBER 0xB3 0x4E 0x4C PUSH14 0xCD455F241E08307CA4606E59A447 PUSH12 0xC619285CA23F0A64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MedicineRegistry.sol":{"IMediToken":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"mint(address,uint256)":"40c10f19"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedicineRegistry.sol\":\"IMediToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MedicineRegistry.sol\":{\"keccak256\":\"0x122dc82bdadd3a976313187dacdda0c5677ef728d03ba116a588deab7a93a704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ff92b5968a8a19cc23663bec35eac86d2d530d552da6c5442007d956bc2a39\",\"dweb:/ipfs/QmPqke62WbgPjiejjcG6pPHG9d7du67MnbJcwXghqn53rT\"]}},\"version\":1}"},"MedicineRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"_mediToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"batchId","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BatchFullyVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"batchId","type":"string"},{"indexed":true,"internalType":"address","name":"manufacturer","type":"address"},{"indexed":false,"internalType":"uint256","name":"participantCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BatchRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"batchId","type":"string"},{"indexed":true,"internalType":"address","name":"verifier","type":"address"},{"indexed":false,"internalType":"enum MedicineRegistry.ParticipantRole","name":"role","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"verificationNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRequired","type":"uint256"}],"name":"BatchVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"batchId","type":"string"},{"indexed":true,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"enum MedicineRegistry.ParticipantRole","name":"role","type":"uint8"}],"name":"ParticipantAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"batchId","type":"string"},{"indexed":true,"internalType":"address","name":"customer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"batchId","type":"string"},{"indexed":true,"internalType":"address","name":"attemptedVerifier","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VerificationFailed","type":"event"},{"inputs":[],"name":"CUSTOMER_REWARD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANUFACTURER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PARTICIPANTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERIFIER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"batches","outputs":[{"internalType":"address","name":"manufacturer","type":"address"},{"internalType":"string","name":"batchId","type":"string"},{"internalType":"string","name":"drugName","type":"string"},{"internalType":"string","name":"ingredients","type":"string"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"requiredVerifications","type":"uint256"},{"internalType":"uint256","name":"completedVerifications","type":"uint256"},{"internalType":"bool","name":"rewardClaimed","type":"bool"},{"internalType":"address","name":"rewardClaimant","type":"address"},{"internalType":"uint256","name":"rewardClaimedAt","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"isFullyVerified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"},{"internalType":"address","name":"_participant","type":"address"}],"name":"canVerifyBatch","outputs":[{"internalType":"bool","name":"canVerify","type":"bool"},{"internalType":"bool","name":"alreadyVerified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"}],"name":"claimCustomerReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"}],"name":"getBatchStatus","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"isFullyVerified","type":"bool"},{"internalType":"bool","name":"rewardClaimed","type":"bool"},{"internalType":"uint256","name":"completedVerifications","type":"uint256"},{"internalType":"uint256","name":"requiredVerifications","type":"uint256"},{"internalType":"address","name":"rewardClaimant","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"}],"name":"getSupplyChainParticipants","outputs":[{"internalType":"address[]","name":"participants","type":"address[]"},{"internalType":"enum MedicineRegistry.ParticipantRole[]","name":"roles","type":"uint8[]"},{"internalType":"bool[]","name":"hasVerified","type":"bool[]"},{"internalType":"uint256[]","name":"timestamps","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"}],"name":"getVerificationHistory","outputs":[{"internalType":"address[]","name":"verifiers","type":"address[]"},{"internalType":"uint256[]","name":"timestamps","type":"uint256[]"},{"internalType":"string[]","name":"locations","type":"string[]"},{"internalType":"string[]","name":"notes","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"manufacturerBatches","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mediToken","outputs":[{"internalType":"contract IMediToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"participantBatches","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"},{"internalType":"string","name":"_drugName","type":"string"},{"internalType":"string","name":"_ingredients","type":"string"},{"internalType":"uint256","name":"_expiryDate","type":"uint256"},{"internalType":"address[]","name":"_participants","type":"address[]"},{"internalType":"enum MedicineRegistry.ParticipantRole[]","name":"_roles","type":"uint8[]"},{"internalType":"string[]","name":"_locations","type":"string[]"}],"name":"registerBatchWithSupplyChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"},{"internalType":"address","name":"_oldParticipant","type":"address"},{"internalType":"address","name":"_newParticipant","type":"address"}],"name":"updateParticipant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_batchId","type":"string"},{"internalType":"string","name":"_notes","type":"string"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"verifyBatchAsParticipant","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_483":{"entryPoint":null,"id":483,"parameterSlots":0,"returnSlots":0},"@_6127":{"entryPoint":null,"id":6127,"parameterSlots":1,"returnSlots":0},"@_grantRole_257":{"entryPoint":149,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_391":{"entryPoint":null,"id":391,"parameterSlots":0,"returnSlots":1},"@hasRole_81":{"entryPoint":null,"id":81,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":324,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:14","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:14"},"nodeType":"YulFunctionCall","src":"143:12:14"},"nodeType":"YulExpressionStatement","src":"143:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:14"},"nodeType":"YulFunctionCall","src":"112:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:14"},"nodeType":"YulFunctionCall","src":"108:32:14"},"nodeType":"YulIf","src":"105:52:14"},{"nodeType":"YulVariableDeclaration","src":"166:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:14"},"nodeType":"YulFunctionCall","src":"179:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:14"},"nodeType":"YulFunctionCall","src":"260:12:14"},"nodeType":"YulExpressionStatement","src":"260:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:14"},"nodeType":"YulFunctionCall","src":"235:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:14"},"nodeType":"YulFunctionCall","src":"224:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:14"},"nodeType":"YulFunctionCall","src":"214:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:14"},"nodeType":"YulFunctionCall","src":"207:50:14"},"nodeType":"YulIf","src":"204:70:14"},{"nodeType":"YulAssignment","src":"283:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:14"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:14","type":""}],"src":"14:290:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3171 CODESIZE SUB DUP1 PUSH3 0x3171 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x144 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x60 PUSH1 0x0 CALLER PUSH3 0x95 JUMP JUMPDEST POP PUSH3 0x8D PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED CALLER PUSH3 0x95 JUMP JUMPDEST POP POP PUSH3 0x176 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x13A JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xF1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x13E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2FEB DUP1 PUSH3 0x186 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD96D97A5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD96D97A5 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xE58DD2AA EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xE829B041 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xEE6A6D0E EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xF3BAF070 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x965288B0 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xA5E8F634 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xB838CAFB EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7037B1A7 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x7037B1A7 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x7069FC74 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x7EF1446A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8010C3AE EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x87C71463 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x89EC0B8F EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x504BC3CC EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x19D PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x268F JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x277A JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x27A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x19D PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x347 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x19D PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE SWAP5 ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE SWAP3 ISZERO ISZERO SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x42E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x44F DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x21A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x492 DUP3 DUP3 PUSH2 0x2233 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49F PUSH2 0x229E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x537570706C7920636861696E20766572696669636174696F6E20696E636F6D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6C657465 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995DD85C9908185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x4 ADD SLOAD GT PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1359591A58DA5B9948195E1C1A5C9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0xA DUP2 ADD DUP1 SLOAD CALLER PUSH2 0x100 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0xB DUP4 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH2 0x68C SWAP2 POP DUP5 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH8 0xDE0B6B3A7640000 DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xB55C5D24F032FDE07AE43E1C485A5204D17225FC7D79318955976775412338F4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x6DD PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820616C72656164792064656C69766572656420746F20637573746F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x36B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564207061727469636970616E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x809 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x85A DUP3 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x868 DUP3 DUP7 PUSH2 0x22C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP8 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA78 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8E7 JUMPI PUSH2 0x8E7 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA66 JUMPI DUP7 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x91B JUMPI PUSH2 0x91B PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481D995C9A599A5959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98D JUMPI PUSH2 0x98D PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CB PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP9 DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9F6 JUMPI PUSH2 0x9F6 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x9 DUP8 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xA26 DUP4 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP7 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA40 JUMPI PUSH2 0xA40 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 SWAP4 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 POP PUSH2 0xA78 JUMP JUMPDEST DUP1 PUSH2 0xA70 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8BC JUMP JUMPDEST POP DUP2 PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x15995C9A599A58D85D1A5BDB8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH2 0xACC SWAP1 DUP12 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x36007A401BCE1DB31823D520649F66714A8006E1FE3D7E62B17B01E0E7C138CC DUP4 DUP10 PUSH1 0x9 ADD SLOAD DUP11 PUSH1 0x8 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xB0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP6 PUSH1 0x8 ADD SLOAD DUP7 PUSH1 0x9 ADD SLOAD SUB PUSH2 0xB80 JUMPI PUSH1 0xC DUP7 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP1 DUP11 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x65CEF3A6702469117C0B8570219F54EE19F5025D27673B1450617F83C2AD75DE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP PUSH2 0x492 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x2 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xBC6 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF2 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xC54 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC80 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCCD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCCD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCB0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xCE2 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0E SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD30 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x9 DUP8 ADD SLOAD PUSH1 0xA DUP9 ADD SLOAD PUSH1 0xB DUP10 ADD SLOAD PUSH1 0xC SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 PUSH1 0xFF DUP1 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP5 DUP6 SWAP1 DIV AND SWAP4 DUP2 DUP4 AND SWAP3 SWAP2 DIV AND DUP14 JUMP JUMPDEST PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED PUSH2 0xDD8 DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x40 MLOAD PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x426174636820616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP2 MLOAD DUP5 MLOAD EQ PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D69736D617463686564206C6F636174696F6E73 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x14 DUP5 MLOAD GT ISZERO PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x546F6F206D616E79207061727469636970616E7473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD GT PUSH2 0xF74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65207061727469636970616E742072657175697265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E7 JUMP JUMPDEST TIMESTAMP DUP6 GT PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578706972792064617465206D75737420626520696E20667574757265000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP10 PUSH1 0x40 MLOAD PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x1004 DUP11 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x2 DUP2 ADD PUSH2 0x1013 DUP10 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x1022 DUP9 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP7 SWAP1 SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC DUP2 ADD DUP1 SLOAD DUP7 MLOAD PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0x0 PUSH1 0x9 DUP5 ADD DUP2 SWAP1 SSTORE PUSH2 0xFFFF NOT SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x10E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061727469636970616E7420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10F8 JUMPI PUSH2 0x10F8 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1111 PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C696420726F6C65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1165 JUMPI PUSH2 0x1165 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x111D5C1B1A58D85D19481C185C9D1A58DA5C185B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP2 PUSH1 0x6 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1233 JUMPI PUSH2 0x1233 PUSH2 0x2B71 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x125A JUMPI PUSH2 0x125A PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE SWAP3 DUP3 ADD MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x4 SWAP1 SWAP5 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP6 AND DUP2 OR DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x12DB JUMPI PUSH2 0x12DB PUSH2 0x2B71 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 SLOAD SWAP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x131A SWAP1 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x132F SWAP1 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP3 PUSH1 0x7 ADD PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x134C JUMPI PUSH2 0x134C PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13A1 JUMPI PUSH2 0x13A1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD PUSH2 0x13E0 DUP12 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 MLOAD PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x6B7A69A77940FA31671B50A4966820B5ED7889F9DDE2C78C2BF2D7E00B20C9D0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1462 SWAP2 SWAP1 PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x1474 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1060 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD PUSH2 0x14A6 DUP11 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH2 0x14B7 SWAP1 DUP12 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP9 MLOAD DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xAAED3963D690AD719845C971AF2818FDDEEFA8E32D2EA5BD2391BA5FCC3131F4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x153A SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1566 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1588 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1596 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15F9 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x163A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x16EC JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x167A JUMPI PUSH2 0x167A PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x16DA JUMPI PUSH1 0x1 DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B0 JUMPI PUSH2 0x16B0 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP4 POP SWAP4 POP POP POP PUSH2 0x16F6 JUMP JUMPDEST DUP1 PUSH2 0x16E4 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x164F JUMP JUMPDEST POP PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x174B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1768 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1791 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17AC JUMPI PUSH2 0x17AC PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17F0 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1819 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1834 JUMPI PUSH2 0x1834 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x185D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19F5 JUMPI DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1880 JUMPI PUSH2 0x1880 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x18B1 JUMPI PUSH2 0x18B1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18E6 JUMPI PUSH2 0x18E6 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1917 JUMPI PUSH2 0x1917 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1930 JUMPI PUSH2 0x1930 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1943 PUSH2 0x2B71 JUMP JUMPDEST DUP2 MSTORE POP POP DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x195C JUMPI PUSH2 0x195C PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19B4 JUMPI PUSH2 0x19B4 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19D8 JUMPI PUSH2 0x19D8 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x19ED DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1863 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1A1A DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 DUP4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1AD7 JUMPI DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A97 JUMPI PUSH2 0x1A97 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AC5 JUMPI DUP2 PUSH2 0x1AC1 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1ACF DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A76 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B19 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B5D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B78 JUMPI PUSH2 0x1B78 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BAB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B96 JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BC6 JUMPI PUSH2 0x1BC6 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BF9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BE4 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1EA5 JUMPI DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C21 JUMPI PUSH2 0x1C21 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E93 JUMPI DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C56 JUMPI PUSH2 0x1C56 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1C87 JUMPI PUSH2 0x1C87 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CBC JUMPI PUSH2 0x1CBC PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CE0 JUMPI PUSH2 0x1CE0 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D01 JUMPI PUSH2 0x1D01 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1D1D SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D49 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D96 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D96 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D79 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DCD JUMPI PUSH2 0x1DCD PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1DE9 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E15 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E79 JUMPI PUSH2 0x1E79 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1E8F SWAP1 PUSH2 0x2F61 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1E9D DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C00 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED PUSH2 0x1EF6 DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1F08 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1F3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103130BA31B41037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820616C72656164792064656C697665726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x200C JUMPI PUSH2 0x200C PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x210F JUMPI DUP2 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2040 JUMPI PUSH2 0x2040 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x209B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481D995C9A599A5959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20B1 JUMPI PUSH2 0x20B1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE DUP8 DUP4 AND DUP3 MSTORE PUSH1 0x7 DUP6 ADD SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP3 DUP8 AND DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2121 JUMP JUMPDEST DUP1 PUSH2 0x2119 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FE1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2144 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD PUSH1 0xA DUP3 ADD SLOAD PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0x8 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP14 PUSH2 0x100 SWAP5 DUP6 SWAP1 DIV DUP3 AND SWAP14 POP SWAP1 DUP4 AND SWAP12 POP SWAP4 SWAP10 POP SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DIV AND SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6DD DUP2 CALLER PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AD DUP4 DUP4 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x222B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x21E3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x42E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223F DUP4 DUP4 PUSH2 0x15BB JUMP JUMPDEST ISZERO PUSH2 0x222B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x22C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x22D8 DUP7 DUP7 PUSH2 0x232F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x22E8 DUP3 DUP3 PUSH2 0x237C JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x22FC DUP3 DUP3 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x2369 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x235B DUP9 DUP3 DUP6 DUP6 PUSH2 0x2435 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2375 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2390 JUMPI PUSH2 0x2390 PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x2399 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23AD JUMPI PUSH2 0x23AD PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x23CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DF PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x2400 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2414 JUMPI PUSH2 0x2414 PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x2470 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24F0 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x24FA JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x252E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x257D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x258D PUSH1 0x20 DUP5 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25D4 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x25F5 JUMPI PUSH2 0x25F5 PUSH2 0x2596 JUMP JUMPDEST PUSH2 0x2608 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x25AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x261C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x252E DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x267B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2687 DUP5 DUP3 DUP6 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26C7 DUP8 DUP4 DUP9 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26E9 DUP8 DUP4 DUP9 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2720 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x25DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2745 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2766 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x272A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP2 MSTORE PUSH2 0x1A0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x279F SWAP1 DUP4 ADD DUP16 PUSH2 0x274E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x27B1 DUP2 DUP16 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x27C5 DUP2 DUP15 PUSH2 0x274E JUMP JUMPDEST SWAP2 POP POP DUP11 PUSH1 0x80 DUP4 ADD MSTORE DUP10 PUSH1 0xA0 DUP4 ADD MSTORE DUP9 PUSH1 0xC0 DUP4 ADD MSTORE DUP8 PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x27EF PUSH2 0x100 DUP4 ADD DUP9 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x120 DUP4 ADD MSTORE DUP5 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x2815 PUSH2 0x160 DUP4 ADD DUP6 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP3 ISZERO ISZERO PUSH2 0x180 DUP4 ADD MSTORE SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2849 JUMPI PUSH2 0x2849 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2879 PUSH2 0x2874 DUP4 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x25AC JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28BA JUMPI PUSH2 0x28AD DUP2 PUSH2 0x254E JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x289C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x28E6 PUSH2 0x2874 DUP4 PUSH2 0x2830 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28BA JUMPI DUP1 CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x293F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x294F PUSH2 0x2874 DUP4 PUSH2 0x2830 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x296E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28BA JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2991 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x299F DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x2633 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x29C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x29DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29EB DUP12 DUP4 DUP13 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0D DUP12 DUP4 DUP13 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2F DUP12 DUP4 DUP13 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A58 DUP12 DUP4 DUP13 ADD PUSH2 0x2853 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A7A DUP12 DUP4 DUP13 ADD PUSH2 0x28C5 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9D DUP11 DUP3 DUP12 ADD PUSH2 0x292E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AC8 DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x252E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B1E DUP6 DUP3 DUP7 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x258D PUSH1 0x20 DUP5 ADD PUSH2 0x254E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B66 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2B41 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x2BA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B66 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2BEC PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2B2D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD DUP1 DUP4 MSTORE DUP8 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C2A JUMPI PUSH2 0x2C1A DUP4 DUP7 MLOAD PUSH2 0x2B87 JUMP JUMPDEST SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C07 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP8 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C63 JUMPI DUP3 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C45 JUMP JUMPDEST POP POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2C79 DUP2 DUP6 PUSH2 0x2BA9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP4 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2CCC JUMPI DUP3 DUP5 SUB DUP10 MSTORE PUSH2 0x2CBA DUP5 DUP4 MLOAD PUSH2 0x274E JUMP JUMPDEST SWAP9 DUP6 ADD SWAP9 SWAP4 POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2CA2 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2CEC PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2B2D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CFE DUP2 DUP8 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2D12 DUP2 DUP7 PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2C79 DUP2 DUP6 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D5D DUP7 DUP3 DUP8 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2D6C PUSH1 0x20 DUP6 ADD PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7A PUSH1 0x40 DUP6 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2D95 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x272A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10985D18DA08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x2DDF DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x272A JUMP JUMPDEST PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E36 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E56 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2E83 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E8F JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2EBB JUMPI PUSH2 0x2EBB PUSH2 0x2596 JUMP JUMPDEST PUSH2 0x2ECF DUP2 PUSH2 0x2EC9 DUP5 SLOAD PUSH2 0x2E22 JUMP JUMPDEST DUP5 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F04 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2EEC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F33 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2F14 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F51 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2F81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x2F96 DUP3 DUP7 PUSH2 0x2B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x42E DUP3 DUP5 PUSH2 0x2B87 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CALLDATASIZE SELFDESTRUCT RETURN SWAP2 0xD5 LT 0xD9 DUP9 POP 0x23 0x4F 0x4E 0xEC COINBASE BASEFEE 0xC7 0xC0 STATICCALL CALLDATASIZE PUSH24 0x2762C490003C1FC1B0914264736F6C634300081400330000 ","sourceMap":"513:14011:13:-:0;;;3361:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:4;2061:21;;3404:9:13;:34;;-1:-1:-1;;;;;;3404:34:13;-1:-1:-1;;;;;3404:34:13;;;;;3449:42;-1:-1:-1;3480:10:13;3449;:42::i;:::-;-1:-1:-1;3502:41:13;711:30;3532:10;3502;:41::i;:::-;;3361:190;513:14011;;6155:316:0;6232:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:2;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6248:217;6155:316;;;;:::o;14:290:14:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:14;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:14:o;:::-;513:14011:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CUSTOMER_REWARD_6044":{"entryPoint":null,"id":6044,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@MANUFACTURER_ROLE_5962":{"entryPoint":null,"id":5962,"parameterSlots":0,"returnSlots":0},"@MAX_PARTICIPANTS_6047":{"entryPoint":null,"id":6047,"parameterSlots":0,"returnSlots":0},"@VERIFIER_ROLE_5967":{"entryPoint":null,"id":5967,"parameterSlots":0,"returnSlots":0},"@_checkRole_115":{"entryPoint":8946,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":8599,"id":94,"parameterSlots":1,"returnSlots":0},"@_grantRole_257":{"entryPoint":8609,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_391":{"entryPoint":null,"id":391,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_518":{"entryPoint":null,"id":518,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_510":{"entryPoint":8862,"id":510,"parameterSlots":0,"returnSlots":0},"@_revokeRole_295":{"entryPoint":8755,"id":295,"parameterSlots":2,"returnSlots":1},"@_throwError_2279":{"entryPoint":9084,"id":2279,"parameterSlots":2,"returnSlots":0},"@batches_6028":{"entryPoint":2959,"id":6028,"parameterSlots":0,"returnSlots":0},"@canVerifyBatch_7082":{"entryPoint":5604,"id":7082,"parameterSlots":2,"returnSlots":2},"@claimCustomerReward_6676":{"entryPoint":1175,"id":6676,"parameterSlots":1,"returnSlots":0},"@getBatchStatus_6716":{"entryPoint":8489,"id":6716,"parameterSlots":1,"returnSlots":6},"@getRoleAdmin_129":{"entryPoint":null,"id":129,"parameterSlots":1,"returnSlots":1},"@getSupplyChainParticipants_6846":{"entryPoint":5885,"id":6846,"parameterSlots":1,"returnSlots":4},"@getVerificationHistory_7012":{"entryPoint":6692,"id":7012,"parameterSlots":1,"returnSlots":4},"@grantRole_148":{"entryPoint":1076,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":5563,"id":81,"parameterSlots":2,"returnSlots":1},"@manufacturerBatches_6033":{"entryPoint":5378,"id":6033,"parameterSlots":0,"returnSlots":0},"@mediToken_6041":{"entryPoint":null,"id":6041,"parameterSlots":0,"returnSlots":0},"@participantBatches_6038":{"entryPoint":7856,"id":6038,"parameterSlots":0,"returnSlots":0},"@recover_2036":{"entryPoint":8904,"id":2036,"parameterSlots":2,"returnSlots":1},"@registerBatchWithSupplyChain_6394":{"entryPoint":3502,"id":6394,"parameterSlots":7,"returnSlots":0},"@renounceRole_190":{"entryPoint":1119,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":6655,"id":167,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2389":{"entryPoint":null,"id":2389,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":1021,"id":63,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_2295":{"entryPoint":null,"id":2295,"parameterSlots":1,"returnSlots":1},"@tryRecover_2006":{"entryPoint":9007,"id":2006,"parameterSlots":2,"returnSlots":3},"@tryRecover_2194":{"entryPoint":9269,"id":2194,"parameterSlots":4,"returnSlots":3},"@updateParticipant_7184":{"entryPoint":7884,"id":7184,"parameterSlots":3,"returnSlots":0},"@verifyBatchAsParticipant_6595":{"entryPoint":1760,"id":6595,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":9550,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":10323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_enum_ParticipantRole_dyn":{"entryPoint":10437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_string_dyn":{"entryPoint":10542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":9692,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":9779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10924,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":9525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9578,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":9811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address":{"entryPoint":10985,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_addresst_address":{"entryPoint":11558,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_bytes_memory_ptr":{"entryPoint":9871,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":10669,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":11053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":11396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":11177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_ParticipantRole":{"entryPoint":11143,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":10062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":11725,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_bool_t_bool__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":10106,"id":null,"parameterSlots":14,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11225,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11481,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool_t_bool_t_uint256_t_uint256_t_address__to_t_bool_t_bool_t_bool_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IMediToken_$5946__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_ParticipantRole_$5974__to_t_uint8__fromStack_reversed":{"entryPoint":12199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_ParticipantRole_$5974_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12168,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03dbd4c4a2f4f5817b24578ebcc441c1d9ef61762853f787de380bf47b0f56ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2225061bca1349a8a3197b2978d1d80f7b352a81d212157dbc629a5dd75e6aed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3c1b25d3252708683c9e650e461dd436feb45936e806a6b4abb8704e3ce51c0b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44f200bf17edbd5d629caccffb2004cc809d225027162b5cf716be52302a19a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48ce041a86fbaeed13960e32e12cf050e0b1d32b3b104d2e8f4d2929b0d35057__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a536cadcf7bd7b5649e578eabe8b70cc270b36bbbf75f188de5a0a505f87821__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8792260baa46187182c86e5f500ce6d1d628011ee1c422112c15db5e56e632bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e7ee47d2b4d578ad760680b3433f2a95168c27e134ecdb5db2694dac0a8cd6f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ccf18108b555d0ca329a7f70497f7b350006412d6bff44726572cbb47ad64673__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d537f8160039b1fcf1dc021a7b8878d2aac81c14d040c1e91f6a995f0a8256ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6b6647033f03da42f260fb0af824a51252976e16703a583d969c6e3b42e40b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6b40f6da1100400e5dc8eb15d22b38c024a6aa550a776a85baae739343ceb28__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":9644,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":10288,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":11868,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11938,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10026,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11810,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":12129,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":11121,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11788,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9622,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:29465:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:14","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:14"},"nodeType":"YulFunctionCall","src":"131:12:14"},"nodeType":"YulExpressionStatement","src":"131:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:14"},"nodeType":"YulFunctionCall","src":"100:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:14"},"nodeType":"YulFunctionCall","src":"96:32:14"},"nodeType":"YulIf","src":"93:52:14"},{"nodeType":"YulVariableDeclaration","src":"154:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:14"},"nodeType":"YulFunctionCall","src":"167:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:14"},"nodeType":"YulFunctionCall","src":"256:12:14"},"nodeType":"YulExpressionStatement","src":"256:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:14"},"nodeType":"YulFunctionCall","src":"230:20:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:14"},"nodeType":"YulFunctionCall","src":"219:32:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:14"},"nodeType":"YulFunctionCall","src":"209:43:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:14"},"nodeType":"YulFunctionCall","src":"202:51:14"},"nodeType":"YulIf","src":"199:71:14"},{"nodeType":"YulAssignment","src":"279:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:14"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:14","type":""}],"src":"14:286:14"},{"body":{"nodeType":"YulBlock","src":"346:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"363:3:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"382:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"375:6:14"},"nodeType":"YulFunctionCall","src":"375:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"368:6:14"},"nodeType":"YulFunctionCall","src":"368:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"356:6:14"},"nodeType":"YulFunctionCall","src":"356:34:14"},"nodeType":"YulExpressionStatement","src":"356:34:14"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"330:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"337:3:14","type":""}],"src":"305:91:14"},{"body":{"nodeType":"YulBlock","src":"496:92:14","statements":[{"nodeType":"YulAssignment","src":"506:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"518:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"529:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"514:3:14"},"nodeType":"YulFunctionCall","src":"514:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"506:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"573:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"566:6:14"},"nodeType":"YulFunctionCall","src":"566:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"559:6:14"},"nodeType":"YulFunctionCall","src":"559:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"541:6:14"},"nodeType":"YulFunctionCall","src":"541:41:14"},"nodeType":"YulExpressionStatement","src":"541:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"465:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"476:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"487:4:14","type":""}],"src":"401:187:14"},{"body":{"nodeType":"YulBlock","src":"663:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"709:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"718:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"721:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"711:6:14"},"nodeType":"YulFunctionCall","src":"711:12:14"},"nodeType":"YulExpressionStatement","src":"711:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"684:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"693:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"680:3:14"},"nodeType":"YulFunctionCall","src":"680:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"705:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"676:3:14"},"nodeType":"YulFunctionCall","src":"676:32:14"},"nodeType":"YulIf","src":"673:52:14"},{"nodeType":"YulAssignment","src":"734:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"744:12:14"},"nodeType":"YulFunctionCall","src":"744:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"734:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"629:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"640:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"652:6:14","type":""}],"src":"593:180:14"},{"body":{"nodeType":"YulBlock","src":"879:76:14","statements":[{"nodeType":"YulAssignment","src":"889:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"901:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"912:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"897:3:14"},"nodeType":"YulFunctionCall","src":"897:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"889:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"931:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"942:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"924:6:14"},"nodeType":"YulFunctionCall","src":"924:25:14"},"nodeType":"YulExpressionStatement","src":"924:25:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"848:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"859:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"870:4:14","type":""}],"src":"778:177:14"},{"body":{"nodeType":"YulBlock","src":"1009:124:14","statements":[{"nodeType":"YulAssignment","src":"1019:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1041:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1028:12:14"},"nodeType":"YulFunctionCall","src":"1028:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:14"}]},{"body":{"nodeType":"YulBlock","src":"1111:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1120:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1123:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1113:6:14"},"nodeType":"YulFunctionCall","src":"1113:12:14"},"nodeType":"YulExpressionStatement","src":"1113:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1070:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1081:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1096:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1101:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1092:3:14"},"nodeType":"YulFunctionCall","src":"1092:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1105:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1088:3:14"},"nodeType":"YulFunctionCall","src":"1088:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1077:3:14"},"nodeType":"YulFunctionCall","src":"1077:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1067:2:14"},"nodeType":"YulFunctionCall","src":"1067:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1060:6:14"},"nodeType":"YulFunctionCall","src":"1060:50:14"},"nodeType":"YulIf","src":"1057:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"988:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"999:5:14","type":""}],"src":"960:173:14"},{"body":{"nodeType":"YulBlock","src":"1225:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"1271:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1273:6:14"},"nodeType":"YulFunctionCall","src":"1273:12:14"},"nodeType":"YulExpressionStatement","src":"1273:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1246:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1242:3:14"},"nodeType":"YulFunctionCall","src":"1242:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1267:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1238:3:14"},"nodeType":"YulFunctionCall","src":"1238:32:14"},"nodeType":"YulIf","src":"1235:52:14"},{"nodeType":"YulAssignment","src":"1296:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1306:12:14"},"nodeType":"YulFunctionCall","src":"1306:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1296:6:14"}]},{"nodeType":"YulAssignment","src":"1338:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1371:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1382:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:14"},"nodeType":"YulFunctionCall","src":"1367:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1348:18:14"},"nodeType":"YulFunctionCall","src":"1348:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1338:6:14"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1183:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1194:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1206:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1214:6:14","type":""}],"src":"1138:254:14"},{"body":{"nodeType":"YulBlock","src":"1498:76:14","statements":[{"nodeType":"YulAssignment","src":"1508:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1520:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1531:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1516:3:14"},"nodeType":"YulFunctionCall","src":"1516:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1508:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1561:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1543:6:14"},"nodeType":"YulFunctionCall","src":"1543:25:14"},"nodeType":"YulExpressionStatement","src":"1543:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1467:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1478:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1489:4:14","type":""}],"src":"1397:177:14"},{"body":{"nodeType":"YulBlock","src":"1611:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1628:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1640:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1631:3:14"},"nodeType":"YulFunctionCall","src":"1631:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1621:6:14"},"nodeType":"YulFunctionCall","src":"1621:31:14"},"nodeType":"YulExpressionStatement","src":"1621:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1668:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1671:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1661:6:14"},"nodeType":"YulFunctionCall","src":"1661:15:14"},"nodeType":"YulExpressionStatement","src":"1661:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1692:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1695:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1685:6:14"},"nodeType":"YulFunctionCall","src":"1685:15:14"},"nodeType":"YulExpressionStatement","src":"1685:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1579:127:14"},{"body":{"nodeType":"YulBlock","src":"1756:230:14","statements":[{"nodeType":"YulAssignment","src":"1766:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1782:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1776:5:14"},"nodeType":"YulFunctionCall","src":"1776:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1766:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1794:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1816:6:14"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1832:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1838:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1828:3:14"},"nodeType":"YulFunctionCall","src":"1828:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1847:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1843:3:14"},"nodeType":"YulFunctionCall","src":"1843:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1824:3:14"},"nodeType":"YulFunctionCall","src":"1824:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:14"},"nodeType":"YulFunctionCall","src":"1812:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1798:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1927:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1929:16:14"},"nodeType":"YulFunctionCall","src":"1929:18:14"},"nodeType":"YulExpressionStatement","src":"1929:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1870:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1882:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1867:2:14"},"nodeType":"YulFunctionCall","src":"1867:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1906:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1918:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1903:2:14"},"nodeType":"YulFunctionCall","src":"1903:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1864:2:14"},"nodeType":"YulFunctionCall","src":"1864:62:14"},"nodeType":"YulIf","src":"1861:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1965:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1969:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1958:6:14"},"nodeType":"YulFunctionCall","src":"1958:22:14"},"nodeType":"YulExpressionStatement","src":"1958:22:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1736:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1745:6:14","type":""}],"src":"1711:275:14"},{"body":{"nodeType":"YulBlock","src":"2066:332:14","statements":[{"body":{"nodeType":"YulBlock","src":"2110:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2112:16:14"},"nodeType":"YulFunctionCall","src":"2112:18:14"},"nodeType":"YulExpressionStatement","src":"2112:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2082:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2090:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2079:2:14"},"nodeType":"YulFunctionCall","src":"2079:30:14"},"nodeType":"YulIf","src":"2076:56:14"},{"nodeType":"YulAssignment","src":"2141:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2178:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2186:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2174:3:14"},"nodeType":"YulFunctionCall","src":"2174:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2195:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2191:3:14"},"nodeType":"YulFunctionCall","src":"2191:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2170:3:14"},"nodeType":"YulFunctionCall","src":"2170:29:14"},{"kind":"number","nodeType":"YulLiteral","src":"2201:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2166:3:14"},"nodeType":"YulFunctionCall","src":"2166:40:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2150:15:14"},"nodeType":"YulFunctionCall","src":"2150:57:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2141:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2223:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2230:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2216:6:14"},"nodeType":"YulFunctionCall","src":"2216:21:14"},"nodeType":"YulExpressionStatement","src":"2216:21:14"},{"body":{"nodeType":"YulBlock","src":"2275:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2284:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2287:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2277:6:14"},"nodeType":"YulFunctionCall","src":"2277:12:14"},"nodeType":"YulExpressionStatement","src":"2277:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2256:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2261:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2252:3:14"},"nodeType":"YulFunctionCall","src":"2252:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"2270:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2249:2:14"},"nodeType":"YulFunctionCall","src":"2249:25:14"},"nodeType":"YulIf","src":"2246:45:14"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2317:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2324:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2313:3:14"},"nodeType":"YulFunctionCall","src":"2313:16:14"},{"name":"src","nodeType":"YulIdentifier","src":"2331:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2336:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2300:12:14"},"nodeType":"YulFunctionCall","src":"2300:43:14"},"nodeType":"YulExpressionStatement","src":"2300:43:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2367:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2374:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2363:3:14"},"nodeType":"YulFunctionCall","src":"2363:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2359:3:14"},"nodeType":"YulFunctionCall","src":"2359:29:14"},{"kind":"number","nodeType":"YulLiteral","src":"2390:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2352:6:14"},"nodeType":"YulFunctionCall","src":"2352:40:14"},"nodeType":"YulExpressionStatement","src":"2352:40:14"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2035:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2040:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2048:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2056:5:14","type":""}],"src":"1991:407:14"},{"body":{"nodeType":"YulBlock","src":"2456:169:14","statements":[{"body":{"nodeType":"YulBlock","src":"2505:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2514:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2517:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2507:6:14"},"nodeType":"YulFunctionCall","src":"2507:12:14"},"nodeType":"YulExpressionStatement","src":"2507:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2484:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2492:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2480:3:14"},"nodeType":"YulFunctionCall","src":"2480:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2499:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2476:3:14"},"nodeType":"YulFunctionCall","src":"2476:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2469:6:14"},"nodeType":"YulFunctionCall","src":"2469:35:14"},"nodeType":"YulIf","src":"2466:55:14"},{"nodeType":"YulAssignment","src":"2530:89:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2578:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2586:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2574:3:14"},"nodeType":"YulFunctionCall","src":"2574:17:14"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2606:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2593:12:14"},"nodeType":"YulFunctionCall","src":"2593:20:14"},{"name":"end","nodeType":"YulIdentifier","src":"2615:3:14"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"2539:34:14"},"nodeType":"YulFunctionCall","src":"2539:80:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2530:5:14"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2430:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2438:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2446:5:14","type":""}],"src":"2403:222:14"},{"body":{"nodeType":"YulBlock","src":"2710:242:14","statements":[{"body":{"nodeType":"YulBlock","src":"2756:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2765:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2768:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2758:6:14"},"nodeType":"YulFunctionCall","src":"2758:12:14"},"nodeType":"YulExpressionStatement","src":"2758:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2731:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2740:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2727:3:14"},"nodeType":"YulFunctionCall","src":"2727:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2752:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2723:3:14"},"nodeType":"YulFunctionCall","src":"2723:32:14"},"nodeType":"YulIf","src":"2720:52:14"},{"nodeType":"YulVariableDeclaration","src":"2781:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2808:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2795:12:14"},"nodeType":"YulFunctionCall","src":"2795:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2785:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2861:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2870:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2873:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2863:6:14"},"nodeType":"YulFunctionCall","src":"2863:12:14"},"nodeType":"YulExpressionStatement","src":"2863:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2833:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2841:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2830:2:14"},"nodeType":"YulFunctionCall","src":"2830:30:14"},"nodeType":"YulIf","src":"2827:50:14"},{"nodeType":"YulAssignment","src":"2886:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2918:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2929:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2914:3:14"},"nodeType":"YulFunctionCall","src":"2914:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2938:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2896:17:14"},"nodeType":"YulFunctionCall","src":"2896:50:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2886:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2676:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2687:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2699:6:14","type":""}],"src":"2630:322:14"},{"body":{"nodeType":"YulBlock","src":"3090:738:14","statements":[{"body":{"nodeType":"YulBlock","src":"3136:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3145:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3148:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3138:6:14"},"nodeType":"YulFunctionCall","src":"3138:12:14"},"nodeType":"YulExpressionStatement","src":"3138:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3111:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3120:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3107:3:14"},"nodeType":"YulFunctionCall","src":"3107:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3132:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3103:3:14"},"nodeType":"YulFunctionCall","src":"3103:32:14"},"nodeType":"YulIf","src":"3100:52:14"},{"nodeType":"YulVariableDeclaration","src":"3161:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3188:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3175:12:14"},"nodeType":"YulFunctionCall","src":"3175:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3165:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3207:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3217:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3211:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3262:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3271:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3274:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3264:6:14"},"nodeType":"YulFunctionCall","src":"3264:12:14"},"nodeType":"YulExpressionStatement","src":"3264:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3250:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3258:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3247:2:14"},"nodeType":"YulFunctionCall","src":"3247:14:14"},"nodeType":"YulIf","src":"3244:34:14"},{"nodeType":"YulAssignment","src":"3287:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3319:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3330:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:14"},"nodeType":"YulFunctionCall","src":"3315:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3339:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3297:17:14"},"nodeType":"YulFunctionCall","src":"3297:50:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3287:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3356:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3389:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3400:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3385:3:14"},"nodeType":"YulFunctionCall","src":"3385:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3372:12:14"},"nodeType":"YulFunctionCall","src":"3372:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3360:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3433:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3442:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3445:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3435:6:14"},"nodeType":"YulFunctionCall","src":"3435:12:14"},"nodeType":"YulExpressionStatement","src":"3435:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3419:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3429:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3416:2:14"},"nodeType":"YulFunctionCall","src":"3416:16:14"},"nodeType":"YulIf","src":"3413:36:14"},{"nodeType":"YulAssignment","src":"3458:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3490:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3501:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3486:3:14"},"nodeType":"YulFunctionCall","src":"3486:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3512:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3468:17:14"},"nodeType":"YulFunctionCall","src":"3468:52:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3458:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3529:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3562:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3573:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3558:3:14"},"nodeType":"YulFunctionCall","src":"3558:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3545:12:14"},"nodeType":"YulFunctionCall","src":"3545:32:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"3533:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3606:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3615:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3618:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3608:6:14"},"nodeType":"YulFunctionCall","src":"3608:12:14"},"nodeType":"YulExpressionStatement","src":"3608:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"3592:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3602:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3589:2:14"},"nodeType":"YulFunctionCall","src":"3589:16:14"},"nodeType":"YulIf","src":"3586:36:14"},{"nodeType":"YulVariableDeclaration","src":"3631:34:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3645:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"3656:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3641:3:14"},"nodeType":"YulFunctionCall","src":"3641:24:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3635:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3713:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3722:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3725:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3715:6:14"},"nodeType":"YulFunctionCall","src":"3715:12:14"},"nodeType":"YulExpressionStatement","src":"3715:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3692:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"3696:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3688:3:14"},"nodeType":"YulFunctionCall","src":"3688:13:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3703:7:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3684:3:14"},"nodeType":"YulFunctionCall","src":"3684:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3677:6:14"},"nodeType":"YulFunctionCall","src":"3677:35:14"},"nodeType":"YulIf","src":"3674:55:14"},{"nodeType":"YulAssignment","src":"3738:84:14","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3787:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"3791:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:14"},"nodeType":"YulFunctionCall","src":"3783:11:14"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3809:2:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3796:12:14"},"nodeType":"YulFunctionCall","src":"3796:16:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3814:7:14"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"3748:34:14"},"nodeType":"YulFunctionCall","src":"3748:74:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3738:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3040:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3051:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3063:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3071:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3079:6:14","type":""}],"src":"2957:871:14"},{"body":{"nodeType":"YulBlock","src":"3877:60:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3894:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3903:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3918:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3923:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3914:3:14"},"nodeType":"YulFunctionCall","src":"3914:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"3927:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3910:3:14"},"nodeType":"YulFunctionCall","src":"3910:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3899:3:14"},"nodeType":"YulFunctionCall","src":"3899:31:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3887:6:14"},"nodeType":"YulFunctionCall","src":"3887:44:14"},"nodeType":"YulExpressionStatement","src":"3887:44:14"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3861:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3868:3:14","type":""}],"src":"3833:104:14"},{"body":{"nodeType":"YulBlock","src":"4008:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4018:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4027:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4022:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4087:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4112:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"4117:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4108:3:14"},"nodeType":"YulFunctionCall","src":"4108:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4131:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"4136:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4127:3:14"},"nodeType":"YulFunctionCall","src":"4127:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4121:5:14"},"nodeType":"YulFunctionCall","src":"4121:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4101:6:14"},"nodeType":"YulFunctionCall","src":"4101:39:14"},"nodeType":"YulExpressionStatement","src":"4101:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4048:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"4051:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4045:2:14"},"nodeType":"YulFunctionCall","src":"4045:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4059:19:14","statements":[{"nodeType":"YulAssignment","src":"4061:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4070:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"4073:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4066:3:14"},"nodeType":"YulFunctionCall","src":"4066:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4061:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"4041:3:14","statements":[]},"src":"4037:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4170:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4175:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:14"},"nodeType":"YulFunctionCall","src":"4166:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"4184:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4159:6:14"},"nodeType":"YulFunctionCall","src":"4159:27:14"},"nodeType":"YulExpressionStatement","src":"4159:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3986:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3991:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"3996:6:14","type":""}],"src":"3942:250:14"},{"body":{"nodeType":"YulBlock","src":"4247:221:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4257:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4277:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4271:5:14"},"nodeType":"YulFunctionCall","src":"4271:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4261:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4299:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4304:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4292:6:14"},"nodeType":"YulFunctionCall","src":"4292:19:14"},"nodeType":"YulExpressionStatement","src":"4292:19:14"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4359:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4366:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4355:3:14"},"nodeType":"YulFunctionCall","src":"4355:16:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4377:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4382:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4373:3:14"},"nodeType":"YulFunctionCall","src":"4373:14:14"},{"name":"length","nodeType":"YulIdentifier","src":"4389:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4320:34:14"},"nodeType":"YulFunctionCall","src":"4320:76:14"},"nodeType":"YulExpressionStatement","src":"4320:76:14"},{"nodeType":"YulAssignment","src":"4405:57:14","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4420:3:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4433:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4441:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4429:3:14"},"nodeType":"YulFunctionCall","src":"4429:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4450:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4446:3:14"},"nodeType":"YulFunctionCall","src":"4446:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4425:3:14"},"nodeType":"YulFunctionCall","src":"4425:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:14"},"nodeType":"YulFunctionCall","src":"4416:39:14"},{"kind":"number","nodeType":"YulLiteral","src":"4457:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4412:3:14"},"nodeType":"YulFunctionCall","src":"4412:50:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4405:3:14"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4224:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4231:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4239:3:14","type":""}],"src":"4197:271:14"},{"body":{"nodeType":"YulBlock","src":"4955:838:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4987:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5003:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5008:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4999:3:14"},"nodeType":"YulFunctionCall","src":"4999:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5012:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4995:3:14"},"nodeType":"YulFunctionCall","src":"4995:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4983:3:14"},"nodeType":"YulFunctionCall","src":"4983:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4965:6:14"},"nodeType":"YulFunctionCall","src":"4965:51:14"},"nodeType":"YulExpressionStatement","src":"4965:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5036:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5047:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5032:3:14"},"nodeType":"YulFunctionCall","src":"5032:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5052:3:14","type":"","value":"416"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5025:6:14"},"nodeType":"YulFunctionCall","src":"5025:31:14"},"nodeType":"YulExpressionStatement","src":"5025:31:14"},{"nodeType":"YulVariableDeclaration","src":"5065:60:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5097:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5120:3:14","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:14"},"nodeType":"YulFunctionCall","src":"5105:19:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5079:17:14"},"nodeType":"YulFunctionCall","src":"5079:46:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5069:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5145:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5156:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5141:3:14"},"nodeType":"YulFunctionCall","src":"5141:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5165:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5173:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5161:3:14"},"nodeType":"YulFunctionCall","src":"5161:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5134:6:14"},"nodeType":"YulFunctionCall","src":"5134:50:14"},"nodeType":"YulExpressionStatement","src":"5134:50:14"},{"nodeType":"YulVariableDeclaration","src":"5193:47:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5225:6:14"},{"name":"tail_1","nodeType":"YulIdentifier","src":"5233:6:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5207:17:14"},"nodeType":"YulFunctionCall","src":"5207:33:14"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"5197:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5260:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5271:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5256:3:14"},"nodeType":"YulFunctionCall","src":"5256:18:14"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5280:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5288:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5276:3:14"},"nodeType":"YulFunctionCall","src":"5276:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5249:6:14"},"nodeType":"YulFunctionCall","src":"5249:50:14"},"nodeType":"YulExpressionStatement","src":"5249:50:14"},{"nodeType":"YulAssignment","src":"5308:41:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5334:6:14"},{"name":"tail_2","nodeType":"YulIdentifier","src":"5342:6:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5316:17:14"},"nodeType":"YulFunctionCall","src":"5316:33:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5308:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5380:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:14"},"nodeType":"YulFunctionCall","src":"5365:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"5386:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5358:6:14"},"nodeType":"YulFunctionCall","src":"5358:35:14"},"nodeType":"YulExpressionStatement","src":"5358:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5413:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5424:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5409:3:14"},"nodeType":"YulFunctionCall","src":"5409:19:14"},{"name":"value5","nodeType":"YulIdentifier","src":"5430:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5402:6:14"},"nodeType":"YulFunctionCall","src":"5402:35:14"},"nodeType":"YulExpressionStatement","src":"5402:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5457:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5468:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5453:3:14"},"nodeType":"YulFunctionCall","src":"5453:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"5474:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5446:6:14"},"nodeType":"YulFunctionCall","src":"5446:35:14"},"nodeType":"YulExpressionStatement","src":"5446:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5501:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5512:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5497:3:14"},"nodeType":"YulFunctionCall","src":"5497:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"5518:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5490:6:14"},"nodeType":"YulFunctionCall","src":"5490:35:14"},"nodeType":"YulExpressionStatement","src":"5490:35:14"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"5550:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5562:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5573:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5558:3:14"},"nodeType":"YulFunctionCall","src":"5558:19:14"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"5534:15:14"},"nodeType":"YulFunctionCall","src":"5534:44:14"},"nodeType":"YulExpressionStatement","src":"5534:44:14"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"5606:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5618:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5629:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5614:3:14"},"nodeType":"YulFunctionCall","src":"5614:19:14"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"5587:18:14"},"nodeType":"YulFunctionCall","src":"5587:47:14"},"nodeType":"YulExpressionStatement","src":"5587:47:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5654:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5665:3:14","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5650:3:14"},"nodeType":"YulFunctionCall","src":"5650:19:14"},{"name":"value10","nodeType":"YulIdentifier","src":"5671:7:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5643:6:14"},"nodeType":"YulFunctionCall","src":"5643:36:14"},"nodeType":"YulExpressionStatement","src":"5643:36:14"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"5704:7:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5717:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5728:3:14","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5713:3:14"},"nodeType":"YulFunctionCall","src":"5713:19:14"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"5688:15:14"},"nodeType":"YulFunctionCall","src":"5688:45:14"},"nodeType":"YulExpressionStatement","src":"5688:45:14"},{"expression":{"arguments":[{"name":"value12","nodeType":"YulIdentifier","src":"5758:7:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5782:3:14","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5767:3:14"},"nodeType":"YulFunctionCall","src":"5767:19:14"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"5742:15:14"},"nodeType":"YulFunctionCall","src":"5742:45:14"},"nodeType":"YulExpressionStatement","src":"5742:45:14"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_bool_t_bool__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4825:9:14","type":""},{"name":"value12","nodeType":"YulTypedName","src":"4836:7:14","type":""},{"name":"value11","nodeType":"YulTypedName","src":"4845:7:14","type":""},{"name":"value10","nodeType":"YulTypedName","src":"4854:7:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"4863:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"4871:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"4879:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4887:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4895:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4903:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4911:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4919:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4927:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4935:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4946:4:14","type":""}],"src":"4473:1320:14"},{"body":{"nodeType":"YulBlock","src":"5867:114:14","statements":[{"body":{"nodeType":"YulBlock","src":"5911:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5913:16:14"},"nodeType":"YulFunctionCall","src":"5913:18:14"},"nodeType":"YulExpressionStatement","src":"5913:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5883:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5891:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5880:2:14"},"nodeType":"YulFunctionCall","src":"5880:30:14"},"nodeType":"YulIf","src":"5877:56:14"},{"nodeType":"YulAssignment","src":"5942:33:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5958:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"5961:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5954:3:14"},"nodeType":"YulFunctionCall","src":"5954:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"5970:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5950:3:14"},"nodeType":"YulFunctionCall","src":"5950:25:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5942:4:14"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5847:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5858:4:14","type":""}],"src":"5798:183:14"},{"body":{"nodeType":"YulBlock","src":"6050:604:14","statements":[{"body":{"nodeType":"YulBlock","src":"6099:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6108:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6111:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6101:6:14"},"nodeType":"YulFunctionCall","src":"6101:12:14"},"nodeType":"YulExpressionStatement","src":"6101:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6078:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6086:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6074:3:14"},"nodeType":"YulFunctionCall","src":"6074:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"6093:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6070:3:14"},"nodeType":"YulFunctionCall","src":"6070:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6063:6:14"},"nodeType":"YulFunctionCall","src":"6063:35:14"},"nodeType":"YulIf","src":"6060:55:14"},{"nodeType":"YulVariableDeclaration","src":"6124:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6147:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6134:12:14"},"nodeType":"YulFunctionCall","src":"6134:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6128:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6163:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6173:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6167:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6186:71:14","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6253:2:14"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"6213:39:14"},"nodeType":"YulFunctionCall","src":"6213:43:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6197:15:14"},"nodeType":"YulFunctionCall","src":"6197:60:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6190:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6266:16:14","value":{"name":"dst","nodeType":"YulIdentifier","src":"6279:3:14"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6270:5:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6298:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6303:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6291:6:14"},"nodeType":"YulFunctionCall","src":"6291:15:14"},"nodeType":"YulExpressionStatement","src":"6291:15:14"},{"nodeType":"YulAssignment","src":"6315:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6326:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6331:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6322:3:14"},"nodeType":"YulFunctionCall","src":"6322:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6315:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"6343:46:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6365:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6377:1:14","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"6380:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6373:3:14"},"nodeType":"YulFunctionCall","src":"6373:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6361:3:14"},"nodeType":"YulFunctionCall","src":"6361:23:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6386:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6357:3:14"},"nodeType":"YulFunctionCall","src":"6357:32:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6347:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6417:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6426:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6429:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6419:6:14"},"nodeType":"YulFunctionCall","src":"6419:12:14"},"nodeType":"YulExpressionStatement","src":"6419:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6404:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"6412:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6401:2:14"},"nodeType":"YulFunctionCall","src":"6401:15:14"},"nodeType":"YulIf","src":"6398:35:14"},{"nodeType":"YulVariableDeclaration","src":"6442:26:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6457:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6465:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6453:3:14"},"nodeType":"YulFunctionCall","src":"6453:15:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6446:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6533:92:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6554:3:14"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6578:3:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6559:18:14"},"nodeType":"YulFunctionCall","src":"6559:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6547:6:14"},"nodeType":"YulFunctionCall","src":"6547:36:14"},"nodeType":"YulExpressionStatement","src":"6547:36:14"},{"nodeType":"YulAssignment","src":"6596:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6607:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6612:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6603:3:14"},"nodeType":"YulFunctionCall","src":"6603:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6596:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6488:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6493:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6485:2:14"},"nodeType":"YulFunctionCall","src":"6485:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6501:23:14","statements":[{"nodeType":"YulAssignment","src":"6503:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6514:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6519:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6510:3:14"},"nodeType":"YulFunctionCall","src":"6510:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6503:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"6481:3:14","statements":[]},"src":"6477:148:14"},{"nodeType":"YulAssignment","src":"6634:14:14","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"6643:5:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6634:5:14"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6024:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"6032:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6040:5:14","type":""}],"src":"5986:668:14"},{"body":{"nodeType":"YulBlock","src":"6736:752:14","statements":[{"body":{"nodeType":"YulBlock","src":"6785:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6794:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6797:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6787:6:14"},"nodeType":"YulFunctionCall","src":"6787:12:14"},"nodeType":"YulExpressionStatement","src":"6787:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6764:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6772:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:14"},"nodeType":"YulFunctionCall","src":"6760:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"6779:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6756:3:14"},"nodeType":"YulFunctionCall","src":"6756:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6749:6:14"},"nodeType":"YulFunctionCall","src":"6749:35:14"},"nodeType":"YulIf","src":"6746:55:14"},{"nodeType":"YulVariableDeclaration","src":"6810:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6833:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6820:12:14"},"nodeType":"YulFunctionCall","src":"6820:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6814:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6849:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6859:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6853:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6872:71:14","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6939:2:14"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"6899:39:14"},"nodeType":"YulFunctionCall","src":"6899:43:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6883:15:14"},"nodeType":"YulFunctionCall","src":"6883:60:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6876:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6952:16:14","value":{"name":"dst","nodeType":"YulIdentifier","src":"6965:3:14"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6956:5:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6984:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6989:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6977:6:14"},"nodeType":"YulFunctionCall","src":"6977:15:14"},"nodeType":"YulExpressionStatement","src":"6977:15:14"},{"nodeType":"YulAssignment","src":"7001:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7012:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7017:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:14"},"nodeType":"YulFunctionCall","src":"7008:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7001:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"7029:46:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7051:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7063:1:14","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"7066:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7059:3:14"},"nodeType":"YulFunctionCall","src":"7059:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7047:3:14"},"nodeType":"YulFunctionCall","src":"7047:23:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7072:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7043:3:14"},"nodeType":"YulFunctionCall","src":"7043:32:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7033:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7103:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7115:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7105:6:14"},"nodeType":"YulFunctionCall","src":"7105:12:14"},"nodeType":"YulExpressionStatement","src":"7105:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7090:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"7098:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7087:2:14"},"nodeType":"YulFunctionCall","src":"7087:15:14"},"nodeType":"YulIf","src":"7084:35:14"},{"nodeType":"YulVariableDeclaration","src":"7128:26:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7143:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7151:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:14"},"nodeType":"YulFunctionCall","src":"7139:15:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7132:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7219:240:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7233:30:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7259:3:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7246:12:14"},"nodeType":"YulFunctionCall","src":"7246:17:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7237:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7312:74:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7330:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7340:1:14","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7334:2:14","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7365:2:14"},{"name":"_3","nodeType":"YulIdentifier","src":"7369:2:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7358:6:14"},"nodeType":"YulFunctionCall","src":"7358:14:14"},"nodeType":"YulExpressionStatement","src":"7358:14:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7289:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"7296:1:14","type":"","value":"6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7286:2:14"},"nodeType":"YulFunctionCall","src":"7286:12:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7279:6:14"},"nodeType":"YulFunctionCall","src":"7279:20:14"},"nodeType":"YulIf","src":"7276:110:14"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7406:3:14"},{"name":"value","nodeType":"YulIdentifier","src":"7411:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7399:6:14"},"nodeType":"YulFunctionCall","src":"7399:18:14"},"nodeType":"YulExpressionStatement","src":"7399:18:14"},{"nodeType":"YulAssignment","src":"7430:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7441:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7446:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7437:3:14"},"nodeType":"YulFunctionCall","src":"7437:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7430:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7174:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7179:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7171:2:14"},"nodeType":"YulFunctionCall","src":"7171:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7187:23:14","statements":[{"nodeType":"YulAssignment","src":"7189:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7200:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7205:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7196:3:14"},"nodeType":"YulFunctionCall","src":"7196:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7189:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"7167:3:14","statements":[]},"src":"7163:296:14"},{"nodeType":"YulAssignment","src":"7468:14:14","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7477:5:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7468:5:14"}]}]},"name":"abi_decode_array_enum_ParticipantRole_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6710:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"6718:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6726:5:14","type":""}],"src":"6659:829:14"},{"body":{"nodeType":"YulBlock","src":"7556:825:14","statements":[{"body":{"nodeType":"YulBlock","src":"7605:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7614:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7617:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7607:6:14"},"nodeType":"YulFunctionCall","src":"7607:12:14"},"nodeType":"YulExpressionStatement","src":"7607:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7584:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7592:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7580:3:14"},"nodeType":"YulFunctionCall","src":"7580:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"7599:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7576:3:14"},"nodeType":"YulFunctionCall","src":"7576:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7569:6:14"},"nodeType":"YulFunctionCall","src":"7569:35:14"},"nodeType":"YulIf","src":"7566:55:14"},{"nodeType":"YulVariableDeclaration","src":"7630:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7653:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7640:12:14"},"nodeType":"YulFunctionCall","src":"7640:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7634:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7669:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7679:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7673:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7692:71:14","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7759:2:14"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7719:39:14"},"nodeType":"YulFunctionCall","src":"7719:43:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7703:15:14"},"nodeType":"YulFunctionCall","src":"7703:60:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7696:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7772:16:14","value":{"name":"dst","nodeType":"YulIdentifier","src":"7785:3:14"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7776:5:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7804:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7809:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7797:6:14"},"nodeType":"YulFunctionCall","src":"7797:15:14"},"nodeType":"YulExpressionStatement","src":"7797:15:14"},{"nodeType":"YulAssignment","src":"7821:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7832:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7837:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7828:3:14"},"nodeType":"YulFunctionCall","src":"7828:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7821:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"7849:46:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7871:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7883:1:14","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"7886:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7879:3:14"},"nodeType":"YulFunctionCall","src":"7879:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7867:3:14"},"nodeType":"YulFunctionCall","src":"7867:23:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7892:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7863:3:14"},"nodeType":"YulFunctionCall","src":"7863:32:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7853:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7923:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7932:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7935:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7925:6:14"},"nodeType":"YulFunctionCall","src":"7925:12:14"},"nodeType":"YulExpressionStatement","src":"7925:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7910:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"7918:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7907:2:14"},"nodeType":"YulFunctionCall","src":"7907:15:14"},"nodeType":"YulIf","src":"7904:35:14"},{"nodeType":"YulVariableDeclaration","src":"7948:26:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7963:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"7971:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7959:3:14"},"nodeType":"YulFunctionCall","src":"7959:15:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7952:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8039:313:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8053:36:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8085:3:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8072:12:14"},"nodeType":"YulFunctionCall","src":"8072:17:14"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"8057:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8153:74:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8171:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8181:1:14","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8175:2:14","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8206:2:14"},{"name":"_3","nodeType":"YulIdentifier","src":"8210:2:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8199:6:14"},"nodeType":"YulFunctionCall","src":"8199:14:14"},"nodeType":"YulExpressionStatement","src":"8199:14:14"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"8108:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"8121:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8105:2:14"},"nodeType":"YulFunctionCall","src":"8105:35:14"},"nodeType":"YulIf","src":"8102:125:14"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8247:3:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8278:6:14"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"8286:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8274:3:14"},"nodeType":"YulFunctionCall","src":"8274:24:14"},{"name":"_2","nodeType":"YulIdentifier","src":"8300:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8270:3:14"},"nodeType":"YulFunctionCall","src":"8270:33:14"},{"name":"end","nodeType":"YulIdentifier","src":"8305:3:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8252:17:14"},"nodeType":"YulFunctionCall","src":"8252:57:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8240:6:14"},"nodeType":"YulFunctionCall","src":"8240:70:14"},"nodeType":"YulExpressionStatement","src":"8240:70:14"},{"nodeType":"YulAssignment","src":"8323:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8334:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"8339:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8330:3:14"},"nodeType":"YulFunctionCall","src":"8330:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8323:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7994:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7999:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7991:2:14"},"nodeType":"YulFunctionCall","src":"7991:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8007:23:14","statements":[{"nodeType":"YulAssignment","src":"8009:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8020:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"8025:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8016:3:14"},"nodeType":"YulFunctionCall","src":"8016:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8009:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"7987:3:14","statements":[]},"src":"7983:369:14"},{"nodeType":"YulAssignment","src":"8361:14:14","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"8370:5:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8361:5:14"}]}]},"name":"abi_decode_array_string_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7530:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"7538:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7546:5:14","type":""}],"src":"7493:888:14"},{"body":{"nodeType":"YulBlock","src":"8693:1228:14","statements":[{"body":{"nodeType":"YulBlock","src":"8740:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8749:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8742:6:14"},"nodeType":"YulFunctionCall","src":"8742:12:14"},"nodeType":"YulExpressionStatement","src":"8742:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8714:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8723:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8710:3:14"},"nodeType":"YulFunctionCall","src":"8710:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"8735:3:14","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8706:3:14"},"nodeType":"YulFunctionCall","src":"8706:33:14"},"nodeType":"YulIf","src":"8703:53:14"},{"nodeType":"YulVariableDeclaration","src":"8765:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8792:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8779:12:14"},"nodeType":"YulFunctionCall","src":"8779:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8769:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8811:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8821:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8815:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8866:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8875:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8878:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8868:6:14"},"nodeType":"YulFunctionCall","src":"8868:12:14"},"nodeType":"YulExpressionStatement","src":"8868:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8854:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8862:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8851:2:14"},"nodeType":"YulFunctionCall","src":"8851:14:14"},"nodeType":"YulIf","src":"8848:34:14"},{"nodeType":"YulAssignment","src":"8891:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8923:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8934:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8919:3:14"},"nodeType":"YulFunctionCall","src":"8919:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8943:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8901:17:14"},"nodeType":"YulFunctionCall","src":"8901:50:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8891:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"8960:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8993:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9004:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8989:3:14"},"nodeType":"YulFunctionCall","src":"8989:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8976:12:14"},"nodeType":"YulFunctionCall","src":"8976:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"8964:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9037:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9046:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9049:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9039:6:14"},"nodeType":"YulFunctionCall","src":"9039:12:14"},"nodeType":"YulExpressionStatement","src":"9039:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9023:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9033:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9020:2:14"},"nodeType":"YulFunctionCall","src":"9020:16:14"},"nodeType":"YulIf","src":"9017:36:14"},{"nodeType":"YulAssignment","src":"9062:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9094:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9105:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9090:3:14"},"nodeType":"YulFunctionCall","src":"9090:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9116:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9072:17:14"},"nodeType":"YulFunctionCall","src":"9072:52:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9062:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"9133:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9166:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9177:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9162:3:14"},"nodeType":"YulFunctionCall","src":"9162:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9149:12:14"},"nodeType":"YulFunctionCall","src":"9149:32:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"9137:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9210:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9219:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9222:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9212:6:14"},"nodeType":"YulFunctionCall","src":"9212:12:14"},"nodeType":"YulExpressionStatement","src":"9212:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"9196:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9206:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9193:2:14"},"nodeType":"YulFunctionCall","src":"9193:16:14"},"nodeType":"YulIf","src":"9190:36:14"},{"nodeType":"YulAssignment","src":"9235:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9267:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"9278:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9263:3:14"},"nodeType":"YulFunctionCall","src":"9263:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9289:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9245:17:14"},"nodeType":"YulFunctionCall","src":"9245:52:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9235:6:14"}]},{"nodeType":"YulAssignment","src":"9306:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9333:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9344:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9329:3:14"},"nodeType":"YulFunctionCall","src":"9329:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9316:12:14"},"nodeType":"YulFunctionCall","src":"9316:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9306:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"9357:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9390:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9401:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9386:3:14"},"nodeType":"YulFunctionCall","src":"9386:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9373:12:14"},"nodeType":"YulFunctionCall","src":"9373:33:14"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"9361:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9435:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9444:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9447:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9437:6:14"},"nodeType":"YulFunctionCall","src":"9437:12:14"},"nodeType":"YulExpressionStatement","src":"9437:12:14"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"9421:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9431:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9418:2:14"},"nodeType":"YulFunctionCall","src":"9418:16:14"},"nodeType":"YulIf","src":"9415:36:14"},{"nodeType":"YulAssignment","src":"9460:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9503:9:14"},{"name":"offset_3","nodeType":"YulIdentifier","src":"9514:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9499:3:14"},"nodeType":"YulFunctionCall","src":"9499:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9525:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"9470:28:14"},"nodeType":"YulFunctionCall","src":"9470:63:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9460:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"9542:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9575:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9586:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9571:3:14"},"nodeType":"YulFunctionCall","src":"9571:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9558:12:14"},"nodeType":"YulFunctionCall","src":"9558:33:14"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"9546:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9620:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9629:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9632:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9622:6:14"},"nodeType":"YulFunctionCall","src":"9622:12:14"},"nodeType":"YulExpressionStatement","src":"9622:12:14"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"9606:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9616:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9603:2:14"},"nodeType":"YulFunctionCall","src":"9603:16:14"},"nodeType":"YulIf","src":"9600:36:14"},{"nodeType":"YulAssignment","src":"9645:86:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9701:9:14"},{"name":"offset_4","nodeType":"YulIdentifier","src":"9712:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9697:3:14"},"nodeType":"YulFunctionCall","src":"9697:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9723:7:14"}],"functionName":{"name":"abi_decode_array_enum_ParticipantRole_dyn","nodeType":"YulIdentifier","src":"9655:41:14"},"nodeType":"YulFunctionCall","src":"9655:76:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9645:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"9740:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9773:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9784:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9769:3:14"},"nodeType":"YulFunctionCall","src":"9769:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9756:12:14"},"nodeType":"YulFunctionCall","src":"9756:33:14"},"variables":[{"name":"offset_5","nodeType":"YulTypedName","src":"9744:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9818:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9827:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9830:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9820:6:14"},"nodeType":"YulFunctionCall","src":"9820:12:14"},"nodeType":"YulExpressionStatement","src":"9820:12:14"}]},"condition":{"arguments":[{"name":"offset_5","nodeType":"YulIdentifier","src":"9804:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9814:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9801:2:14"},"nodeType":"YulFunctionCall","src":"9801:16:14"},"nodeType":"YulIf","src":"9798:36:14"},{"nodeType":"YulAssignment","src":"9843:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9885:9:14"},{"name":"offset_5","nodeType":"YulIdentifier","src":"9896:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9881:3:14"},"nodeType":"YulFunctionCall","src":"9881:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9907:7:14"}],"functionName":{"name":"abi_decode_array_string_dyn","nodeType":"YulIdentifier","src":"9853:27:14"},"nodeType":"YulFunctionCall","src":"9853:62:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"9843:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8611:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8622:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8634:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8642:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8650:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8658:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8666:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8674:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8682:6:14","type":""}],"src":"8386:1535:14"},{"body":{"nodeType":"YulBlock","src":"10013:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"10059:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10068:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10071:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10061:6:14"},"nodeType":"YulFunctionCall","src":"10061:12:14"},"nodeType":"YulExpressionStatement","src":"10061:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10034:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10043:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10030:3:14"},"nodeType":"YulFunctionCall","src":"10030:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10055:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10026:3:14"},"nodeType":"YulFunctionCall","src":"10026:32:14"},"nodeType":"YulIf","src":"10023:52:14"},{"nodeType":"YulAssignment","src":"10084:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10113:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10094:18:14"},"nodeType":"YulFunctionCall","src":"10094:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10084:6:14"}]},{"nodeType":"YulAssignment","src":"10132:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10159:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10170:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10155:3:14"},"nodeType":"YulFunctionCall","src":"10155:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10142:12:14"},"nodeType":"YulFunctionCall","src":"10142:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10132:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9971:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9982:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9994:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10002:6:14","type":""}],"src":"9926:254:14"},{"body":{"nodeType":"YulBlock","src":"10306:99:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10323:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10334:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10316:6:14"},"nodeType":"YulFunctionCall","src":"10316:21:14"},"nodeType":"YulExpressionStatement","src":"10316:21:14"},{"nodeType":"YulAssignment","src":"10346:53:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10372:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10384:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10395:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10380:3:14"},"nodeType":"YulFunctionCall","src":"10380:18:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10354:17:14"},"nodeType":"YulFunctionCall","src":"10354:45:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10346:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10275:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10286:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10297:4:14","type":""}],"src":"10185:220:14"},{"body":{"nodeType":"YulBlock","src":"10530:102:14","statements":[{"nodeType":"YulAssignment","src":"10540:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:14"},"nodeType":"YulFunctionCall","src":"10548:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10582:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10597:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10618:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10609:3:14"},"nodeType":"YulFunctionCall","src":"10609:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"10622:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10605:3:14"},"nodeType":"YulFunctionCall","src":"10605:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10593:3:14"},"nodeType":"YulFunctionCall","src":"10593:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10575:6:14"},"nodeType":"YulFunctionCall","src":"10575:51:14"},"nodeType":"YulExpressionStatement","src":"10575:51:14"}]},"name":"abi_encode_tuple_t_contract$_IMediToken_$5946__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10499:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10510:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10521:4:14","type":""}],"src":"10410:222:14"},{"body":{"nodeType":"YulBlock","src":"10734:299:14","statements":[{"body":{"nodeType":"YulBlock","src":"10780:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10789:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10792:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10782:6:14"},"nodeType":"YulFunctionCall","src":"10782:12:14"},"nodeType":"YulExpressionStatement","src":"10782:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10755:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10764:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10751:3:14"},"nodeType":"YulFunctionCall","src":"10751:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10776:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10747:3:14"},"nodeType":"YulFunctionCall","src":"10747:32:14"},"nodeType":"YulIf","src":"10744:52:14"},{"nodeType":"YulVariableDeclaration","src":"10805:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10832:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10819:12:14"},"nodeType":"YulFunctionCall","src":"10819:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10809:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"10885:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10894:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10897:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10887:6:14"},"nodeType":"YulFunctionCall","src":"10887:12:14"},"nodeType":"YulExpressionStatement","src":"10887:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10857:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10865:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10854:2:14"},"nodeType":"YulFunctionCall","src":"10854:30:14"},"nodeType":"YulIf","src":"10851:50:14"},{"nodeType":"YulAssignment","src":"10910:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10942:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10953:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10938:3:14"},"nodeType":"YulFunctionCall","src":"10938:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10962:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10920:17:14"},"nodeType":"YulFunctionCall","src":"10920:50:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10910:6:14"}]},{"nodeType":"YulAssignment","src":"10979:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11012:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11023:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11008:3:14"},"nodeType":"YulFunctionCall","src":"11008:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10989:18:14"},"nodeType":"YulFunctionCall","src":"10989:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10979:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10692:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10703:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10715:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10723:6:14","type":""}],"src":"10637:396:14"},{"body":{"nodeType":"YulBlock","src":"11155:151:14","statements":[{"nodeType":"YulAssignment","src":"11165:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11177:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11188:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11173:3:14"},"nodeType":"YulFunctionCall","src":"11173:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11165:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11207:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11232:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11225:6:14"},"nodeType":"YulFunctionCall","src":"11225:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11218:6:14"},"nodeType":"YulFunctionCall","src":"11218:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11200:6:14"},"nodeType":"YulFunctionCall","src":"11200:41:14"},"nodeType":"YulExpressionStatement","src":"11200:41:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11261:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11272:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11257:3:14"},"nodeType":"YulFunctionCall","src":"11257:18:14"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11291:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11284:6:14"},"nodeType":"YulFunctionCall","src":"11284:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11277:6:14"},"nodeType":"YulFunctionCall","src":"11277:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11250:6:14"},"nodeType":"YulFunctionCall","src":"11250:50:14"},"nodeType":"YulExpressionStatement","src":"11250:50:14"}]},"name":"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11116:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11127:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11135:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11146:4:14","type":""}],"src":"11038:268:14"},{"body":{"nodeType":"YulBlock","src":"11372:400:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11382:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11402:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11396:5:14"},"nodeType":"YulFunctionCall","src":"11396:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11386:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11424:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"11429:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11417:6:14"},"nodeType":"YulFunctionCall","src":"11417:19:14"},"nodeType":"YulExpressionStatement","src":"11417:19:14"},{"nodeType":"YulVariableDeclaration","src":"11445:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11455:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11449:2:14","type":""}]},{"nodeType":"YulAssignment","src":"11468:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11479:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11484:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:14"},"nodeType":"YulFunctionCall","src":"11475:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11468:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"11496:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11514:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11521:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11510:3:14"},"nodeType":"YulFunctionCall","src":"11510:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11500:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11533:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11542:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11537:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11601:146:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11622:3:14"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11637:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11631:5:14"},"nodeType":"YulFunctionCall","src":"11631:13:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11654:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11659:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11650:3:14"},"nodeType":"YulFunctionCall","src":"11650:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"11663:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11646:3:14"},"nodeType":"YulFunctionCall","src":"11646:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11627:3:14"},"nodeType":"YulFunctionCall","src":"11627:39:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11615:6:14"},"nodeType":"YulFunctionCall","src":"11615:52:14"},"nodeType":"YulExpressionStatement","src":"11615:52:14"},{"nodeType":"YulAssignment","src":"11680:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11691:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11696:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11687:3:14"},"nodeType":"YulFunctionCall","src":"11687:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11680:3:14"}]},{"nodeType":"YulAssignment","src":"11712:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11726:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11734:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11722:3:14"},"nodeType":"YulFunctionCall","src":"11722:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11712:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11563:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"11566:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11560:2:14"},"nodeType":"YulFunctionCall","src":"11560:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11574:18:14","statements":[{"nodeType":"YulAssignment","src":"11576:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11585:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"11588:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11581:3:14"},"nodeType":"YulFunctionCall","src":"11581:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11576:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"11556:3:14","statements":[]},"src":"11552:195:14"},{"nodeType":"YulAssignment","src":"11756:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"11763:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11756:3:14"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11349:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11356:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11364:3:14","type":""}],"src":"11311:461:14"},{"body":{"nodeType":"YulBlock","src":"11809:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11826:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11833:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11838:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11829:3:14"},"nodeType":"YulFunctionCall","src":"11829:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11819:6:14"},"nodeType":"YulFunctionCall","src":"11819:31:14"},"nodeType":"YulExpressionStatement","src":"11819:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11866:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11869:4:14","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11859:6:14"},"nodeType":"YulFunctionCall","src":"11859:15:14"},"nodeType":"YulExpressionStatement","src":"11859:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11890:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11893:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11883:6:14"},"nodeType":"YulFunctionCall","src":"11883:15:14"},"nodeType":"YulExpressionStatement","src":"11883:15:14"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11777:127:14"},{"body":{"nodeType":"YulBlock","src":"11966:186:14","statements":[{"body":{"nodeType":"YulBlock","src":"12008:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12029:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12036:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12041:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12032:3:14"},"nodeType":"YulFunctionCall","src":"12032:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12022:6:14"},"nodeType":"YulFunctionCall","src":"12022:31:14"},"nodeType":"YulExpressionStatement","src":"12022:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12073:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12076:4:14","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12066:6:14"},"nodeType":"YulFunctionCall","src":"12066:15:14"},"nodeType":"YulExpressionStatement","src":"12066:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12101:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12104:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12094:6:14"},"nodeType":"YulFunctionCall","src":"12094:15:14"},"nodeType":"YulExpressionStatement","src":"12094:15:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11989:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"11996:1:14","type":"","value":"6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11986:2:14"},"nodeType":"YulFunctionCall","src":"11986:12:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11979:6:14"},"nodeType":"YulFunctionCall","src":"11979:20:14"},"nodeType":"YulIf","src":"11976:143:14"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12135:3:14"},{"name":"value","nodeType":"YulIdentifier","src":"12140:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12128:6:14"},"nodeType":"YulFunctionCall","src":"12128:18:14"},"nodeType":"YulExpressionStatement","src":"12128:18:14"}]},"name":"abi_encode_enum_ParticipantRole","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11950:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11957:3:14","type":""}],"src":"11909:243:14"},{"body":{"nodeType":"YulBlock","src":"12218:374:14","statements":[{"nodeType":"YulVariableDeclaration","src":"12228:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12248:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12242:5:14"},"nodeType":"YulFunctionCall","src":"12242:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12232:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12270:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"12275:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12263:6:14"},"nodeType":"YulFunctionCall","src":"12263:19:14"},"nodeType":"YulExpressionStatement","src":"12263:19:14"},{"nodeType":"YulVariableDeclaration","src":"12291:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"12301:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12295:2:14","type":""}]},{"nodeType":"YulAssignment","src":"12314:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12325:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"12330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12321:3:14"},"nodeType":"YulFunctionCall","src":"12321:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12314:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"12342:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12360:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"12367:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12356:3:14"},"nodeType":"YulFunctionCall","src":"12356:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12346:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12379:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"12388:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12383:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"12447:120:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12468:3:14"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12479:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12473:5:14"},"nodeType":"YulFunctionCall","src":"12473:13:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12461:6:14"},"nodeType":"YulFunctionCall","src":"12461:26:14"},"nodeType":"YulExpressionStatement","src":"12461:26:14"},{"nodeType":"YulAssignment","src":"12500:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12511:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"12516:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12507:3:14"},"nodeType":"YulFunctionCall","src":"12507:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12500:3:14"}]},{"nodeType":"YulAssignment","src":"12532:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12546:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"12554:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12542:3:14"},"nodeType":"YulFunctionCall","src":"12542:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12532:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12409:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"12412:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12406:2:14"},"nodeType":"YulFunctionCall","src":"12406:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12420:18:14","statements":[{"nodeType":"YulAssignment","src":"12422:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12431:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"12434:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12427:3:14"},"nodeType":"YulFunctionCall","src":"12427:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12422:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"12402:3:14","statements":[]},"src":"12398:169:14"},{"nodeType":"YulAssignment","src":"12576:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"12583:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12576:3:14"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12195:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12202:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12210:3:14","type":""}],"src":"12157:435:14"},{"body":{"nodeType":"YulBlock","src":"12994:1154:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13011:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13022:3:14","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13004:6:14"},"nodeType":"YulFunctionCall","src":"13004:22:14"},"nodeType":"YulExpressionStatement","src":"13004:22:14"},{"nodeType":"YulVariableDeclaration","src":"13035:71:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13078:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13090:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13101:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13086:3:14"},"nodeType":"YulFunctionCall","src":"13086:19:14"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"13049:28:14"},"nodeType":"YulFunctionCall","src":"13049:57:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13039:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13115:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13125:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13119:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13147:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13158:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13143:3:14"},"nodeType":"YulFunctionCall","src":"13143:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13167:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13175:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13163:3:14"},"nodeType":"YulFunctionCall","src":"13163:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13136:6:14"},"nodeType":"YulFunctionCall","src":"13136:50:14"},"nodeType":"YulExpressionStatement","src":"13136:50:14"},{"nodeType":"YulVariableDeclaration","src":"13195:17:14","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"13206:6:14"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"13199:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13221:27:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13241:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13235:5:14"},"nodeType":"YulFunctionCall","src":"13235:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13225:6:14","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13264:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"13272:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13257:6:14"},"nodeType":"YulFunctionCall","src":"13257:22:14"},"nodeType":"YulExpressionStatement","src":"13257:22:14"},{"nodeType":"YulAssignment","src":"13288:22:14","value":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13299:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13307:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13295:3:14"},"nodeType":"YulFunctionCall","src":"13295:15:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13288:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"13319:29:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13337:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13345:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13333:3:14"},"nodeType":"YulFunctionCall","src":"13333:15:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13323:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13357:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13366:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13361:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"13425:145:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13477:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13471:5:14"},"nodeType":"YulFunctionCall","src":"13471:13:14"},{"name":"pos","nodeType":"YulIdentifier","src":"13486:3:14"}],"functionName":{"name":"abi_encode_enum_ParticipantRole","nodeType":"YulIdentifier","src":"13439:31:14"},"nodeType":"YulFunctionCall","src":"13439:51:14"},"nodeType":"YulExpressionStatement","src":"13439:51:14"},{"nodeType":"YulAssignment","src":"13503:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13514:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13519:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13510:3:14"},"nodeType":"YulFunctionCall","src":"13510:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13503:3:14"}]},{"nodeType":"YulAssignment","src":"13535:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13549:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13557:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:14"},"nodeType":"YulFunctionCall","src":"13545:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13535:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13387:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"13390:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13384:2:14"},"nodeType":"YulFunctionCall","src":"13384:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13398:18:14","statements":[{"nodeType":"YulAssignment","src":"13400:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13409:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"13412:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13405:3:14"},"nodeType":"YulFunctionCall","src":"13405:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13400:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"13380:3:14","statements":[]},"src":"13376:194:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13590:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13601:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13586:3:14"},"nodeType":"YulFunctionCall","src":"13586:18:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13610:3:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13615:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13606:3:14"},"nodeType":"YulFunctionCall","src":"13606:19:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13579:6:14"},"nodeType":"YulFunctionCall","src":"13579:47:14"},"nodeType":"YulExpressionStatement","src":"13579:47:14"},{"nodeType":"YulVariableDeclaration","src":"13635:16:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"13648:3:14"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"13639:5:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13660:29:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13682:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13676:5:14"},"nodeType":"YulFunctionCall","src":"13676:13:14"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"13664:8:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13705:3:14"},{"name":"length_1","nodeType":"YulIdentifier","src":"13710:8:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13698:6:14"},"nodeType":"YulFunctionCall","src":"13698:21:14"},"nodeType":"YulExpressionStatement","src":"13698:21:14"},{"nodeType":"YulAssignment","src":"13728:21:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13741:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13746:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13737:3:14"},"nodeType":"YulFunctionCall","src":"13737:12:14"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13728:5:14"}]},{"nodeType":"YulVariableDeclaration","src":"13758:31:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13778:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13786:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13774:3:14"},"nodeType":"YulFunctionCall","src":"13774:15:14"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"13762:8:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13798:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13809:1:14","type":"","value":"0"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"13802:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"13876:148:14","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13897:5:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13924:8:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13918:5:14"},"nodeType":"YulFunctionCall","src":"13918:15:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13911:6:14"},"nodeType":"YulFunctionCall","src":"13911:23:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13904:6:14"},"nodeType":"YulFunctionCall","src":"13904:31:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13890:6:14"},"nodeType":"YulFunctionCall","src":"13890:46:14"},"nodeType":"YulExpressionStatement","src":"13890:46:14"},{"nodeType":"YulAssignment","src":"13949:23:14","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13962:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13969:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13958:3:14"},"nodeType":"YulFunctionCall","src":"13958:14:14"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13949:5:14"}]},{"nodeType":"YulAssignment","src":"13985:29:14","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"14001:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14011:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13997:3:14"},"nodeType":"YulFunctionCall","src":"13997:17:14"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13985:8:14"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"13830:3:14"},{"name":"length_1","nodeType":"YulIdentifier","src":"13835:8:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13827:2:14"},"nodeType":"YulFunctionCall","src":"13827:17:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13845:22:14","statements":[{"nodeType":"YulAssignment","src":"13847:18:14","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"13858:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13863:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:14"},"nodeType":"YulFunctionCall","src":"13854:11:14"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"13847:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"13823:3:14","statements":[]},"src":"13819:205:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14044:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14055:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14040:3:14"},"nodeType":"YulFunctionCall","src":"14040:18:14"},{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"14064:5:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14071:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14060:3:14"},"nodeType":"YulFunctionCall","src":"14060:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14033:6:14"},"nodeType":"YulFunctionCall","src":"14033:49:14"},"nodeType":"YulExpressionStatement","src":"14033:49:14"},{"nodeType":"YulAssignment","src":"14091:51:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14128:6:14"},{"name":"pos_1","nodeType":"YulIdentifier","src":"14136:5:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"14099:28:14"},"nodeType":"YulFunctionCall","src":"14099:43:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14091:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12939:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12950:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12958:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12966:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12974:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12985:4:14","type":""}],"src":"12597:1551:14"},{"body":{"nodeType":"YulBlock","src":"14213:556:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14223:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14243:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14237:5:14"},"nodeType":"YulFunctionCall","src":"14237:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14227:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14265:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"14270:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14258:6:14"},"nodeType":"YulFunctionCall","src":"14258:19:14"},"nodeType":"YulExpressionStatement","src":"14258:19:14"},{"nodeType":"YulVariableDeclaration","src":"14286:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14296:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14290:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14309:31:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14332:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14337:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14328:3:14"},"nodeType":"YulFunctionCall","src":"14328:12:14"},"variables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14313:11:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14349:24:14","value":{"name":"updated_pos","nodeType":"YulIdentifier","src":"14362:11:14"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"14353:5:14","type":""}]},{"nodeType":"YulAssignment","src":"14382:18:14","value":{"name":"updated_pos","nodeType":"YulIdentifier","src":"14389:11:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14382:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"14409:38:14","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"14425:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14436:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"14439:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14432:3:14"},"nodeType":"YulFunctionCall","src":"14432:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14421:3:14"},"nodeType":"YulFunctionCall","src":"14421:26:14"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14413:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14456:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14474:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14481:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14470:3:14"},"nodeType":"YulFunctionCall","src":"14470:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14460:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14493:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14502:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14497:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"14561:182:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14582:3:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14591:4:14"},{"name":"pos_1","nodeType":"YulIdentifier","src":"14597:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14587:3:14"},"nodeType":"YulFunctionCall","src":"14587:16:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14575:6:14"},"nodeType":"YulFunctionCall","src":"14575:29:14"},"nodeType":"YulExpressionStatement","src":"14575:29:14"},{"nodeType":"YulAssignment","src":"14617:46:14","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14649:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14643:5:14"},"nodeType":"YulFunctionCall","src":"14643:13:14"},{"name":"tail","nodeType":"YulIdentifier","src":"14658:4:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14625:17:14"},"nodeType":"YulFunctionCall","src":"14625:38:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14617:4:14"}]},{"nodeType":"YulAssignment","src":"14676:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14690:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14698:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14686:3:14"},"nodeType":"YulFunctionCall","src":"14686:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14676:6:14"}]},{"nodeType":"YulAssignment","src":"14714:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14725:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14730:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14721:3:14"},"nodeType":"YulFunctionCall","src":"14721:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14714:3:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14523:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"14526:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14520:2:14"},"nodeType":"YulFunctionCall","src":"14520:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14534:18:14","statements":[{"nodeType":"YulAssignment","src":"14536:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14545:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"14548:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14541:3:14"},"nodeType":"YulFunctionCall","src":"14541:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14536:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"14516:3:14","statements":[]},"src":"14512:231:14"},{"nodeType":"YulAssignment","src":"14752:11:14","value":{"name":"tail","nodeType":"YulIdentifier","src":"14759:4:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14752:3:14"}]}]},"name":"abi_encode_array_string_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14190:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14197:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14205:3:14","type":""}],"src":"14153:616:14"},{"body":{"nodeType":"YulBlock","src":"15199:488:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15216:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15227:3:14","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15209:6:14"},"nodeType":"YulFunctionCall","src":"15209:22:14"},"nodeType":"YulExpressionStatement","src":"15209:22:14"},{"nodeType":"YulVariableDeclaration","src":"15240:71:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15283:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15295:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15306:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15291:3:14"},"nodeType":"YulFunctionCall","src":"15291:19:14"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"15254:28:14"},"nodeType":"YulFunctionCall","src":"15254:57:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"15244:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15331:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15342:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15327:3:14"},"nodeType":"YulFunctionCall","src":"15327:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"15351:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15359:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15347:3:14"},"nodeType":"YulFunctionCall","src":"15347:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15320:6:14"},"nodeType":"YulFunctionCall","src":"15320:50:14"},"nodeType":"YulExpressionStatement","src":"15320:50:14"},{"nodeType":"YulVariableDeclaration","src":"15379:58:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15422:6:14"},{"name":"tail_1","nodeType":"YulIdentifier","src":"15430:6:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"15393:28:14"},"nodeType":"YulFunctionCall","src":"15393:44:14"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"15383:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15457:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15468:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15453:3:14"},"nodeType":"YulFunctionCall","src":"15453:18:14"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"15477:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15485:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15473:3:14"},"nodeType":"YulFunctionCall","src":"15473:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15446:6:14"},"nodeType":"YulFunctionCall","src":"15446:50:14"},"nodeType":"YulExpressionStatement","src":"15446:50:14"},{"nodeType":"YulVariableDeclaration","src":"15505:57:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15547:6:14"},{"name":"tail_2","nodeType":"YulIdentifier","src":"15555:6:14"}],"functionName":{"name":"abi_encode_array_string_dyn","nodeType":"YulIdentifier","src":"15519:27:14"},"nodeType":"YulFunctionCall","src":"15519:43:14"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"15509:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15582:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15593:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15578:3:14"},"nodeType":"YulFunctionCall","src":"15578:18:14"},{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"15602:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15610:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15598:3:14"},"nodeType":"YulFunctionCall","src":"15598:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15571:6:14"},"nodeType":"YulFunctionCall","src":"15571:50:14"},"nodeType":"YulExpressionStatement","src":"15571:50:14"},{"nodeType":"YulAssignment","src":"15630:51:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15666:6:14"},{"name":"tail_3","nodeType":"YulIdentifier","src":"15674:6:14"}],"functionName":{"name":"abi_encode_array_string_dyn","nodeType":"YulIdentifier","src":"15638:27:14"},"nodeType":"YulFunctionCall","src":"15638:43:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15630:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15144:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15155:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15163:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15171:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15179:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15190:4:14","type":""}],"src":"14774:913:14"},{"body":{"nodeType":"YulBlock","src":"15806:356:14","statements":[{"body":{"nodeType":"YulBlock","src":"15852:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15861:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15864:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15854:6:14"},"nodeType":"YulFunctionCall","src":"15854:12:14"},"nodeType":"YulExpressionStatement","src":"15854:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15827:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15836:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15823:3:14"},"nodeType":"YulFunctionCall","src":"15823:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"15848:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15819:3:14"},"nodeType":"YulFunctionCall","src":"15819:32:14"},"nodeType":"YulIf","src":"15816:52:14"},{"nodeType":"YulVariableDeclaration","src":"15877:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15904:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15891:12:14"},"nodeType":"YulFunctionCall","src":"15891:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15881:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"15957:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15966:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15969:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15959:6:14"},"nodeType":"YulFunctionCall","src":"15959:12:14"},"nodeType":"YulExpressionStatement","src":"15959:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15929:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15937:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15926:2:14"},"nodeType":"YulFunctionCall","src":"15926:30:14"},"nodeType":"YulIf","src":"15923:50:14"},{"nodeType":"YulAssignment","src":"15982:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16014:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"16025:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16010:3:14"},"nodeType":"YulFunctionCall","src":"16010:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16034:7:14"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"15992:17:14"},"nodeType":"YulFunctionCall","src":"15992:50:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15982:6:14"}]},{"nodeType":"YulAssignment","src":"16051:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16084:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16095:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16080:3:14"},"nodeType":"YulFunctionCall","src":"16080:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"16061:18:14"},"nodeType":"YulFunctionCall","src":"16061:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16051:6:14"}]},{"nodeType":"YulAssignment","src":"16108:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16141:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16152:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16137:3:14"},"nodeType":"YulFunctionCall","src":"16137:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"16118:18:14"},"nodeType":"YulFunctionCall","src":"16118:38:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16108:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15756:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15767:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15779:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15787:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15795:6:14","type":""}],"src":"15692:470:14"},{"body":{"nodeType":"YulBlock","src":"16390:368:14","statements":[{"nodeType":"YulAssignment","src":"16400:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16412:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16423:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16408:3:14"},"nodeType":"YulFunctionCall","src":"16408:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16400:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16443:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16468:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16461:6:14"},"nodeType":"YulFunctionCall","src":"16461:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16454:6:14"},"nodeType":"YulFunctionCall","src":"16454:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16436:6:14"},"nodeType":"YulFunctionCall","src":"16436:41:14"},"nodeType":"YulExpressionStatement","src":"16436:41:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16497:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16508:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16493:3:14"},"nodeType":"YulFunctionCall","src":"16493:18:14"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16527:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16520:6:14"},"nodeType":"YulFunctionCall","src":"16520:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16513:6:14"},"nodeType":"YulFunctionCall","src":"16513:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16486:6:14"},"nodeType":"YulFunctionCall","src":"16486:50:14"},"nodeType":"YulExpressionStatement","src":"16486:50:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16556:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16567:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16552:3:14"},"nodeType":"YulFunctionCall","src":"16552:18:14"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16586:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16579:6:14"},"nodeType":"YulFunctionCall","src":"16579:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16572:6:14"},"nodeType":"YulFunctionCall","src":"16572:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16545:6:14"},"nodeType":"YulFunctionCall","src":"16545:50:14"},"nodeType":"YulExpressionStatement","src":"16545:50:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16615:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16626:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16611:3:14"},"nodeType":"YulFunctionCall","src":"16611:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"16631:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16604:6:14"},"nodeType":"YulFunctionCall","src":"16604:34:14"},"nodeType":"YulExpressionStatement","src":"16604:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16658:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16669:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16654:3:14"},"nodeType":"YulFunctionCall","src":"16654:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"16675:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16647:6:14"},"nodeType":"YulFunctionCall","src":"16647:35:14"},"nodeType":"YulExpressionStatement","src":"16647:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16702:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16713:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16698:3:14"},"nodeType":"YulFunctionCall","src":"16698:19:14"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"16723:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16739:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16744:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16735:3:14"},"nodeType":"YulFunctionCall","src":"16735:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"16748:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16731:3:14"},"nodeType":"YulFunctionCall","src":"16731:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16719:3:14"},"nodeType":"YulFunctionCall","src":"16719:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16691:6:14"},"nodeType":"YulFunctionCall","src":"16691:61:14"},"nodeType":"YulExpressionStatement","src":"16691:61:14"}]},"name":"abi_encode_tuple_t_bool_t_bool_t_bool_t_uint256_t_uint256_t_address__to_t_bool_t_bool_t_bool_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16319:9:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16330:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16338:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16346:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16354:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16362:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16370:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16381:4:14","type":""}],"src":"16167:591:14"},{"body":{"nodeType":"YulBlock","src":"16902:150:14","statements":[{"nodeType":"YulVariableDeclaration","src":"16912:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16932:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16926:5:14"},"nodeType":"YulFunctionCall","src":"16926:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16916:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16987:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16995:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16983:3:14"},"nodeType":"YulFunctionCall","src":"16983:17:14"},{"name":"pos","nodeType":"YulIdentifier","src":"17002:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17007:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16948:34:14"},"nodeType":"YulFunctionCall","src":"16948:66:14"},"nodeType":"YulExpressionStatement","src":"16948:66:14"},{"nodeType":"YulAssignment","src":"17023:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17034:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17039:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17030:3:14"},"nodeType":"YulFunctionCall","src":"17030:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17023:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16878:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16883:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16894:3:14","type":""}],"src":"16763:289:14"},{"body":{"nodeType":"YulBlock","src":"17231:170:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17248:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17259:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17241:6:14"},"nodeType":"YulFunctionCall","src":"17241:21:14"},"nodeType":"YulExpressionStatement","src":"17241:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17282:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17293:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17278:3:14"},"nodeType":"YulFunctionCall","src":"17278:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"17298:2:14","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17271:6:14"},"nodeType":"YulFunctionCall","src":"17271:30:14"},"nodeType":"YulExpressionStatement","src":"17271:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17321:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17332:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17317:3:14"},"nodeType":"YulFunctionCall","src":"17317:18:14"},{"hexValue":"426174636820646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"17337:22:14","type":"","value":"Batch does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17310:6:14"},"nodeType":"YulFunctionCall","src":"17310:50:14"},"nodeType":"YulExpressionStatement","src":"17310:50:14"},{"nodeType":"YulAssignment","src":"17369:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17381:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17392:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17377:3:14"},"nodeType":"YulFunctionCall","src":"17377:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17369:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17208:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17222:4:14","type":""}],"src":"17057:344:14"},{"body":{"nodeType":"YulBlock","src":"17580:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17597:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17608:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17590:6:14"},"nodeType":"YulFunctionCall","src":"17590:21:14"},"nodeType":"YulExpressionStatement","src":"17590:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17631:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17642:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17627:3:14"},"nodeType":"YulFunctionCall","src":"17627:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"17647:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17620:6:14"},"nodeType":"YulFunctionCall","src":"17620:30:14"},"nodeType":"YulExpressionStatement","src":"17620:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17670:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17681:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17666:3:14"},"nodeType":"YulFunctionCall","src":"17666:18:14"},{"hexValue":"537570706c7920636861696e20766572696669636174696f6e20696e636f6d70","kind":"string","nodeType":"YulLiteral","src":"17686:34:14","type":"","value":"Supply chain verification incomp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17659:6:14"},"nodeType":"YulFunctionCall","src":"17659:62:14"},"nodeType":"YulExpressionStatement","src":"17659:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17741:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17752:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17737:3:14"},"nodeType":"YulFunctionCall","src":"17737:18:14"},{"hexValue":"6c657465","kind":"string","nodeType":"YulLiteral","src":"17757:6:14","type":"","value":"lete"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17730:6:14"},"nodeType":"YulFunctionCall","src":"17730:34:14"},"nodeType":"YulExpressionStatement","src":"17730:34:14"},{"nodeType":"YulAssignment","src":"17773:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17785:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17796:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17781:3:14"},"nodeType":"YulFunctionCall","src":"17781:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17773:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_48ce041a86fbaeed13960e32e12cf050e0b1d32b3b104d2e8f4d2929b0d35057__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17557:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17571:4:14","type":""}],"src":"17406:400:14"},{"body":{"nodeType":"YulBlock","src":"17985:172:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18002:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18013:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17995:6:14"},"nodeType":"YulFunctionCall","src":"17995:21:14"},"nodeType":"YulExpressionStatement","src":"17995:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18036:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18047:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18032:3:14"},"nodeType":"YulFunctionCall","src":"18032:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"18052:2:14","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18025:6:14"},"nodeType":"YulFunctionCall","src":"18025:30:14"},"nodeType":"YulExpressionStatement","src":"18025:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18075:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18086:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18071:3:14"},"nodeType":"YulFunctionCall","src":"18071:18:14"},{"hexValue":"52657761726420616c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"18091:24:14","type":"","value":"Reward already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18064:6:14"},"nodeType":"YulFunctionCall","src":"18064:52:14"},"nodeType":"YulExpressionStatement","src":"18064:52:14"},{"nodeType":"YulAssignment","src":"18125:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18148:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18133:3:14"},"nodeType":"YulFunctionCall","src":"18133:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18125:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17962:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17976:4:14","type":""}],"src":"17811:346:14"},{"body":{"nodeType":"YulBlock","src":"18336:166:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18353:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18364:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18346:6:14"},"nodeType":"YulFunctionCall","src":"18346:21:14"},"nodeType":"YulExpressionStatement","src":"18346:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18387:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18398:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18383:3:14"},"nodeType":"YulFunctionCall","src":"18383:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"18403:2:14","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18376:6:14"},"nodeType":"YulFunctionCall","src":"18376:30:14"},"nodeType":"YulExpressionStatement","src":"18376:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18426:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18437:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18422:3:14"},"nodeType":"YulFunctionCall","src":"18422:18:14"},{"hexValue":"4d65646963696e652065787069726564","kind":"string","nodeType":"YulLiteral","src":"18442:18:14","type":"","value":"Medicine expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18415:6:14"},"nodeType":"YulFunctionCall","src":"18415:46:14"},"nodeType":"YulExpressionStatement","src":"18415:46:14"},{"nodeType":"YulAssignment","src":"18470:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18482:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18493:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18478:3:14"},"nodeType":"YulFunctionCall","src":"18478:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18470:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6b40f6da1100400e5dc8eb15d22b38c024a6aa550a776a85baae739343ceb28__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18313:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18327:4:14","type":""}],"src":"18162:340:14"},{"body":{"nodeType":"YulBlock","src":"18636:145:14","statements":[{"nodeType":"YulAssignment","src":"18646:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18658:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18669:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18654:3:14"},"nodeType":"YulFunctionCall","src":"18654:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18646:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18688:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18703:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18719:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18724:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18715:3:14"},"nodeType":"YulFunctionCall","src":"18715:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"18728:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18711:3:14"},"nodeType":"YulFunctionCall","src":"18711:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18699:3:14"},"nodeType":"YulFunctionCall","src":"18699:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18681:6:14"},"nodeType":"YulFunctionCall","src":"18681:51:14"},"nodeType":"YulExpressionStatement","src":"18681:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18752:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18763:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18748:3:14"},"nodeType":"YulFunctionCall","src":"18748:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"18768:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18741:6:14"},"nodeType":"YulFunctionCall","src":"18741:34:14"},"nodeType":"YulExpressionStatement","src":"18741:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18597:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18608:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18616:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18627:4:14","type":""}],"src":"18507:274:14"},{"body":{"nodeType":"YulBlock","src":"18915:119:14","statements":[{"nodeType":"YulAssignment","src":"18925:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18937:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18948:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18933:3:14"},"nodeType":"YulFunctionCall","src":"18933:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18925:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18967:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"18978:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18960:6:14"},"nodeType":"YulFunctionCall","src":"18960:25:14"},"nodeType":"YulExpressionStatement","src":"18960:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19005:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19016:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19001:3:14"},"nodeType":"YulFunctionCall","src":"19001:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"19021:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18994:6:14"},"nodeType":"YulFunctionCall","src":"18994:34:14"},"nodeType":"YulExpressionStatement","src":"18994:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18876:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18887:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18895:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18906:4:14","type":""}],"src":"18786:248:14"},{"body":{"nodeType":"YulBlock","src":"19213:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19230:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19241:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19223:6:14"},"nodeType":"YulFunctionCall","src":"19223:21:14"},"nodeType":"YulExpressionStatement","src":"19223:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19264:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19275:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19260:3:14"},"nodeType":"YulFunctionCall","src":"19260:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"19280:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19253:6:14"},"nodeType":"YulFunctionCall","src":"19253:30:14"},"nodeType":"YulExpressionStatement","src":"19253:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19303:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19314:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19299:3:14"},"nodeType":"YulFunctionCall","src":"19299:18:14"},{"hexValue":"426174636820616c72656164792064656c69766572656420746f20637573746f","kind":"string","nodeType":"YulLiteral","src":"19319:34:14","type":"","value":"Batch already delivered to custo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19292:6:14"},"nodeType":"YulFunctionCall","src":"19292:62:14"},"nodeType":"YulExpressionStatement","src":"19292:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19374:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19385:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19370:3:14"},"nodeType":"YulFunctionCall","src":"19370:18:14"},{"hexValue":"6d6572","kind":"string","nodeType":"YulLiteral","src":"19390:5:14","type":"","value":"mer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19363:6:14"},"nodeType":"YulFunctionCall","src":"19363:33:14"},"nodeType":"YulExpressionStatement","src":"19363:33:14"},{"nodeType":"YulAssignment","src":"19405:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19417:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19428:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19413:3:14"},"nodeType":"YulFunctionCall","src":"19413:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19405:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d537f8160039b1fcf1dc021a7b8878d2aac81c14d040c1e91f6a995f0a8256ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19190:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19204:4:14","type":""}],"src":"19039:399:14"},{"body":{"nodeType":"YulBlock","src":"19617:176:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19645:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19627:6:14"},"nodeType":"YulFunctionCall","src":"19627:21:14"},"nodeType":"YulExpressionStatement","src":"19627:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19668:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19679:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19664:3:14"},"nodeType":"YulFunctionCall","src":"19664:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"19684:2:14","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19657:6:14"},"nodeType":"YulFunctionCall","src":"19657:30:14"},"nodeType":"YulExpressionStatement","src":"19657:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19707:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19718:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:14"},"nodeType":"YulFunctionCall","src":"19703:18:14"},{"hexValue":"4e6f7420617574686f72697a6564207061727469636970616e74","kind":"string","nodeType":"YulLiteral","src":"19723:28:14","type":"","value":"Not authorized participant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19696:6:14"},"nodeType":"YulFunctionCall","src":"19696:56:14"},"nodeType":"YulExpressionStatement","src":"19696:56:14"},{"nodeType":"YulAssignment","src":"19761:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19773:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19784:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19769:3:14"},"nodeType":"YulFunctionCall","src":"19769:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19761:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8792260baa46187182c86e5f500ce6d1d628011ee1c422112c15db5e56e632bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19594:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19608:4:14","type":""}],"src":"19443:350:14"},{"body":{"nodeType":"YulBlock","src":"19993:302:14","statements":[{"nodeType":"YulVariableDeclaration","src":"20003:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20023:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20017:5:14"},"nodeType":"YulFunctionCall","src":"20017:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20007:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20078:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20086:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20074:3:14"},"nodeType":"YulFunctionCall","src":"20074:17:14"},{"name":"pos","nodeType":"YulIdentifier","src":"20093:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"20098:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20039:34:14"},"nodeType":"YulFunctionCall","src":"20039:66:14"},"nodeType":"YulExpressionStatement","src":"20039:66:14"},{"nodeType":"YulVariableDeclaration","src":"20114:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20131:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"20136:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20127:3:14"},"nodeType":"YulFunctionCall","src":"20127:16:14"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"20118:5:14","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20159:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20174:2:14","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"20178:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20170:3:14"},"nodeType":"YulFunctionCall","src":"20170:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20191:26:14","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20187:3:14"},"nodeType":"YulFunctionCall","src":"20187:31:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20166:3:14"},"nodeType":"YulFunctionCall","src":"20166:53:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20152:6:14"},"nodeType":"YulFunctionCall","src":"20152:68:14"},"nodeType":"YulExpressionStatement","src":"20152:68:14"},{"expression":{"arguments":[{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20240:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"20247:2:14","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20236:3:14"},"nodeType":"YulFunctionCall","src":"20236:14:14"},{"name":"value2","nodeType":"YulIdentifier","src":"20252:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20229:6:14"},"nodeType":"YulFunctionCall","src":"20229:30:14"},"nodeType":"YulExpressionStatement","src":"20229:30:14"},{"nodeType":"YulAssignment","src":"20268:21:14","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"20279:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"20286:2:14","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20275:3:14"},"nodeType":"YulFunctionCall","src":"20275:14:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20268:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19953:3:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19958:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19966:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19974:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19985:3:14","type":""}],"src":"19798:497:14"},{"body":{"nodeType":"YulBlock","src":"20474:167:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20491:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20502:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20484:6:14"},"nodeType":"YulFunctionCall","src":"20484:21:14"},"nodeType":"YulExpressionStatement","src":"20484:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20525:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20536:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20521:3:14"},"nodeType":"YulFunctionCall","src":"20521:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"20541:2:14","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20514:6:14"},"nodeType":"YulFunctionCall","src":"20514:30:14"},"nodeType":"YulExpressionStatement","src":"20514:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20564:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20575:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20560:3:14"},"nodeType":"YulFunctionCall","src":"20560:18:14"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"20580:19:14","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20553:6:14"},"nodeType":"YulFunctionCall","src":"20553:47:14"},"nodeType":"YulExpressionStatement","src":"20553:47:14"},{"nodeType":"YulAssignment","src":"20609:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20621:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20632:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20617:3:14"},"nodeType":"YulFunctionCall","src":"20617:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20609:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20451:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20465:4:14","type":""}],"src":"20300:341:14"},{"body":{"nodeType":"YulBlock","src":"20678:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20695:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20702:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20707:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20698:3:14"},"nodeType":"YulFunctionCall","src":"20698:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20688:6:14"},"nodeType":"YulFunctionCall","src":"20688:31:14"},"nodeType":"YulExpressionStatement","src":"20688:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20735:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20738:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20728:6:14"},"nodeType":"YulFunctionCall","src":"20728:15:14"},"nodeType":"YulExpressionStatement","src":"20728:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20759:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20762:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20752:6:14"},"nodeType":"YulFunctionCall","src":"20752:15:14"},"nodeType":"YulExpressionStatement","src":"20752:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20646:127:14"},{"body":{"nodeType":"YulBlock","src":"20952:166:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20969:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20980:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20962:6:14"},"nodeType":"YulFunctionCall","src":"20962:21:14"},"nodeType":"YulExpressionStatement","src":"20962:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21003:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21014:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20999:3:14"},"nodeType":"YulFunctionCall","src":"20999:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"21019:2:14","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20992:6:14"},"nodeType":"YulFunctionCall","src":"20992:30:14"},"nodeType":"YulExpressionStatement","src":"20992:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21042:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21053:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21038:3:14"},"nodeType":"YulFunctionCall","src":"21038:18:14"},{"hexValue":"416c7265616479207665726966696564","kind":"string","nodeType":"YulLiteral","src":"21058:18:14","type":"","value":"Already verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21031:6:14"},"nodeType":"YulFunctionCall","src":"21031:46:14"},"nodeType":"YulExpressionStatement","src":"21031:46:14"},{"nodeType":"YulAssignment","src":"21086:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21098:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21109:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21094:3:14"},"nodeType":"YulFunctionCall","src":"21094:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21086:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20929:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20943:4:14","type":""}],"src":"20778:340:14"},{"body":{"nodeType":"YulBlock","src":"21178:325:14","statements":[{"nodeType":"YulAssignment","src":"21188:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21202:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"21205:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21198:3:14"},"nodeType":"YulFunctionCall","src":"21198:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21188:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"21219:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21249:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"21255:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21245:3:14"},"nodeType":"YulFunctionCall","src":"21245:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"21223:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"21296:31:14","statements":[{"nodeType":"YulAssignment","src":"21298:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21312:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21320:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21308:3:14"},"nodeType":"YulFunctionCall","src":"21308:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21298:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21276:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21269:6:14"},"nodeType":"YulFunctionCall","src":"21269:26:14"},"nodeType":"YulIf","src":"21266:61:14"},{"body":{"nodeType":"YulBlock","src":"21386:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21407:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21414:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21419:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21410:3:14"},"nodeType":"YulFunctionCall","src":"21410:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21400:6:14"},"nodeType":"YulFunctionCall","src":"21400:31:14"},"nodeType":"YulExpressionStatement","src":"21400:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21451:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21454:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21444:6:14"},"nodeType":"YulFunctionCall","src":"21444:15:14"},"nodeType":"YulExpressionStatement","src":"21444:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21479:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21482:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21472:6:14"},"nodeType":"YulFunctionCall","src":"21472:15:14"},"nodeType":"YulExpressionStatement","src":"21472:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21342:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21365:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21373:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21362:2:14"},"nodeType":"YulFunctionCall","src":"21362:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21339:2:14"},"nodeType":"YulFunctionCall","src":"21339:38:14"},"nodeType":"YulIf","src":"21336:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21158:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21167:6:14","type":""}],"src":"21123:380:14"},{"body":{"nodeType":"YulBlock","src":"21564:65:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21581:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21584:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21574:6:14"},"nodeType":"YulFunctionCall","src":"21574:14:14"},"nodeType":"YulExpressionStatement","src":"21574:14:14"},{"nodeType":"YulAssignment","src":"21597:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21615:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21618:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21605:9:14"},"nodeType":"YulFunctionCall","src":"21605:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21597:4:14"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21547:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21555:4:14","type":""}],"src":"21508:121:14"},{"body":{"nodeType":"YulBlock","src":"21715:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"21748:425:14","statements":[{"nodeType":"YulVariableDeclaration","src":"21762:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"21772:1:14","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21766:2:14","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21793:2:14"},{"name":"array","nodeType":"YulIdentifier","src":"21797:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21786:6:14"},"nodeType":"YulFunctionCall","src":"21786:17:14"},"nodeType":"YulExpressionStatement","src":"21786:17:14"},{"nodeType":"YulVariableDeclaration","src":"21816:31:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21838:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"21842:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21828:9:14"},"nodeType":"YulFunctionCall","src":"21828:19:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"21820:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21860:57:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21883:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21893:1:14","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21900:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"21912:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21896:3:14"},"nodeType":"YulFunctionCall","src":"21896:19:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21889:3:14"},"nodeType":"YulFunctionCall","src":"21889:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21879:3:14"},"nodeType":"YulFunctionCall","src":"21879:38:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"21864:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"21954:23:14","statements":[{"nodeType":"YulAssignment","src":"21956:19:14","value":{"name":"data","nodeType":"YulIdentifier","src":"21971:4:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"21956:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21936:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"21948:4:14","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21933:2:14"},"nodeType":"YulFunctionCall","src":"21933:20:14"},"nodeType":"YulIf","src":"21930:47:14"},{"nodeType":"YulVariableDeclaration","src":"21990:41:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22004:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22014:1:14","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"22021:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22026:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22017:3:14"},"nodeType":"YulFunctionCall","src":"22017:12:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22010:3:14"},"nodeType":"YulFunctionCall","src":"22010:20:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22000:3:14"},"nodeType":"YulFunctionCall","src":"22000:31:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"21994:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22044:24:14","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"22057:11:14"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"22048:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"22142:21:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22151:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"22158:2:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22144:6:14"},"nodeType":"YulFunctionCall","src":"22144:17:14"},"nodeType":"YulExpressionStatement","src":"22144:17:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22092:5:14"},{"name":"_2","nodeType":"YulIdentifier","src":"22099:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22089:2:14"},"nodeType":"YulFunctionCall","src":"22089:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22103:26:14","statements":[{"nodeType":"YulAssignment","src":"22105:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22118:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"22125:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22114:3:14"},"nodeType":"YulFunctionCall","src":"22114:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"22105:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"22085:3:14","statements":[]},"src":"22081:82:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21731:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21736:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21728:2:14"},"nodeType":"YulFunctionCall","src":"21728:11:14"},"nodeType":"YulIf","src":"21725:448:14"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"21687:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"21694:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"21699:10:14","type":""}],"src":"21634:545:14"},{"body":{"nodeType":"YulBlock","src":"22269:81:14","statements":[{"nodeType":"YulAssignment","src":"22279:65:14","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22294:4:14"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22312:1:14","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"22315:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22308:3:14"},"nodeType":"YulFunctionCall","src":"22308:11:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22325:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22321:3:14"},"nodeType":"YulFunctionCall","src":"22321:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22304:3:14"},"nodeType":"YulFunctionCall","src":"22304:24:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22300:3:14"},"nodeType":"YulFunctionCall","src":"22300:29:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22290:3:14"},"nodeType":"YulFunctionCall","src":"22290:40:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22336:1:14","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"22339:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22332:3:14"},"nodeType":"YulFunctionCall","src":"22332:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22287:2:14"},"nodeType":"YulFunctionCall","src":"22287:57:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"22279:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22246:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"22252:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"22260:4:14","type":""}],"src":"22184:166:14"},{"body":{"nodeType":"YulBlock","src":"22451:1256:14","statements":[{"nodeType":"YulVariableDeclaration","src":"22461:24:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22481:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22475:5:14"},"nodeType":"YulFunctionCall","src":"22475:10:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22465:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"22528:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22530:16:14"},"nodeType":"YulFunctionCall","src":"22530:18:14"},"nodeType":"YulExpressionStatement","src":"22530:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22500:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22508:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22497:2:14"},"nodeType":"YulFunctionCall","src":"22497:30:14"},"nodeType":"YulIf","src":"22494:56:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22603:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22641:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22635:5:14"},"nodeType":"YulFunctionCall","src":"22635:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22609:25:14"},"nodeType":"YulFunctionCall","src":"22609:38:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"22649:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"22559:43:14"},"nodeType":"YulFunctionCall","src":"22559:97:14"},"nodeType":"YulExpressionStatement","src":"22559:97:14"},{"nodeType":"YulVariableDeclaration","src":"22665:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"22682:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22669:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22692:23:14","value":{"kind":"number","nodeType":"YulLiteral","src":"22711:4:14","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"22696:11:14","type":""}]},{"nodeType":"YulAssignment","src":"22724:24:14","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22737:11:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22724:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22794:656:14","statements":[{"nodeType":"YulVariableDeclaration","src":"22808:35:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22827:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22839:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22835:3:14"},"nodeType":"YulFunctionCall","src":"22835:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22823:3:14"},"nodeType":"YulFunctionCall","src":"22823:20:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"22812:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22856:49:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22900:4:14"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"22870:29:14"},"nodeType":"YulFunctionCall","src":"22870:35:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22860:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22918:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"22927:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22922:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"23005:172:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23030:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23048:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23053:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23044:3:14"},"nodeType":"YulFunctionCall","src":"23044:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23038:5:14"},"nodeType":"YulFunctionCall","src":"23038:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23023:6:14"},"nodeType":"YulFunctionCall","src":"23023:42:14"},"nodeType":"YulExpressionStatement","src":"23023:42:14"},{"nodeType":"YulAssignment","src":"23082:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23096:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23104:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23092:3:14"},"nodeType":"YulFunctionCall","src":"23092:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23082:6:14"}]},{"nodeType":"YulAssignment","src":"23123:40:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23140:9:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23151:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23136:3:14"},"nodeType":"YulFunctionCall","src":"23136:27:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23123:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22952:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22955:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22949:2:14"},"nodeType":"YulFunctionCall","src":"22949:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22964:28:14","statements":[{"nodeType":"YulAssignment","src":"22966:24:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22975:1:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22978:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22971:3:14"},"nodeType":"YulFunctionCall","src":"22971:19:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22966:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"22945:3:14","statements":[]},"src":"22941:236:14"},{"body":{"nodeType":"YulBlock","src":"23225:166:14","statements":[{"nodeType":"YulVariableDeclaration","src":"23243:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23270:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23275:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23266:3:14"},"nodeType":"YulFunctionCall","src":"23266:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23260:5:14"},"nodeType":"YulFunctionCall","src":"23260:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23247:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23310:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23322:9:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23349:1:14","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"23352:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23345:3:14"},"nodeType":"YulFunctionCall","src":"23345:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"23361:3:14","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23341:3:14"},"nodeType":"YulFunctionCall","src":"23341:24:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23371:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23367:3:14"},"nodeType":"YulFunctionCall","src":"23367:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23337:3:14"},"nodeType":"YulFunctionCall","src":"23337:37:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23333:3:14"},"nodeType":"YulFunctionCall","src":"23333:42:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23318:3:14"},"nodeType":"YulFunctionCall","src":"23318:58:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23303:6:14"},"nodeType":"YulFunctionCall","src":"23303:74:14"},"nodeType":"YulExpressionStatement","src":"23303:74:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23196:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"23205:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23193:2:14"},"nodeType":"YulFunctionCall","src":"23193:19:14"},"nodeType":"YulIf","src":"23190:201:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23411:4:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23425:1:14","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"23428:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23421:3:14"},"nodeType":"YulFunctionCall","src":"23421:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"23437:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23417:3:14"},"nodeType":"YulFunctionCall","src":"23417:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23404:6:14"},"nodeType":"YulFunctionCall","src":"23404:36:14"},"nodeType":"YulExpressionStatement","src":"23404:36:14"}]},"nodeType":"YulCase","src":"22787:663:14","value":{"kind":"number","nodeType":"YulLiteral","src":"22792:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23467:234:14","statements":[{"nodeType":"YulVariableDeclaration","src":"23481:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"23494:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23485:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"23530:67:14","statements":[{"nodeType":"YulAssignment","src":"23548:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23567:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23572:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23563:3:14"},"nodeType":"YulFunctionCall","src":"23563:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23557:5:14"},"nodeType":"YulFunctionCall","src":"23557:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23548:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23511:6:14"},"nodeType":"YulIf","src":"23508:89:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23617:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23676:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"23683:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23623:52:14"},"nodeType":"YulFunctionCall","src":"23623:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23610:6:14"},"nodeType":"YulFunctionCall","src":"23610:81:14"},"nodeType":"YulExpressionStatement","src":"23610:81:14"}]},"nodeType":"YulCase","src":"23459:242:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22767:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22775:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22764:2:14"},"nodeType":"YulFunctionCall","src":"22764:14:14"},"nodeType":"YulSwitch","src":"22757:944:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22436:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"22442:3:14","type":""}],"src":"22355:1352:14"},{"body":{"nodeType":"YulBlock","src":"23759:185:14","statements":[{"body":{"nodeType":"YulBlock","src":"23798:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23819:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23826:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23831:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23822:3:14"},"nodeType":"YulFunctionCall","src":"23822:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23812:6:14"},"nodeType":"YulFunctionCall","src":"23812:31:14"},"nodeType":"YulExpressionStatement","src":"23812:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23863:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23866:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23856:6:14"},"nodeType":"YulFunctionCall","src":"23856:15:14"},"nodeType":"YulExpressionStatement","src":"23856:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23891:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23894:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23884:6:14"},"nodeType":"YulFunctionCall","src":"23884:15:14"},"nodeType":"YulExpressionStatement","src":"23884:15:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23775:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23786:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23782:3:14"},"nodeType":"YulFunctionCall","src":"23782:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23772:2:14"},"nodeType":"YulFunctionCall","src":"23772:17:14"},"nodeType":"YulIf","src":"23769:140:14"},{"nodeType":"YulAssignment","src":"23918:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23929:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"23936:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23925:3:14"},"nodeType":"YulFunctionCall","src":"23925:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23918:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23741:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23751:3:14","type":""}],"src":"23712:232:14"},{"body":{"nodeType":"YulBlock","src":"24123:169:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24140:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24151:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24133:6:14"},"nodeType":"YulFunctionCall","src":"24133:21:14"},"nodeType":"YulExpressionStatement","src":"24133:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24174:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24185:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24170:3:14"},"nodeType":"YulFunctionCall","src":"24170:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"24190:2:14","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24163:6:14"},"nodeType":"YulFunctionCall","src":"24163:30:14"},"nodeType":"YulExpressionStatement","src":"24163:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24213:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24224:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24209:3:14"},"nodeType":"YulFunctionCall","src":"24209:18:14"},{"hexValue":"566572696669636174696f6e206661696c6564","kind":"string","nodeType":"YulLiteral","src":"24229:21:14","type":"","value":"Verification failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24202:6:14"},"nodeType":"YulFunctionCall","src":"24202:49:14"},"nodeType":"YulExpressionStatement","src":"24202:49:14"},{"nodeType":"YulAssignment","src":"24260:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24272:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24283:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24268:3:14"},"nodeType":"YulFunctionCall","src":"24268:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24260:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24100:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24114:4:14","type":""}],"src":"23949:343:14"},{"body":{"nodeType":"YulBlock","src":"24472:187:14","statements":[{"nodeType":"YulAssignment","src":"24482:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24494:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24505:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24490:3:14"},"nodeType":"YulFunctionCall","src":"24490:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24482:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24549:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"24557:9:14"}],"functionName":{"name":"abi_encode_enum_ParticipantRole","nodeType":"YulIdentifier","src":"24517:31:14"},"nodeType":"YulFunctionCall","src":"24517:50:14"},"nodeType":"YulExpressionStatement","src":"24517:50:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24587:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24598:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24583:3:14"},"nodeType":"YulFunctionCall","src":"24583:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"24603:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24576:6:14"},"nodeType":"YulFunctionCall","src":"24576:34:14"},"nodeType":"YulExpressionStatement","src":"24576:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24630:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24641:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24626:3:14"},"nodeType":"YulFunctionCall","src":"24626:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"24646:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24619:6:14"},"nodeType":"YulFunctionCall","src":"24619:34:14"},"nodeType":"YulExpressionStatement","src":"24619:34:14"}]},"name":"abi_encode_tuple_t_enum$_ParticipantRole_$5974_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24425:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24436:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24444:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24452:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24463:4:14","type":""}],"src":"24297:362:14"},{"body":{"nodeType":"YulBlock","src":"24838:170:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24855:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24866:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24848:6:14"},"nodeType":"YulFunctionCall","src":"24848:21:14"},"nodeType":"YulExpressionStatement","src":"24848:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24889:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24900:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24885:3:14"},"nodeType":"YulFunctionCall","src":"24885:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"24905:2:14","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24878:6:14"},"nodeType":"YulFunctionCall","src":"24878:30:14"},"nodeType":"YulExpressionStatement","src":"24878:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24928:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24939:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24924:3:14"},"nodeType":"YulFunctionCall","src":"24924:18:14"},{"hexValue":"426174636820616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"24944:22:14","type":"","value":"Batch already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24917:6:14"},"nodeType":"YulFunctionCall","src":"24917:50:14"},"nodeType":"YulExpressionStatement","src":"24917:50:14"},{"nodeType":"YulAssignment","src":"24976:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24988:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24999:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24984:3:14"},"nodeType":"YulFunctionCall","src":"24984:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24976:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24815:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24829:4:14","type":""}],"src":"24664:344:14"},{"body":{"nodeType":"YulBlock","src":"25187:167:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25204:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25215:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25197:6:14"},"nodeType":"YulFunctionCall","src":"25197:21:14"},"nodeType":"YulExpressionStatement","src":"25197:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25238:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25249:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25234:3:14"},"nodeType":"YulFunctionCall","src":"25234:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"25254:2:14","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25227:6:14"},"nodeType":"YulFunctionCall","src":"25227:30:14"},"nodeType":"YulExpressionStatement","src":"25227:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25277:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25288:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25273:3:14"},"nodeType":"YulFunctionCall","src":"25273:18:14"},{"hexValue":"4d69736d61746368656420617272617973","kind":"string","nodeType":"YulLiteral","src":"25293:19:14","type":"","value":"Mismatched arrays"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25266:6:14"},"nodeType":"YulFunctionCall","src":"25266:47:14"},"nodeType":"YulExpressionStatement","src":"25266:47:14"},{"nodeType":"YulAssignment","src":"25322:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25334:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25345:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25330:3:14"},"nodeType":"YulFunctionCall","src":"25330:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25322:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25164:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25178:4:14","type":""}],"src":"25013:341:14"},{"body":{"nodeType":"YulBlock","src":"25533:170:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25550:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25561:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25543:6:14"},"nodeType":"YulFunctionCall","src":"25543:21:14"},"nodeType":"YulExpressionStatement","src":"25543:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25584:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25595:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25580:3:14"},"nodeType":"YulFunctionCall","src":"25580:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"25600:2:14","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25573:6:14"},"nodeType":"YulFunctionCall","src":"25573:30:14"},"nodeType":"YulExpressionStatement","src":"25573:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25623:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25634:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25619:3:14"},"nodeType":"YulFunctionCall","src":"25619:18:14"},{"hexValue":"4d69736d617463686564206c6f636174696f6e73","kind":"string","nodeType":"YulLiteral","src":"25639:22:14","type":"","value":"Mismatched locations"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25612:6:14"},"nodeType":"YulFunctionCall","src":"25612:50:14"},"nodeType":"YulExpressionStatement","src":"25612:50:14"},{"nodeType":"YulAssignment","src":"25671:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25683:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25694:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25679:3:14"},"nodeType":"YulFunctionCall","src":"25679:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25671:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_03dbd4c4a2f4f5817b24578ebcc441c1d9ef61762853f787de380bf47b0f56ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25510:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25524:4:14","type":""}],"src":"25359:344:14"},{"body":{"nodeType":"YulBlock","src":"25882:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25899:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25910:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25892:6:14"},"nodeType":"YulFunctionCall","src":"25892:21:14"},"nodeType":"YulExpressionStatement","src":"25892:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25933:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25944:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25929:3:14"},"nodeType":"YulFunctionCall","src":"25929:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"25949:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25922:6:14"},"nodeType":"YulFunctionCall","src":"25922:30:14"},"nodeType":"YulExpressionStatement","src":"25922:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25972:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25983:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25968:3:14"},"nodeType":"YulFunctionCall","src":"25968:18:14"},{"hexValue":"546f6f206d616e79207061727469636970616e7473","kind":"string","nodeType":"YulLiteral","src":"25988:23:14","type":"","value":"Too many participants"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25961:6:14"},"nodeType":"YulFunctionCall","src":"25961:51:14"},"nodeType":"YulExpressionStatement","src":"25961:51:14"},{"nodeType":"YulAssignment","src":"26021:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26033:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26044:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26029:3:14"},"nodeType":"YulFunctionCall","src":"26029:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26021:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_44f200bf17edbd5d629caccffb2004cc809d225027162b5cf716be52302a19a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25859:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25873:4:14","type":""}],"src":"25708:345:14"},{"body":{"nodeType":"YulBlock","src":"26232:223:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26249:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26260:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26242:6:14"},"nodeType":"YulFunctionCall","src":"26242:21:14"},"nodeType":"YulExpressionStatement","src":"26242:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26283:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26294:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26279:3:14"},"nodeType":"YulFunctionCall","src":"26279:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"26299:2:14","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26272:6:14"},"nodeType":"YulFunctionCall","src":"26272:30:14"},"nodeType":"YulExpressionStatement","src":"26272:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26322:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26333:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26318:3:14"},"nodeType":"YulFunctionCall","src":"26318:18:14"},{"hexValue":"4174206c65617374206f6e65207061727469636970616e742072657175697265","kind":"string","nodeType":"YulLiteral","src":"26338:34:14","type":"","value":"At least one participant require"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26311:6:14"},"nodeType":"YulFunctionCall","src":"26311:62:14"},"nodeType":"YulExpressionStatement","src":"26311:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26393:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26404:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26389:3:14"},"nodeType":"YulFunctionCall","src":"26389:18:14"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"26409:3:14","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26382:6:14"},"nodeType":"YulFunctionCall","src":"26382:31:14"},"nodeType":"YulExpressionStatement","src":"26382:31:14"},{"nodeType":"YulAssignment","src":"26422:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26434:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26445:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26430:3:14"},"nodeType":"YulFunctionCall","src":"26430:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26422:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ccf18108b555d0ca329a7f70497f7b350006412d6bff44726572cbb47ad64673__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26209:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26223:4:14","type":""}],"src":"26058:397:14"},{"body":{"nodeType":"YulBlock","src":"26634:179:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26651:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26662:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26644:6:14"},"nodeType":"YulFunctionCall","src":"26644:21:14"},"nodeType":"YulExpressionStatement","src":"26644:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26696:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26681:3:14"},"nodeType":"YulFunctionCall","src":"26681:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"26701:2:14","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26674:6:14"},"nodeType":"YulFunctionCall","src":"26674:30:14"},"nodeType":"YulExpressionStatement","src":"26674:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26724:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26735:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26720:3:14"},"nodeType":"YulFunctionCall","src":"26720:18:14"},{"hexValue":"4578706972792064617465206d75737420626520696e20667574757265","kind":"string","nodeType":"YulLiteral","src":"26740:31:14","type":"","value":"Expiry date must be in future"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26713:6:14"},"nodeType":"YulFunctionCall","src":"26713:59:14"},"nodeType":"YulExpressionStatement","src":"26713:59:14"},{"nodeType":"YulAssignment","src":"26781:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26793:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26804:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26789:3:14"},"nodeType":"YulFunctionCall","src":"26789:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26781:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a536cadcf7bd7b5649e578eabe8b70cc270b36bbbf75f188de5a0a505f87821__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26611:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26625:4:14","type":""}],"src":"26460:353:14"},{"body":{"nodeType":"YulBlock","src":"26992:177:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27009:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27020:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27002:6:14"},"nodeType":"YulFunctionCall","src":"27002:21:14"},"nodeType":"YulExpressionStatement","src":"27002:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27043:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27054:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27039:3:14"},"nodeType":"YulFunctionCall","src":"27039:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"27059:2:14","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27032:6:14"},"nodeType":"YulFunctionCall","src":"27032:30:14"},"nodeType":"YulExpressionStatement","src":"27032:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27082:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27093:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27078:3:14"},"nodeType":"YulFunctionCall","src":"27078:18:14"},{"hexValue":"496e76616c6964207061727469636970616e742061646472657373","kind":"string","nodeType":"YulLiteral","src":"27098:29:14","type":"","value":"Invalid participant address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27071:6:14"},"nodeType":"YulFunctionCall","src":"27071:57:14"},"nodeType":"YulExpressionStatement","src":"27071:57:14"},{"nodeType":"YulAssignment","src":"27137:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27149:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27160:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27145:3:14"},"nodeType":"YulFunctionCall","src":"27145:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27137:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_2225061bca1349a8a3197b2978d1d80f7b352a81d212157dbc629a5dd75e6aed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26969:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26983:4:14","type":""}],"src":"26818:351:14"},{"body":{"nodeType":"YulBlock","src":"27348:162:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27365:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27376:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27358:6:14"},"nodeType":"YulFunctionCall","src":"27358:21:14"},"nodeType":"YulExpressionStatement","src":"27358:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27399:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27410:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27395:3:14"},"nodeType":"YulFunctionCall","src":"27395:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"27415:2:14","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27388:6:14"},"nodeType":"YulFunctionCall","src":"27388:30:14"},"nodeType":"YulExpressionStatement","src":"27388:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27438:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27449:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27434:3:14"},"nodeType":"YulFunctionCall","src":"27434:18:14"},{"hexValue":"496e76616c696420726f6c65","kind":"string","nodeType":"YulLiteral","src":"27454:14:14","type":"","value":"Invalid role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27427:6:14"},"nodeType":"YulFunctionCall","src":"27427:42:14"},"nodeType":"YulExpressionStatement","src":"27427:42:14"},{"nodeType":"YulAssignment","src":"27478:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27490:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27501:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27486:3:14"},"nodeType":"YulFunctionCall","src":"27486:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27478:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27325:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27339:4:14","type":""}],"src":"27174:336:14"},{"body":{"nodeType":"YulBlock","src":"27689:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27706:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27717:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27699:6:14"},"nodeType":"YulFunctionCall","src":"27699:21:14"},"nodeType":"YulExpressionStatement","src":"27699:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27740:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27751:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27736:3:14"},"nodeType":"YulFunctionCall","src":"27736:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"27756:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27729:6:14"},"nodeType":"YulFunctionCall","src":"27729:30:14"},"nodeType":"YulExpressionStatement","src":"27729:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27779:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27790:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27775:3:14"},"nodeType":"YulFunctionCall","src":"27775:18:14"},{"hexValue":"4475706c6963617465207061727469636970616e74","kind":"string","nodeType":"YulLiteral","src":"27795:23:14","type":"","value":"Duplicate participant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27768:6:14"},"nodeType":"YulFunctionCall","src":"27768:51:14"},"nodeType":"YulExpressionStatement","src":"27768:51:14"},{"nodeType":"YulAssignment","src":"27828:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27840:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27851:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27836:3:14"},"nodeType":"YulFunctionCall","src":"27836:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27828:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3c1b25d3252708683c9e650e461dd436feb45936e806a6b4abb8704e3ce51c0b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27666:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27680:4:14","type":""}],"src":"27515:345:14"},{"body":{"nodeType":"YulBlock","src":"27984:101:14","statements":[{"nodeType":"YulAssignment","src":"27994:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28006:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28017:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28002:3:14"},"nodeType":"YulFunctionCall","src":"28002:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27994:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28061:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"28069:9:14"}],"functionName":{"name":"abi_encode_enum_ParticipantRole","nodeType":"YulIdentifier","src":"28029:31:14"},"nodeType":"YulFunctionCall","src":"28029:50:14"},"nodeType":"YulExpressionStatement","src":"28029:50:14"}]},"name":"abi_encode_tuple_t_enum$_ParticipantRole_$5974__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27953:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27964:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27975:4:14","type":""}],"src":"27865:220:14"},{"body":{"nodeType":"YulBlock","src":"28264:165:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28281:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28292:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28274:6:14"},"nodeType":"YulFunctionCall","src":"28274:21:14"},"nodeType":"YulExpressionStatement","src":"28274:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28315:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28326:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28311:3:14"},"nodeType":"YulFunctionCall","src":"28311:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"28331:2:14","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28304:6:14"},"nodeType":"YulFunctionCall","src":"28304:30:14"},"nodeType":"YulExpressionStatement","src":"28304:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28354:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28365:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28350:3:14"},"nodeType":"YulFunctionCall","src":"28350:18:14"},{"hexValue":"4e6f74206261746368206f776e6572","kind":"string","nodeType":"YulLiteral","src":"28370:17:14","type":"","value":"Not batch owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28343:6:14"},"nodeType":"YulFunctionCall","src":"28343:45:14"},"nodeType":"YulExpressionStatement","src":"28343:45:14"},{"nodeType":"YulAssignment","src":"28397:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28409:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28420:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28405:3:14"},"nodeType":"YulFunctionCall","src":"28405:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28397:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6b6647033f03da42f260fb0af824a51252976e16703a583d969c6e3b42e40b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28241:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28255:4:14","type":""}],"src":"28090:339:14"},{"body":{"nodeType":"YulBlock","src":"28608:173:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28625:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28636:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28618:6:14"},"nodeType":"YulFunctionCall","src":"28618:21:14"},"nodeType":"YulExpressionStatement","src":"28618:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28659:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28670:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28655:3:14"},"nodeType":"YulFunctionCall","src":"28655:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"28675:2:14","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28648:6:14"},"nodeType":"YulFunctionCall","src":"28648:30:14"},"nodeType":"YulExpressionStatement","src":"28648:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28698:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28709:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28694:3:14"},"nodeType":"YulFunctionCall","src":"28694:18:14"},{"hexValue":"426174636820616c72656164792064656c697665726564","kind":"string","nodeType":"YulLiteral","src":"28714:25:14","type":"","value":"Batch already delivered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28687:6:14"},"nodeType":"YulFunctionCall","src":"28687:53:14"},"nodeType":"YulExpressionStatement","src":"28687:53:14"},{"nodeType":"YulAssignment","src":"28749:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28761:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28772:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28757:3:14"},"nodeType":"YulFunctionCall","src":"28757:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28749:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e7ee47d2b4d578ad760680b3433f2a95168c27e134ecdb5db2694dac0a8cd6f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28585:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28599:4:14","type":""}],"src":"28434:347:14"},{"body":{"nodeType":"YulBlock","src":"28915:145:14","statements":[{"nodeType":"YulAssignment","src":"28925:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28937:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28948:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28933:3:14"},"nodeType":"YulFunctionCall","src":"28933:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28925:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28967:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28982:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28998:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"29003:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28994:3:14"},"nodeType":"YulFunctionCall","src":"28994:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"29007:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28990:3:14"},"nodeType":"YulFunctionCall","src":"28990:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28978:3:14"},"nodeType":"YulFunctionCall","src":"28978:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28960:6:14"},"nodeType":"YulFunctionCall","src":"28960:51:14"},"nodeType":"YulExpressionStatement","src":"28960:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29031:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29042:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29027:3:14"},"nodeType":"YulFunctionCall","src":"29027:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"29047:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29020:6:14"},"nodeType":"YulFunctionCall","src":"29020:34:14"},"nodeType":"YulExpressionStatement","src":"29020:34:14"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28876:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28887:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28895:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28906:4:14","type":""}],"src":"28786:274:14"},{"body":{"nodeType":"YulBlock","src":"29246:217:14","statements":[{"nodeType":"YulAssignment","src":"29256:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29268:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29279:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29264:3:14"},"nodeType":"YulFunctionCall","src":"29264:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29256:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29299:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"29310:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29292:6:14"},"nodeType":"YulFunctionCall","src":"29292:25:14"},"nodeType":"YulExpressionStatement","src":"29292:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29337:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29348:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29333:3:14"},"nodeType":"YulFunctionCall","src":"29333:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29357:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29365:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29353:3:14"},"nodeType":"YulFunctionCall","src":"29353:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29326:6:14"},"nodeType":"YulFunctionCall","src":"29326:45:14"},"nodeType":"YulExpressionStatement","src":"29326:45:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29391:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29402:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29387:3:14"},"nodeType":"YulFunctionCall","src":"29387:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"29407:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29380:6:14"},"nodeType":"YulFunctionCall","src":"29380:34:14"},"nodeType":"YulExpressionStatement","src":"29380:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29434:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29445:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29430:3:14"},"nodeType":"YulFunctionCall","src":"29430:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"29450:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29423:6:14"},"nodeType":"YulFunctionCall","src":"29423:34:14"},"nodeType":"YulExpressionStatement","src":"29423:34:14"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29191:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29202:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29210:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29218:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29226:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29237:4:14","type":""}],"src":"29065:398:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_2)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value2 := abi_decode_available_length_string(add(_2, 32), calldataload(_2), dataEnd)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_bool_t_bool__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 416)\n        let tail_1 := abi_encode_string(value1, add(headStart, 416))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        tail := abi_encode_string(value3, tail_2)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        abi_encode_bool(value8, add(headStart, 256))\n        abi_encode_address(value9, add(headStart, 288))\n        mstore(add(headStart, 320), value10)\n        abi_encode_bool(value11, add(headStart, 352))\n        abi_encode_bool(value12, add(headStart, 384))\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_enum_ParticipantRole_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            if iszero(lt(value, 6))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_string_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value4 := abi_decode_array_address_dyn(add(headStart, offset_3), dataEnd)\n        let offset_4 := calldataload(add(headStart, 160))\n        if gt(offset_4, _1) { revert(0, 0) }\n        value5 := abi_decode_array_enum_ParticipantRole_dyn(add(headStart, offset_4), dataEnd)\n        let offset_5 := calldataload(add(headStart, 192))\n        if gt(offset_5, _1) { revert(0, 0) }\n        value6 := abi_decode_array_string_dyn(add(headStart, offset_5), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IMediToken_$5946__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_ParticipantRole(value, pos)\n    {\n        if iszero(lt(value, 6))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_enum$_ParticipantRole_$5974_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        let _1 := 32\n        mstore(add(headStart, _1), sub(tail_1, headStart))\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(tail_1, _1)\n        let srcPtr := add(value1, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_enum_ParticipantRole(mload(srcPtr), pos)\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value2)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value2, _1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, iszero(iszero(mload(srcPtr_1))))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        mstore(add(headStart, 96), sub(pos_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value3, pos_1)\n    }\n    function abi_encode_array_string_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        let updated_pos := add(pos, _1)\n        let pos_1 := updated_pos\n        pos := updated_pos\n        let tail := add(pos_1, shl(5, length))\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, pos_1))\n            tail := abi_encode_string(mload(srcPtr), tail)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_string_dyn(value2, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_array_string_dyn(value3, tail_3)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool_t_bool_t_bool_t_uint256_t_uint256_t_address__to_t_bool_t_bool_t_bool_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_3173184d5337be604c0f6380d1c88fa19ac317d44deda8a49893ef4093f37395__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Batch does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_48ce041a86fbaeed13960e32e12cf050e0b1d32b3b104d2e8f4d2929b0d35057__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Supply chain verification incomp\")\n        mstore(add(headStart, 96), \"lete\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Reward already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6b40f6da1100400e5dc8eb15d22b38c024a6aa550a776a85baae739343ceb28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Medicine expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_d537f8160039b1fcf1dc021a7b8878d2aac81c14d040c1e91f6a995f0a8256ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Batch already delivered to custo\")\n        mstore(add(headStart, 96), \"mer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8792260baa46187182c86e5f500ce6d1d628011ee1c422112c15db5e56e632bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not authorized participant\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(end_1, 20), value2)\n        end := add(end_1, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_620197639499e2d4278f371c8ec7052e8daf3f03300c799eca58b1cba1de89c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already verified\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Verification failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_enum$_ParticipantRole_$5974_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_enum_ParticipantRole(value0, headStart)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Batch already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Mismatched arrays\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_03dbd4c4a2f4f5817b24578ebcc441c1d9ef61762853f787de380bf47b0f56ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Mismatched locations\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_44f200bf17edbd5d629caccffb2004cc809d225027162b5cf716be52302a19a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Too many participants\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ccf18108b555d0ca329a7f70497f7b350006412d6bff44726572cbb47ad64673__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"At least one participant require\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a536cadcf7bd7b5649e578eabe8b70cc270b36bbbf75f188de5a0a505f87821__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Expiry date must be in future\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2225061bca1349a8a3197b2978d1d80f7b352a81d212157dbc629a5dd75e6aed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid participant address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3c1b25d3252708683c9e650e461dd436feb45936e806a6b4abb8704e3ce51c0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Duplicate participant\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_enum$_ParticipantRole_$5974__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_ParticipantRole(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_d6b6647033f03da42f260fb0af824a51252976e16703a583d969c6e3b42e40b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not batch owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e7ee47d2b4d578ad760680b3433f2a95168c27e134ecdb5db2694dac0a8cd6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Batch already delivered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD96D97A5 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD96D97A5 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xE58DD2AA EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xE829B041 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xEE6A6D0E EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xF3BAF070 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x965288B0 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xA5E8F634 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xB838CAFB EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7037B1A7 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x7037B1A7 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x7069FC74 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x7EF1446A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8010C3AE EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x87C71463 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x89EC0B8F EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x504BC3CC EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x19D PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x268F JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x277A JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x29AD JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x27A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x19D PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x347 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x19D PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE SWAP5 ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE SWAP3 ISZERO ISZERO SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x42E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x44F DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x21A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x492 DUP3 DUP3 PUSH2 0x2233 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49F PUSH2 0x229E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x537570706C7920636861696E20766572696669636174696F6E20696E636F6D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6C657465 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995DD85C9908185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x4 ADD SLOAD GT PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1359591A58DA5B9948195E1C1A5C9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0xA DUP2 ADD DUP1 SLOAD CALLER PUSH2 0x100 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0xB DUP4 ADD SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x678 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH2 0x68C SWAP2 POP DUP5 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH8 0xDE0B6B3A7640000 DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xB55C5D24F032FDE07AE43E1C485A5204D17225FC7D79318955976775412338F4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x6DD PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820616C72656164792064656C69766572656420746F20637573746F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x36B2B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564207061727469636970616E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x809 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x85A DUP3 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x868 DUP3 DUP7 PUSH2 0x22C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP8 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA78 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8E7 JUMPI PUSH2 0x8E7 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA66 JUMPI DUP7 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x91B JUMPI PUSH2 0x91B PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481D995C9A599A5959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98D JUMPI PUSH2 0x98D PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CB PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP9 DUP8 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9F6 JUMPI PUSH2 0x9F6 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x9 DUP8 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xA26 DUP4 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP7 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA40 JUMPI PUSH2 0xA40 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 SWAP4 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 POP PUSH2 0xA78 JUMP JUMPDEST DUP1 PUSH2 0xA70 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8BC JUMP JUMPDEST POP DUP2 PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x15995C9A599A58D85D1A5BDB8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH2 0xACC SWAP1 DUP12 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x36007A401BCE1DB31823D520649F66714A8006E1FE3D7E62B17B01E0E7C138CC DUP4 DUP10 PUSH1 0x9 ADD SLOAD DUP11 PUSH1 0x8 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xB0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP6 PUSH1 0x8 ADD SLOAD DUP7 PUSH1 0x9 ADD SLOAD SUB PUSH2 0xB80 JUMPI PUSH1 0xC DUP7 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP1 DUP11 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x65CEF3A6702469117C0B8570219F54EE19F5025D27673B1450617F83C2AD75DE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP PUSH2 0x492 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x2 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xBC6 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF2 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xC54 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC80 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCCD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCCD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCB0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xCE2 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0E SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD30 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x9 DUP8 ADD SLOAD PUSH1 0xA DUP9 ADD SLOAD PUSH1 0xB DUP10 ADD SLOAD PUSH1 0xC SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 PUSH1 0xFF DUP1 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP5 DUP6 SWAP1 DIV AND SWAP4 DUP2 DUP4 AND SWAP3 SWAP2 DIV AND DUP14 JUMP JUMPDEST PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED PUSH2 0xDD8 DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x40 MLOAD PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x426174636820616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP2 MLOAD DUP5 MLOAD EQ PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D69736D617463686564206C6F636174696F6E73 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x14 DUP5 MLOAD GT ISZERO PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x546F6F206D616E79207061727469636970616E7473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD GT PUSH2 0xF74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65207061727469636970616E742072657175697265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E7 JUMP JUMPDEST TIMESTAMP DUP6 GT PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578706972792064617465206D75737420626520696E20667574757265000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP10 PUSH1 0x40 MLOAD PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x1004 DUP11 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x2 DUP2 ADD PUSH2 0x1013 DUP10 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x1022 DUP9 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP7 SWAP1 SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC DUP2 ADD DUP1 SLOAD DUP7 MLOAD PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0x0 PUSH1 0x9 DUP5 ADD DUP2 SWAP1 SSTORE PUSH2 0xFFFF NOT SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x10E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061727469636970616E7420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10F8 JUMPI PUSH2 0x10F8 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1111 PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C696420726F6C65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1165 JUMPI PUSH2 0x1165 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x111D5C1B1A58D85D19481C185C9D1A58DA5C185B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP2 PUSH1 0x6 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1233 JUMPI PUSH2 0x1233 PUSH2 0x2B71 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x125A JUMPI PUSH2 0x125A PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE SWAP3 DUP3 ADD MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x4 SWAP1 SWAP5 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP6 AND DUP2 OR DUP3 SSTORE SWAP2 DUP4 ADD MLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x12DB JUMPI PUSH2 0x12DB PUSH2 0x2B71 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 SLOAD SWAP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x131A SWAP1 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x132F SWAP1 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP3 PUSH1 0x7 ADD PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x134C JUMPI PUSH2 0x134C PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13A1 JUMPI PUSH2 0x13A1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD PUSH2 0x13E0 DUP12 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 MLOAD PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x6B7A69A77940FA31671B50A4966820B5ED7889F9DDE2C78C2BF2D7E00B20C9D0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1462 SWAP2 SWAP1 PUSH2 0x2FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH2 0x1474 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1060 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD PUSH2 0x14A6 DUP11 DUP3 PUSH2 0x2EA2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH2 0x14B7 SWAP1 DUP12 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP9 MLOAD DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xAAED3963D690AD719845C971AF2818FDDEEFA8E32D2EA5BD2391BA5FCC3131F4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x153A SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1566 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1588 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1596 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15F9 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x163A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x16EC JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x167A JUMPI PUSH2 0x167A PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x16DA JUMPI PUSH1 0x1 DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B0 JUMPI PUSH2 0x16B0 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP4 POP SWAP4 POP POP POP PUSH2 0x16F6 JUMP JUMPDEST DUP1 PUSH2 0x16E4 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x164F JUMP JUMPDEST POP PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x174B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1768 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1791 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17AC JUMPI PUSH2 0x17AC PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17F0 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1819 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1834 JUMPI PUSH2 0x1834 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x185D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19F5 JUMPI DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1880 JUMPI PUSH2 0x1880 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x18B1 JUMPI PUSH2 0x18B1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18E6 JUMPI PUSH2 0x18E6 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1917 JUMPI PUSH2 0x1917 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1930 JUMPI PUSH2 0x1930 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1943 PUSH2 0x2B71 JUMP JUMPDEST DUP2 MSTORE POP POP DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x195C JUMPI PUSH2 0x195C PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19B4 JUMPI PUSH2 0x19B4 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19D8 JUMPI PUSH2 0x19D8 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x19ED DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1863 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1A1A DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 DUP4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1AD7 JUMPI DUP3 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A97 JUMPI PUSH2 0x1A97 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AC5 JUMPI DUP2 PUSH2 0x1AC1 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1ACF DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A76 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B19 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B5D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B78 JUMPI PUSH2 0x1B78 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BAB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B96 JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BC6 JUMPI PUSH2 0x1BC6 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BF9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BE4 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1EA5 JUMPI DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C21 JUMPI PUSH2 0x1C21 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E93 JUMPI DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C56 JUMPI PUSH2 0x1C56 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1C87 JUMPI PUSH2 0x1C87 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CBC JUMPI PUSH2 0x1CBC PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CE0 JUMPI PUSH2 0x1CE0 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D01 JUMPI PUSH2 0x1D01 PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1D1D SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D49 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D96 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D96 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D79 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DCD JUMPI PUSH2 0x1DCD PUSH2 0x2E0C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1DE9 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E15 SWAP1 PUSH2 0x2E22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E79 JUMPI PUSH2 0x1E79 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1E8F SWAP1 PUSH2 0x2F61 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1E9D DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C00 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED PUSH2 0x1EF6 DUP2 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1F08 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1F3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E7 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103130BA31B41037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820616C72656164792064656C697665726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x200C JUMPI PUSH2 0x200C PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x210F JUMPI DUP2 PUSH1 0x6 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2040 JUMPI PUSH2 0x2040 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x209B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481D995C9A599A5959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E7 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20B1 JUMPI PUSH2 0x20B1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE DUP8 DUP4 AND DUP3 MSTORE PUSH1 0x7 DUP6 ADD SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP3 DUP8 AND DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2121 JUMP JUMPDEST DUP1 PUSH2 0x2119 DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FE1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2144 SWAP2 SWAP1 PUSH2 0x2D83 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD PUSH1 0xA DUP3 ADD SLOAD PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0x8 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP14 PUSH2 0x100 SWAP5 DUP6 SWAP1 DIV DUP3 AND SWAP14 POP SWAP1 DUP4 AND SWAP12 POP SWAP4 SWAP10 POP SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DIV AND SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6DD DUP2 CALLER PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AD DUP4 DUP4 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x222B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x21E3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x42E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223F DUP4 DUP4 PUSH2 0x15BB JUMP JUMPDEST ISZERO PUSH2 0x222B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x22C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x22D8 DUP7 DUP7 PUSH2 0x232F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x22E8 DUP3 DUP3 PUSH2 0x237C JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x22FC DUP3 DUP3 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x2369 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x235B DUP9 DUP3 DUP6 DUP6 PUSH2 0x2435 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2375 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2390 JUMPI PUSH2 0x2390 PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x2399 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23AD JUMPI PUSH2 0x23AD PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x23CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DF PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x2400 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2414 JUMPI PUSH2 0x2414 PUSH2 0x2B71 JUMP JUMPDEST SUB PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x2470 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24F0 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x24FA JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x252E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x257D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x258D PUSH1 0x20 DUP5 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25D4 PUSH2 0x2596 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x25F5 JUMPI PUSH2 0x25F5 PUSH2 0x2596 JUMP JUMPDEST PUSH2 0x2608 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x25AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x261C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x252E DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x267B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2687 DUP5 DUP3 DUP6 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26C7 DUP8 DUP4 DUP9 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26E9 DUP8 DUP4 DUP9 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2720 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x25DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2745 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2766 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x272A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP2 MSTORE PUSH2 0x1A0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x279F SWAP1 DUP4 ADD DUP16 PUSH2 0x274E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x27B1 DUP2 DUP16 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x27C5 DUP2 DUP15 PUSH2 0x274E JUMP JUMPDEST SWAP2 POP POP DUP11 PUSH1 0x80 DUP4 ADD MSTORE DUP10 PUSH1 0xA0 DUP4 ADD MSTORE DUP9 PUSH1 0xC0 DUP4 ADD MSTORE DUP8 PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x27EF PUSH2 0x100 DUP4 ADD DUP9 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x120 DUP4 ADD MSTORE DUP5 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x2815 PUSH2 0x160 DUP4 ADD DUP6 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP3 ISZERO ISZERO PUSH2 0x180 DUP4 ADD MSTORE SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2849 JUMPI PUSH2 0x2849 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2879 PUSH2 0x2874 DUP4 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x25AC JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28BA JUMPI PUSH2 0x28AD DUP2 PUSH2 0x254E JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x289C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x28E6 PUSH2 0x2874 DUP4 PUSH2 0x2830 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28BA JUMPI DUP1 CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x293F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x294F PUSH2 0x2874 DUP4 PUSH2 0x2830 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x296E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x28BA JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2991 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x299F DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x2633 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x29C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x29DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29EB DUP12 DUP4 DUP13 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0D DUP12 DUP4 DUP13 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2F DUP12 DUP4 DUP13 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A58 DUP12 DUP4 DUP13 ADD PUSH2 0x2853 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A7A DUP12 DUP4 DUP13 ADD PUSH2 0x28C5 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9D DUP11 DUP3 DUP12 ADD PUSH2 0x292E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AC8 DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x252E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x274E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B1E DUP6 DUP3 DUP7 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x258D PUSH1 0x20 DUP5 ADD PUSH2 0x254E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B66 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2B41 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x2BA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B66 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2BEC PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2B2D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD DUP1 DUP4 MSTORE DUP8 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C2A JUMPI PUSH2 0x2C1A DUP4 DUP7 MLOAD PUSH2 0x2B87 JUMP JUMPDEST SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C07 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP8 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C63 JUMPI DUP3 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C45 JUMP JUMPDEST POP POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2C79 DUP2 DUP6 PUSH2 0x2BA9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP4 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2CCC JUMPI DUP3 DUP5 SUB DUP10 MSTORE PUSH2 0x2CBA DUP5 DUP4 MLOAD PUSH2 0x274E JUMP JUMPDEST SWAP9 DUP6 ADD SWAP9 SWAP4 POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2CA2 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2CEC PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2B2D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CFE DUP2 DUP8 PUSH2 0x2BA9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2D12 DUP2 DUP7 PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2C79 DUP2 DUP6 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D5D DUP7 DUP3 DUP8 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2D6C PUSH1 0x20 DUP6 ADD PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7A PUSH1 0x40 DUP6 ADD PUSH2 0x254E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2D95 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x272A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10985D18DA08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x2DDF DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x272A JUMP JUMPDEST PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E36 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E56 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2E83 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E8F JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2EBB JUMPI PUSH2 0x2EBB PUSH2 0x2596 JUMP JUMPDEST PUSH2 0x2ECF DUP2 PUSH2 0x2EC9 DUP5 SLOAD PUSH2 0x2E22 JUMP JUMPDEST DUP5 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F04 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2EEC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F33 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2F14 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F51 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2F81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x2F96 DUP3 DUP7 PUSH2 0x2B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x42E DUP3 DUP5 PUSH2 0x2B87 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CALLDATASIZE SELFDESTRUCT RETURN SWAP2 0xD5 LT 0xD9 DUP9 POP 0x23 0x4F 0x4E 0xEC COINBASE BASEFEE 0xC7 0xC0 STATICCALL CALLDATASIZE PUSH24 0x2762C490003C1FC1B0914264736F6C634300081400330000 ","sourceMap":"513:14011:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;:::i;:::-;;:::i;:::-;;;566:14:14;;559:22;541:41;;529:2;514:18;2541:202:0;;;;;;;;3786:120;;;;;;:::i;:::-;3851:7;3877:12;;;;;;;;;;:22;;;;3786:120;;;;924:25:14;;;912:2;897:18;3786:120:0;778:177:14;4202:136:0;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;:::i;:::-;;:::i;2256:49:13:-;;2298:7;2256:49;;8527:869;;;;;;:::i;:::-;;:::i;6285:2143::-;;;;;;:::i;:::-;;:::i;1992:47::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;3655:2539::-;;;;;;:::i;:::-;;:::i;2046:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2198:27::-;;;;;-1:-1:-1;;;;;2198:27:13;;;;;;-1:-1:-1;;;;;10593:32:14;;;10575:51;;10563:2;10548:18;2198:27:13;10410:222:14;2830:136:0;;;;;;:::i;:::-;;:::i;667:74:13:-;;711:30;667:74;;2196:49:0;;2241:4;2196:49;;12837:634:13;;;;;;:::i;:::-;;:::i;:::-;;;;11225:14:14;;11218:22;11200:41;;11284:14;;11277:22;11272:2;11257:18;;11250:50;11173:18;12837:634:13;11038:268:14;10206:1071:13;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4618:138:0:-;;;;;;:::i;:::-;;:::i;11358:1400:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2108:54::-;;;;;;:::i;:::-;;:::i;748:66::-;;788:26;748:66;;13566:955;;;;;;:::i;:::-;;:::i;9471:650::-;;;;;;:::i;:::-;;:::i;:::-;;;;16461:14:14;;16454:22;16436:41;;16520:14;;16513:22;16508:2;16493:18;;16486:50;16579:14;;16572:22;16552:18;;;16545:50;;;;16626:2;16611:18;;16604:34;16669:3;16654:19;;16647:35;;;;-1:-1:-1;;;;;16719:32:14;16739:3;16698:19;;16691:61;16423:3;16408:19;9471:650:13;16167:591:14;2328:45:13;;2371:2;2328:45;;2541:202:0;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;-1:-1:-1;;;;;;;;;;829:40:8;;;2700:36:0;2642:94;2541:202;-1:-1:-1;;2541:202:0:o;4202:136::-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;-1:-1:-1;;;;;5397:34:0;;735:10:2;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;8527:869:13:-;2500:21:4;:19;:21::i;:::-;8613:27:13::1;8643:7;8651:8;8643:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;8689:12:::1;::::0;::::1;::::0;8643:17;;-1:-1:-1;8689:12:13::1;;8681:45;;;;-1:-1:-1::0;;;8681:45:13::1;;;;;;;:::i;:::-;;;;;;;;;8745:21;::::0;::::1;::::0;::::1;::::0;::::1;;;8737:70;;;::::0;-1:-1:-1;;;8737:70:13;;17608:2:14;8737:70:13::1;::::0;::::1;17590:21:14::0;17647:2;17627:18;;;17620:30;17686:34;17666:18;;;17659:62;-1:-1:-1;;;17737:18:14;;;17730:34;17781:19;;8737:70:13::1;17406:400:14::0;8737:70:13::1;8827:19;::::0;::::1;::::0;::::1;;8826:20;8818:55;;;::::0;-1:-1:-1;;;8818:55:13;;18013:2:14;8818:55:13::1;::::0;::::1;17995:21:14::0;18052:2;18032:18;;;18025:30;-1:-1:-1;;;18071:18:14;;;18064:52;18133:18;;8818:55:13::1;17811:346:14::0;8818:55:13::1;8911:15;8892:5;:16;;;:34;8884:63;;;::::0;-1:-1:-1;;;8884:63:13;;18364:2:14;8884:63:13::1;::::0;::::1;18346:21:14::0;18403:2;18383:18;;;18376:30;-1:-1:-1;;;18422:18:14;;;18415:46;18478:18;;8884:63:13::1;18162:340:14::0;8884:63:13::1;9003:19;::::0;::::1;:26:::0;;9063:10:::1;9003:26;9040:33:::0;::::1;-1:-1:-1::0;;;;;;9040:33:13;;;;;;;9025:4:::1;9040:33:::0;;;;9108:15:::1;9084:21;::::0;::::1;:39:::0;9187:9:::1;::::0;:43:::1;::::0;-1:-1:-1;;;9187:43:13;;::::1;::::0;::::1;18681:51:14::0;;;;2298:7:13::1;18748:18:14::0;;;18741:34;-1:-1:-1;;;;;9187:9:13::1;::::0;:14:::1;::::0;18654:18:14;;9187:43:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9256:132:13::1;::::0;9307:10:::1;::::0;-1:-1:-1;9256:132:13::1;::::0;-1:-1:-1;9284:8:13;;9256:132:::1;:::i;:::-;;::::0;;;;;::::1;::::0;;2298:7:::1;18960:25:14::0;;9362:15:13::1;19016:2:14::0;19001:18;;18994:34;9256:132:13;::::1;::::0;18933:18:14;9256:132:13::1;;;;;;;8602:794;2542:20:4::0;1857:1;3068:21;;2888:208;2542:20;8527:869:13;:::o;6285:2143::-;2500:21:4;:19;:21::i;:::-;6457:27:13::1;6487:7;6495:8;6487:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;6523:12:::1;::::0;::::1;::::0;6487:17;;-1:-1:-1;6523:12:13::1;;6515:45;;;;-1:-1:-1::0;;;6515:45:13::1;;;;;;;:::i;:::-;6580:19;::::0;::::1;::::0;::::1;;6579:20;6571:68;;;::::0;-1:-1:-1;;;6571:68:13;;19241:2:14;6571:68:13::1;::::0;::::1;19223:21:14::0;19280:2;19260:18;;;19253:30;19319:34;19299:18;;;19292:62;-1:-1:-1;;;19370:18:14;;;19363:33;19413:19;;6571:68:13::1;19039:399:14::0;6571:68:13::1;6678:10;6658:31;::::0;;;:19:::1;::::0;::::1;:31;::::0;;;;;::::1;;6650:70;;;::::0;-1:-1:-1;;;6650:70:13;;19645:2:14;6650:70:13::1;::::0;::::1;19627:21:14::0;19684:2;19664:18;;;19657:30;19723:28;19703:18;;;19696:56;19769:18;;6650:70:13::1;19443:350:14::0;6650:70:13::1;6770:19;6833:8;6843:10;6855:15;6816:55;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6792:90;;;;;;6770:112;;6893:28;6924:36;:11;1401:34:7::0;1323:14;1388:48;;;1497:4;1490:25;;;;1595:4;1579:21;;;1247:433;6924:36:13::1;6893:67:::0;-1:-1:-1;6971:14:13::1;6988:40;6893:67:::0;7017:10;6988:28:::1;:40::i;:::-;6971:57:::0;-1:-1:-1;;;;;;7047:20:13;::::1;7057:10;7047:20;7039:50;;;::::0;-1:-1:-1;;;7039:50:13;;20502:2:14;7039:50:13::1;::::0;::::1;20484:21:14::0;20541:2;20521:18;;;20514:30;-1:-1:-1;;;20560:18:14;;;20553:47;20617:18;;7039:50:13::1;20300:341:14::0;7039:50:13::1;7163:13;7195:28:::0;7272:9:::1;7267:630;7291:17;::::0;::::1;:24:::0;7287:28;::::1;7267:630;;;7384:10;-1:-1:-1::0;;;;;7341:53:13::1;:5;:17;;7359:1;7341:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:39:::0;-1:-1:-1;;;;;7341:39:13::1;:53:::0;7337:549:::1;;7424:5;:17;;7442:1;7424:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:32:::0;-1:-1:-1;;;7424:32:13;::::1;;;7423:33;7415:62;;;::::0;-1:-1:-1;;;7415:62:13;;20980:2:14;7415:62:13::1;::::0;::::1;20962:21:14::0;21019:2;20999:18;;;20992:30;-1:-1:-1;;;21038:18:14;;;21031:46;21094:18;;7415:62:13::1;20778:340:14::0;7415:62:13::1;7549:4;7514:5;:17;;7532:1;7514:20;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;7617:15;7572:5;:17;;7590:1;7572:20;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;:60;;;;7680:6;7651:5;:17;;7669:1;7651:20;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;:35;;;;;;:::i;:::-;-1:-1:-1::0;7723:28:13::1;::::0;::::1;:30:::0;;;:28:::1;:30;::::0;::::1;:::i;:::-;;;;;;7787:5;:17;;7805:1;7787:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25:::0;7842:4:::1;::::0;-1:-1:-1;;;;7787:25:13;::::1;;;::::0;-1:-1:-1;7865:5:13::1;;7337:549;7317:3:::0;::::1;::::0;::::1;:::i;:::-;;;;7267:630;;;;7925:8;7917:40;;;::::0;-1:-1:-1;;;7917:40:13;;24151:2:14;7917:40:13::1;::::0;::::1;24133:21:14::0;24190:2;24170:18;;;24163:30;-1:-1:-1;;;24209:18:14;;;24202:49;24268:18;;7917:40:13::1;23949:343:14::0;7917:40:13::1;7983:184;::::0;8034:10:::1;::::0;7983:184:::1;::::0;8011:8;;7983:184:::1;:::i;:::-;;;;;;;;;8059:12;8086:5;:28;;;8129:5;:27;;;7983:184;;;;;;;;:::i;:::-;;;;;;;;8272:5;:27;;;8240:5;:28;;;:59:::0;8236:185:::1;;8316:21;::::0;::::1;:28:::0;;-1:-1:-1;;8316:28:13::1;;;::::0;;8364:45:::1;::::0;::::1;::::0;8383:8;;8364:45:::1;:::i;:::-;;::::0;;;;::::1;::::0;;8393:15:::1;924:25:14::0;;8364:45:13;::::1;::::0;912:2:14;897:18;8364:45:13::1;;;;;;;8236:185;6446:1982;;;;;;2542:20:4::0;1857:1;3068:21;;2888:208;1992:47:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1992:47:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1992:47:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1992:47:13;;-1:-1:-1;1992:47:13;;;;;;-1:-1:-1;;;;;1992:47:13;;;;;;;;;;;;;;;:::o;3655:2539::-;711:30;2473:16:0;2484:4;2473:10;:16::i;:::-;4011:7:13::1;4019:8;4011:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:24:::1;;::::0;::::1;;4010:25;4002:58;;;::::0;-1:-1:-1;;;4002:58:13;;24866:2:14;4002:58:13::1;::::0;::::1;24848:21:14::0;24905:2;24885:18;;;24878:30;-1:-1:-1;;;24924:18:14;;;24917:50;24984:18;;4002:58:13::1;24664:344:14::0;4002:58:13::1;4103:6;:13;4079;:20;:37;4071:67;;;::::0;-1:-1:-1;;;4071:67:13;;25215:2:14;4071:67:13::1;::::0;::::1;25197:21:14::0;25254:2;25234:18;;;25227:30;-1:-1:-1;;;25273:18:14;;;25266:47;25330:18;;4071:67:13::1;25013:341:14::0;4071:67:13::1;4181:10;:17;4157:13;:20;:41;4149:74;;;::::0;-1:-1:-1;;;4149:74:13;;25561:2:14;4149:74:13::1;::::0;::::1;25543:21:14::0;25600:2;25580:18;;;25573:30;-1:-1:-1;;;25619:18:14;;;25612:50;25679:18;;4149:74:13::1;25359:344:14::0;4149:74:13::1;2371:2;4242:13;:20;:40;;4234:74;;;::::0;-1:-1:-1;;;4234:74:13;;25910:2:14;4234:74:13::1;::::0;::::1;25892:21:14::0;25949:2;25929:18;;;25922:30;-1:-1:-1;;;25968:18:14;;;25961:51;26029:18;;4234:74:13::1;25708:345:14::0;4234:74:13::1;4350:1;4327:13;:20;:24;4319:70;;;::::0;-1:-1:-1;;;4319:70:13;;26260:2:14;4319:70:13::1;::::0;::::1;26242:21:14::0;26299:2;26279:18;;;26272:30;26338:34;26318:18;;;26311:62;-1:-1:-1;;;26389:18:14;;;26382:31;26430:19;;4319:70:13::1;26058:397:14::0;4319:70:13::1;4422:15;4408:11;:29;4400:71;;;::::0;-1:-1:-1;;;4400:71:13;;26662:2:14;4400:71:13::1;::::0;::::1;26644:21:14::0;26701:2;26681:18;;;26674:30;26740:31;26720:18;;;26713:59;26789:18;;4400:71:13::1;26460:353:14::0;4400:71:13::1;4521:27;4551:7;4559:8;4551:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;4579:31;;-1:-1:-1;;;;;;4579:31:13::1;4600:10;4579:31;::::0;;4551:17;-1:-1:-1;4579:31:13;4621:13;::::1;:24;4637:8:::0;4621:13;:24:::1;:::i;:::-;-1:-1:-1::0;4656:14:13::1;::::0;::::1;:26;4673:9:::0;4656:14;:26:::1;:::i;:::-;-1:-1:-1::0;4693:17:13::1;::::0;::::1;:32;4713:12:::0;4693:17;:32:::1;:::i;:::-;-1:-1:-1::0;4736:16:13::1;::::0;::::1;:30:::0;;;4798:15:::1;4777:18;::::0;::::1;:36:::0;4824:12:::1;::::0;::::1;:19:::0;;4884:20;;4854:27:::1;::::0;::::1;:50:::0;-1:-1:-1;4915:28:13::1;::::0;::::1;:32:::0;;;-1:-1:-1;;4958:29:13;;;4839:4:::1;4958:29:::0;;;;4998:19:::1;::::0;::::1;:27:::0;;-1:-1:-1;;4998:27:13::1;::::0;;5088:867:::1;5112:13;:20;5108:1;:24;5088:867;;;5190:1;-1:-1:-1::0;;;;;5162:30:13::1;:13;5176:1;5162:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5162:30:13::1;::::0;5154:70:::1;;;::::0;-1:-1:-1;;;5154:70:13;;27020:2:14;5154:70:13::1;::::0;::::1;27002:21:14::0;27059:2;27039:18;;;27032:30;27098:29;27078:18;;;27071:57;27145:18;;5154:70:13::1;26818:351:14::0;5154:70:13::1;5260:20;5247:6;5254:1;5247:9;;;;;;;;:::i;:::-;;;;;;;:33;;;;;;;;:::i;:::-;::::0;5239:58:::1;;;::::0;-1:-1:-1;;;5239:58:13;;27376:2:14;5239:58:13::1;::::0;::::1;27358:21:14::0;27415:2;27395:18;;;27388:30;-1:-1:-1;;;27434:18:14;;;27427:42;27486:18;;5239:58:13::1;27174:336:14::0;5239:58:13::1;5321:5;:19;;:37;5341:13;5355:1;5341:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;5321:37:13::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;5321:37:13;;::::1;;5320:38;5312:72;;;::::0;-1:-1:-1;;;5312:72:13;;27717:2:14;5312:72:13::1;::::0;::::1;27699:21:14::0;27756:2;27736:18;;;27729:30;-1:-1:-1;;;27775:18:14;;;27768:51;27836:18;;5312:72:13::1;27515:345:14::0;5312:72:13::1;5413:5;:17;;5436:278;;;;;;;;5498:13;5512:1;5498:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5436:278:13::1;;;;;5539:6;5546:1;5539:9;;;;;;;;:::i;:::-;;;;;;;5436:278;;;;;;;;:::i;:::-;;;;;5580:5;5436:278;;;;;;5627:1;5436:278;;;;5657:10;5668:1;5657:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;5436:278;;::::1;::::0;;;;::::1;::::0;;;-1:-1:-1;5436:278:13;;;;;::::1;::::0;5413:302;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;5413:302:13;;::::1;-1:-1:-1::0;;;;;;5413:302:13;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;;5413:302:13;;-1:-1:-1;;;5413:302:13;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5413:302:13::1;::::0;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;5413:302:13::1;-1:-1:-1::0;;;;5413:302:13;;::::1;;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;5413:302:13;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5413:302:13::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;5784:4;5744:5;:19;;:37;5764:13;5778:1;5764:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5744:37:13::1;-1:-1:-1::0;;;;;5744:37:13::1;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;5803:18;:36;5822:13;5836:1;5822:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;5803:36:13::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;5803:36:13;;;:51;;::::1;::::0;::::1;::::0;;;;;;;;::::1;;5845:8:::0;5803:51;::::1;:::i;:::-;;5915:13;5929:1;5915:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5888:55:13::1;5905:8;5888:55;;;;;;:::i;:::-;;;;;;;;;5933:6;5940:1;5933:9;;;;;;;;:::i;:::-;;;;;;;5888:55;;;;;;:::i;:::-;;;;;;;;5134:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5088:867;;;-1:-1:-1::0;5995:10:13::1;5975:31;::::0;;;:19:::1;:31;::::0;;;;;;:46;;::::1;::::0;::::1;::::0;;;;;;;::::1;;6012:8:::0;5975:46;::::1;:::i;:::-;-1:-1:-1::0;6047:139:13::1;::::0;6100:10:::1;::::0;6047:139:::1;::::0;6077:8;;6047:139:::1;:::i;:::-;;::::0;;;;;::::1;::::0;;6125:20;;18960:25:14;;6160:15:13::1;19016:2:14::0;19001:18;;18994:34;6047:139:13;::::1;::::0;18933:18:14;6047:139:13::1;;;;;;;3991:2203;3655:2539:::0;;;;;;;;:::o;2046:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2830:136:0:-;2907:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;12837:634:13:-;12960:14;12976:20;13015:27;13045:7;13053:8;13045:17;;;;;;:::i;:::-;;;;;;;;;;;;;;13078:12;;;;13045:17;;-1:-1:-1;13078:12:13;;13077:13;;:51;;-1:-1:-1;;;;;;13095:33:13;;;;;;:19;;;:33;;;;;;;;13094:34;13077:51;13073:105;;;13153:5;13160;13145:21;;;;;;;13073:105;13203:9;13198:224;13222:17;;;:24;13218:28;;13198:224;;;13315:12;-1:-1:-1;;;;;13272:55:13;:5;:17;;13290:1;13272:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;13272:39:13;:55;13268:143;;13356:4;13362:5;:17;;13380:1;13362:20;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;;;;;;;;;;13348:47;;;;;;;;13268:143;13248:3;;;;:::i;:::-;;;;13198:224;;;;13450:5;13457;13442:21;;;;;12837:634;;;;;;:::o;10206:1071::-;10333:29;10377:30;10422:25;10462:27;10518;10548:7;10556:8;10548:17;;;;;;:::i;:::-;;;;;;;;;;;;;;10584:12;;;;10548:17;;-1:-1:-1;10584:12:13;;10576:45;;;;-1:-1:-1;;;10576:45:13;;;;;;;:::i;:::-;10659:17;;;:24;;-1:-1:-1;;;;;10709:21:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10709:21:13;;10694:36;;10771:6;-1:-1:-1;;;;;10749:29:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10749:29:13;;10741:37;;10814:6;-1:-1:-1;;;;;10803:18:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10803:18:13;;10789:32;;10859:6;-1:-1:-1;;;;;10845:21:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10845:21:13;;10832:34;;10892:9;10887:309;10911:6;10907:1;:10;10887:309;;;10957:5;:17;;10975:1;10957:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;10939:15;;-1:-1:-1;;;;;10957:39:13;;;;10939:12;;10952:1;;10939:15;;;;;;:::i;:::-;;;;;;:57;-1:-1:-1;;;;;10939:57:13;;;-1:-1:-1;;;;;10939:57:13;;;;;11022:5;:17;;11040:1;11022:20;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;;;;;;;;;;11011:5;11017:1;11011:8;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;11079:5;:17;;11097:1;11079:20;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;;;;;;;;;;11062:11;11074:1;11062:14;;;;;;;;:::i;:::-;;;;;;:49;;;;;;;;;;;11142:5;:17;;11160:1;11142:20;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;;11126:10;11137:1;11126:13;;;;;;;;:::i;:::-;;;;;;;;;;:58;10919:3;;;;:::i;:::-;;;;10887:309;;;;11216:53;;10206:1071;;;;;:::o;4618:138:0:-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;11358:1400:13:-:0;11478:26;11519:27;11561:25;11601:21;11650:27;11680:7;11688:8;11680:17;;;;;;:::i;:::-;;;;;;;;;;;;;;11716:12;;;;11680:17;;-1:-1:-1;11716:12:13;;11708:45;;;;-1:-1:-1;;;11708:45:13;;;;;;;:::i;:::-;11774:21;11815:9;11810:169;11834:17;;;:24;11830:28;;11810:169;;;11884:5;:17;;11902:1;11884:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;-1:-1:-1;;;11884:32:13;;;;11880:88;;;11937:15;;;;:::i;:::-;;;;11880:88;11860:3;;;;:::i;:::-;;;;11810:169;;;;12025:13;-1:-1:-1;;;;;12011:28:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12011:28:13;;11999:40;;12077:13;-1:-1:-1;;;;;12063:28:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12063:28:13;;12050:41;;12127:13;-1:-1:-1;;;;;12114:27:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12102:39;;12173:13;-1:-1:-1;;;;;12160:27:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12152:35;;12208:13;12241:9;12236:446;12260:17;;;:24;12256:28;;12236:446;;;12310:5;:17;;12328:1;12310:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;-1:-1:-1;;;12310:32:13;;;;12306:365;;;12382:5;:17;;12400:1;12382:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;12363:16;;-1:-1:-1;;;;;12382:39:13;;;;12363:9;;12373:5;;12363:16;;;;;;:::i;:::-;;;;;;:58;-1:-1:-1;;;;;12363:58:13;;;-1:-1:-1;;;;;12363:58:13;;;;;12460:5;:17;;12478:1;12460:20;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;;12440:10;12451:5;12440:17;;;;;;;;:::i;:::-;;;;;;:62;;;;;12540:5;:17;;12558:1;12540:20;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;12521:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;12531:5;12521:16;;;;;;;;:::i;:::-;;;;;;:48;;;;12603:5;:17;;12621:1;12603:20;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;12588:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;12594;12588:12;;;;;;;;:::i;:::-;;;;;;:41;;;;12648:7;;;;;:::i;:::-;;;;12306:365;12286:3;;;;:::i;:::-;;;;12236:446;;;;12702:48;;;11358:1400;;;;;:::o;2108:54::-;;;;;;;;;;;;;;;;;;;;13566:955;711:30;2473:16:0;2484:4;2473:10;:16::i;:::-;13749:27:13::1;13779:7;13787:8;13779:17;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;13815:12:::1;::::0;::::1;::::0;13779:17;;-1:-1:-1;13815:12:13::1;;13807:45;;;;-1:-1:-1::0;;;13807:45:13::1;;;;;;;:::i;:::-;13871:18:::0;;-1:-1:-1;;;;;13871:18:13::1;13893:10;13871:32;13863:60;;;::::0;-1:-1:-1;;;13863:60:13;;28292:2:14;13863:60:13::1;::::0;::::1;28274:21:14::0;28331:2;28311:18;;;28304:30;-1:-1:-1;;;28350:18:14;;;28343:45;28405:18;;13863:60:13::1;28090:339:14::0;13863:60:13::1;13943:19;::::0;::::1;::::0;::::1;;13942:20;13934:56;;;::::0;-1:-1:-1;;;13934:56:13;;28636:2:14;13934:56:13::1;::::0;::::1;28618:21:14::0;28675:2;28655:18;;;28648:30;28714:25;28694:18;;;28687:53;28757:18;;13934:56:13::1;28434:347:14::0;13934:56:13::1;14016:9;14011:503;14035:17;::::0;::::1;:24:::0;14031:28;::::1;14011:503;;;14128:15;-1:-1:-1::0;;;;;14085:58:13::1;:5;:17;;14103:1;14085:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:39:::0;-1:-1:-1;;;;;14085:39:13::1;:58:::0;14081:422:::1;;14173:5;:17;;14191:1;14173:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:32:::0;-1:-1:-1;;;14173:32:13;::::1;;;14172:33;14164:62;;;::::0;-1:-1:-1;;;14164:62:13;;20980:2:14;14164:62:13::1;::::0;::::1;20962:21:14::0;21019:2;20999:18;;;20992:30;-1:-1:-1;;;21038:18:14;;;21031:46;21094:18;;14164:62:13::1;20778:340:14::0;14164:62:13::1;14305:15;14263:5;:17;;14281:1;14263:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:57:::0;;-1:-1:-1;;;;;;14263:57:13::1;-1:-1:-1::0;;;;;14263:57:13;;::::1;;::::0;;14339:36;;::::1;::::0;;:19:::1;::::0;::::1;:36:::0;;;;;;:44;;-1:-1:-1;;14339:44:13;;::::1;::::0;;;14402:36;;::::1;::::0;;;;:43;;;;::::1;-1:-1:-1::0;14402:43:13::1;::::0;;14482:5:::1;;14081:422;14061:3:::0;::::1;::::0;::::1;:::i;:::-;;;;14011:503;;;;13738:783;13566:955:::0;;;;:::o;9471:650::-;9586:11;9612:20;9647:18;9680:30;9725:29;9769:22;9820:27;9850:7;9858:8;9850:17;;;;;;:::i;:::-;;;;;;;;;;;;;;9900:12;;;;9963:19;;;;9997:28;;;;10040:27;;;;;9900:12;;;;;;9927:21;;;;;;;-1:-1:-1;9963:19:13;;;;-1:-1:-1;9997:28:13;;-1:-1:-1;10040:27:13;-1:-1:-1;;;;;;10082:20:13;;;;;-1:-1:-1;9900:12:13;-1:-1:-1;;;9471:650:13:o;3175:103:0:-;3241:30;3252:4;735:10:2;3241::0;:30::i;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:2;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;6708:317;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:2;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;2575:307:4;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:4;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;3714:255:6:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:6;;3714:255;-1:-1:-1;;;;3714:255:6:o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;18699:32:14;;3541:47:0;;;18681:51:14;18748:18;;;18741:34;;;18654:18;;3541:47:0;18507:274:14;3491:108:0;3408:197;;:::o;2129:778:6:-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:6;;2823:1;;-1:-1:-1;2827:35:6;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:6;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:6;;;;;924:25:14;;;897:18;;7634:46:6;778:177:14;7563:243:6;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:6;;;;;924:25:14;;;897:18;;7763:32:6;778:177:14;5203:1551:6;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:6;;-1:-1:-1;6385:30:6;;-1:-1:-1;6417:1:6;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;29292:25:14;;;29365:4;29353:17;;29333:18;;;29326:45;;;;29387:18;;;29380:34;;;29430:18;;;29423:34;;;6541:24:6;;29264:19:14;;6541:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:6;;-1:-1:-1;;6541:24:6;;;-1:-1:-1;;;;;;;6579:20:6;;6575:113;;-1:-1:-1;6631:1:6;;-1:-1:-1;6635:29:6;;-1:-1:-1;6631:1:6;;-1:-1:-1;6615:62:6;;6575:113;6706:6;-1:-1:-1;6714:20:6;;-1:-1:-1;6714:20:6;;-1:-1:-1;5203:1551:6;;;;;;;;;:::o;14:286:14:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:14;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:14:o;593:180::-;652:6;705:2;693:9;684:7;680:23;676:32;673:52;;;721:1;718;711:12;673:52;-1:-1:-1;744:23:14;;593:180;-1:-1:-1;593:180:14:o;960:173::-;1028:20;;-1:-1:-1;;;;;1077:31:14;;1067:42;;1057:70;;1123:1;1120;1113:12;1057:70;960:173;;;:::o;1138:254::-;1206:6;1214;1267:2;1255:9;1246:7;1242:23;1238:32;1235:52;;;1283:1;1280;1273:12;1235:52;1319:9;1306:23;1296:33;;1348:38;1382:2;1371:9;1367:18;1348:38;:::i;:::-;1338:48;;1138:254;;;;;:::o;1579:127::-;1640:10;1635:3;1631:20;1628:1;1621:31;1671:4;1668:1;1661:15;1695:4;1692:1;1685:15;1711:275;1782:2;1776:9;1847:2;1828:13;;-1:-1:-1;;1824:27:14;1812:40;;-1:-1:-1;;;;;1867:34:14;;1903:22;;;1864:62;1861:88;;;1929:18;;:::i;:::-;1965:2;1958:22;1711:275;;-1:-1:-1;1711:275:14:o;1991:407::-;2056:5;-1:-1:-1;;;;;2082:6:14;2079:30;2076:56;;;2112:18;;:::i;:::-;2150:57;2195:2;2174:15;;-1:-1:-1;;2170:29:14;2201:4;2166:40;2150:57;:::i;:::-;2141:66;;2230:6;2223:5;2216:21;2270:3;2261:6;2256:3;2252:16;2249:25;2246:45;;;2287:1;2284;2277:12;2246:45;2336:6;2331:3;2324:4;2317:5;2313:16;2300:43;2390:1;2383:4;2374:6;2367:5;2363:18;2359:29;2352:40;1991:407;;;;;:::o;2403:222::-;2446:5;2499:3;2492:4;2484:6;2480:17;2476:27;2466:55;;2517:1;2514;2507:12;2466:55;2539:80;2615:3;2606:6;2593:20;2586:4;2578:6;2574:17;2539:80;:::i;2630:322::-;2699:6;2752:2;2740:9;2731:7;2727:23;2723:32;2720:52;;;2768:1;2765;2758:12;2720:52;2808:9;2795:23;-1:-1:-1;;;;;2833:6:14;2830:30;2827:50;;;2873:1;2870;2863:12;2827:50;2896;2938:7;2929:6;2918:9;2914:22;2896:50;:::i;:::-;2886:60;2630:322;-1:-1:-1;;;;2630:322:14:o;2957:871::-;3063:6;3071;3079;3132:2;3120:9;3111:7;3107:23;3103:32;3100:52;;;3148:1;3145;3138:12;3100:52;3188:9;3175:23;-1:-1:-1;;;;;3258:2:14;3250:6;3247:14;3244:34;;;3274:1;3271;3264:12;3244:34;3297:50;3339:7;3330:6;3319:9;3315:22;3297:50;:::i;:::-;3287:60;;3400:2;3389:9;3385:18;3372:32;3356:48;;3429:2;3419:8;3416:16;3413:36;;;3445:1;3442;3435:12;3413:36;3468:52;3512:7;3501:8;3490:9;3486:24;3468:52;:::i;:::-;3458:62;;3573:2;3562:9;3558:18;3545:32;3529:48;;3602:2;3592:8;3589:16;3586:36;;;3618:1;3615;3608:12;3586:36;-1:-1:-1;3641:24:14;;3696:4;3688:13;;3684:27;-1:-1:-1;3674:55:14;;3725:1;3722;3715:12;3674:55;3748:74;3814:7;3809:2;3796:16;3791:2;3787;3783:11;3748:74;:::i;:::-;3738:84;;;2957:871;;;;;:::o;3942:250::-;4027:1;4037:113;4051:6;4048:1;4045:13;4037:113;;;4127:11;;;4121:18;4108:11;;;4101:39;4073:2;4066:10;4037:113;;;-1:-1:-1;;4184:1:14;4166:16;;4159:27;3942:250::o;4197:271::-;4239:3;4277:5;4271:12;4304:6;4299:3;4292:19;4320:76;4389:6;4382:4;4377:3;4373:14;4366:4;4359:5;4355:16;4320:76;:::i;:::-;4450:2;4429:15;-1:-1:-1;;4425:29:14;4416:39;;;;4457:4;4412:50;;4197:271;-1:-1:-1;;4197:271:14:o;4473:1320::-;-1:-1:-1;;;;;4983:32:14;;4965:51;;5052:3;5047:2;5032:18;;5025:31;;;-1:-1:-1;;5079:46:14;;5105:19;;5097:6;5079:46;:::i;:::-;5173:9;5165:6;5161:22;5156:2;5145:9;5141:18;5134:50;5207:33;5233:6;5225;5207:33;:::i;:::-;5193:47;;5288:9;5280:6;5276:22;5271:2;5260:9;5256:18;5249:50;5316:33;5342:6;5334;5316:33;:::i;:::-;5308:41;;;5386:6;5380:3;5369:9;5365:19;5358:35;5430:6;5424:3;5413:9;5409:19;5402:35;5474:6;5468:3;5457:9;5453:19;5446:35;5518:6;5512:3;5501:9;5497:19;5490:35;5534:44;5573:3;5562:9;5558:19;5550:6;375:13;368:21;356:34;;305:91;5534:44;-1:-1:-1;;;;;3899:31:14;;5629:3;5614:19;;3887:44;5671:7;5665:3;5654:9;5650:19;5643:36;5688:45;5728:3;5717:9;5713:19;5704:7;375:13;368:21;356:34;;305:91;5688:45;375:13;;368:21;5782:3;5767:19;;356:34;4473:1320;;;;;;;;;;;;;;;;:::o;5798:183::-;5858:4;-1:-1:-1;;;;;5883:6:14;5880:30;5877:56;;;5913:18;;:::i;:::-;-1:-1:-1;5958:1:14;5954:14;5970:4;5950:25;;5798:183::o;5986:668::-;6040:5;6093:3;6086:4;6078:6;6074:17;6070:27;6060:55;;6111:1;6108;6101:12;6060:55;6147:6;6134:20;6173:4;6197:60;6213:43;6253:2;6213:43;:::i;:::-;6197:60;:::i;:::-;6291:15;;;6377:1;6373:10;;;;6361:23;;6357:32;;;6322:12;;;;6401:15;;;6398:35;;;6429:1;6426;6419:12;6398:35;6465:2;6457:6;6453:15;6477:148;6493:6;6488:3;6485:15;6477:148;;;6559:23;6578:3;6559:23;:::i;:::-;6547:36;;6603:12;;;;6510;;6477:148;;;-1:-1:-1;6643:5:14;5986:668;-1:-1:-1;;;;;;5986:668:14:o;6659:829::-;6726:5;6779:3;6772:4;6764:6;6760:17;6756:27;6746:55;;6797:1;6794;6787:12;6746:55;6833:6;6820:20;6859:4;6883:60;6899:43;6939:2;6899:43;:::i;6883:60::-;6977:15;;;7063:1;7059:10;;;;7047:23;;7043:32;;;7008:12;;;;7087:15;;;7084:35;;;7115:1;7112;7105:12;7084:35;7151:2;7143:6;7139:15;7163:296;7179:6;7174:3;7171:15;7163:296;;;7259:3;7246:17;7296:1;7289:5;7286:12;7276:110;;7340:1;7369:2;7365;7358:14;7276:110;7399:18;;7437:12;;;;7196;;7163:296;;7493:888;7546:5;7599:3;7592:4;7584:6;7580:17;7576:27;7566:55;;7617:1;7614;7607:12;7566:55;7653:6;7640:20;7679:4;7703:60;7719:43;7759:2;7719:43;:::i;7703:60::-;7797:15;;;7883:1;7879:10;;;;7867:23;;7863:32;;;7828:12;;;;7907:15;;;7904:35;;;7935:1;7932;7925:12;7904:35;7971:2;7963:6;7959:15;7983:369;7999:6;7994:3;7991:15;7983:369;;;8085:3;8072:17;-1:-1:-1;;;;;8108:11:14;8105:35;8102:125;;;8181:1;8210:2;8206;8199:14;8102:125;8252:57;8305:3;8300:2;8286:11;8278:6;8274:24;8270:33;8252:57;:::i;:::-;8240:70;;-1:-1:-1;8330:12:14;;;;8016;;7983:369;;8386:1535;8634:6;8642;8650;8658;8666;8674;8682;8735:3;8723:9;8714:7;8710:23;8706:33;8703:53;;;8752:1;8749;8742:12;8703:53;8792:9;8779:23;-1:-1:-1;;;;;8862:2:14;8854:6;8851:14;8848:34;;;8878:1;8875;8868:12;8848:34;8901:50;8943:7;8934:6;8923:9;8919:22;8901:50;:::i;:::-;8891:60;;9004:2;8993:9;8989:18;8976:32;8960:48;;9033:2;9023:8;9020:16;9017:36;;;9049:1;9046;9039:12;9017:36;9072:52;9116:7;9105:8;9094:9;9090:24;9072:52;:::i;:::-;9062:62;;9177:2;9166:9;9162:18;9149:32;9133:48;;9206:2;9196:8;9193:16;9190:36;;;9222:1;9219;9212:12;9190:36;9245:52;9289:7;9278:8;9267:9;9263:24;9245:52;:::i;:::-;9235:62;;9344:2;9333:9;9329:18;9316:32;9306:42;;9401:3;9390:9;9386:19;9373:33;9357:49;;9431:2;9421:8;9418:16;9415:36;;;9447:1;9444;9437:12;9415:36;9470:63;9525:7;9514:8;9503:9;9499:24;9470:63;:::i;:::-;9460:73;;9586:3;9575:9;9571:19;9558:33;9542:49;;9616:2;9606:8;9603:16;9600:36;;;9632:1;9629;9622:12;9600:36;9655:76;9723:7;9712:8;9701:9;9697:24;9655:76;:::i;:::-;9645:86;;9784:3;9773:9;9769:19;9756:33;9740:49;;9814:2;9804:8;9801:16;9798:36;;;9830:1;9827;9820:12;9798:36;;9853:62;9907:7;9896:8;9885:9;9881:24;9853:62;:::i;:::-;9843:72;;;8386:1535;;;;;;;;;;:::o;9926:254::-;9994:6;10002;10055:2;10043:9;10034:7;10030:23;10026:32;10023:52;;;10071:1;10068;10061:12;10023:52;10094:29;10113:9;10094:29;:::i;:::-;10084:39;10170:2;10155:18;;;;10142:32;;-1:-1:-1;;;9926:254:14:o;10185:220::-;10334:2;10323:9;10316:21;10297:4;10354:45;10395:2;10384:9;10380:18;10372:6;10354:45;:::i;10637:396::-;10715:6;10723;10776:2;10764:9;10755:7;10751:23;10747:32;10744:52;;;10792:1;10789;10782:12;10744:52;10832:9;10819:23;-1:-1:-1;;;;;10857:6:14;10854:30;10851:50;;;10897:1;10894;10887:12;10851:50;10920;10962:7;10953:6;10942:9;10938:22;10920:50;:::i;:::-;10910:60;;;10989:38;11023:2;11012:9;11008:18;10989:38;:::i;11311:461::-;11364:3;11402:5;11396:12;11429:6;11424:3;11417:19;11455:4;11484:2;11479:3;11475:12;11468:19;;11521:2;11514:5;11510:14;11542:1;11552:195;11566:6;11563:1;11560:13;11552:195;;;11631:13;;-1:-1:-1;;;;;11627:39:14;11615:52;;11687:12;;;;11722:15;;;;11663:1;11581:9;11552:195;;;-1:-1:-1;11763:3:14;;11311:461;-1:-1:-1;;;;;11311:461:14:o;11777:127::-;11838:10;11833:3;11829:20;11826:1;11819:31;11869:4;11866:1;11859:15;11893:4;11890:1;11883:15;11909:243;11996:1;11989:5;11986:12;11976:143;;12041:10;12036:3;12032:20;12029:1;12022:31;12076:4;12073:1;12066:15;12104:4;12101:1;12094:15;11976:143;12128:18;;11909:243::o;12157:435::-;12210:3;12248:5;12242:12;12275:6;12270:3;12263:19;12301:4;12330:2;12325:3;12321:12;12314:19;;12367:2;12360:5;12356:14;12388:1;12398:169;12412:6;12409:1;12406:13;12398:169;;;12473:13;;12461:26;;12507:12;;;;12542:15;;;;12434:1;12427:9;12398:169;;12597:1551;13022:3;13011:9;13004:22;12985:4;13049:57;13101:3;13090:9;13086:19;13078:6;13049:57;:::i;:::-;13163:22;;;13125:2;13143:18;;;13136:50;;;;13235:13;;13257:22;;;13333:15;;;;13295;;;13366:1;13376:194;13390:6;13387:1;13384:13;13376:194;;;13439:51;13486:3;13477:6;13471:13;13439:51;:::i;:::-;13545:15;;;;13510:12;;;;13412:1;13405:9;13376:194;;;-1:-1:-1;;13606:19:14;;;13601:2;13586:18;;13579:47;13676:13;;13698:21;;;13737:12;;;;-1:-1:-1;13774:15:14;;;;13809:1;13819:205;13835:8;13830:3;13827:17;13819:205;;;13918:15;;13911:23;13904:31;13890:46;;13958:14;;;;13997:17;;;;13863:1;13854:11;13819:205;;;13823:3;;;;14071:9;14064:5;14060:21;14055:2;14044:9;14040:18;14033:49;14099:43;14136:5;14128:6;14099:43;:::i;:::-;14091:51;12597:1551;-1:-1:-1;;;;;;;12597:1551:14:o;14153:616::-;14205:3;14243:5;14237:12;14270:6;14265:3;14258:19;14296:4;14337:2;14332:3;14328:12;14362:11;14389;14382:18;;14439:6;14436:1;14432:14;14425:5;14421:26;14409:38;;14481:2;14474:5;14470:14;14502:1;14512:231;14526:6;14523:1;14520:13;14512:231;;;14597:5;14591:4;14587:16;14582:3;14575:29;14625:38;14658:4;14649:6;14643:13;14625:38;:::i;:::-;14721:12;;;;14617:46;-1:-1:-1;14686:15:14;;;;14548:1;14541:9;14512:231;;;-1:-1:-1;14759:4:14;;14153:616;-1:-1:-1;;;;;;;14153:616:14:o;14774:913::-;15227:3;15216:9;15209:22;15190:4;15254:57;15306:3;15295:9;15291:19;15283:6;15254:57;:::i;:::-;15359:9;15351:6;15347:22;15342:2;15331:9;15327:18;15320:50;15393:44;15430:6;15422;15393:44;:::i;:::-;15379:58;;15485:9;15477:6;15473:22;15468:2;15457:9;15453:18;15446:50;15519:43;15555:6;15547;15519:43;:::i;:::-;15505:57;;15610:9;15602:6;15598:22;15593:2;15582:9;15578:18;15571:50;15638:43;15674:6;15666;15638:43;:::i;15692:470::-;15779:6;15787;15795;15848:2;15836:9;15827:7;15823:23;15819:32;15816:52;;;15864:1;15861;15854:12;15816:52;15904:9;15891:23;-1:-1:-1;;;;;15929:6:14;15926:30;15923:50;;;15969:1;15966;15959:12;15923:50;15992;16034:7;16025:6;16014:9;16010:22;15992:50;:::i;:::-;15982:60;;;16061:38;16095:2;16084:9;16080:18;16061:38;:::i;:::-;16051:48;;16118:38;16152:2;16141:9;16137:18;16118:38;:::i;:::-;16108:48;;15692:470;;;;;:::o;16763:289::-;16894:3;16932:6;16926:13;16948:66;17007:6;17002:3;16995:4;16987:6;16983:17;16948:66;:::i;:::-;17030:16;;;;;16763:289;-1:-1:-1;;16763:289:14:o;17057:344::-;17259:2;17241:21;;;17298:2;17278:18;;;17271:30;-1:-1:-1;;;17332:2:14;17317:18;;17310:50;17392:2;17377:18;;17057:344::o;19798:497::-;19985:3;20023:6;20017:13;20039:66;20098:6;20093:3;20086:4;20078:6;20074:17;20039:66;:::i;:::-;20174:2;20170:15;;;;-1:-1:-1;;20166:53:14;20127:16;;;;20152:68;;;20247:2;20236:14;;20229:30;;;;20286:2;20275:14;;19798:497;-1:-1:-1;;19798:497:14:o;20646:127::-;20707:10;20702:3;20698:20;20695:1;20688:31;20738:4;20735:1;20728:15;20762:4;20759:1;20752:15;21123:380;21202:1;21198:12;;;;21245;;;21266:61;;21320:4;21312:6;21308:17;21298:27;;21266:61;21373:2;21365:6;21362:14;21342:18;21339:38;21336:161;;21419:10;21414:3;21410:20;21407:1;21400:31;21454:4;21451:1;21444:15;21482:4;21479:1;21472:15;21336:161;;21123:380;;;:::o;21634:545::-;21736:2;21731:3;21728:11;21725:448;;;21772:1;21797:5;21793:2;21786:17;21842:4;21838:2;21828:19;21912:2;21900:10;21896:19;21893:1;21889:27;21883:4;21879:38;21948:4;21936:10;21933:20;21930:47;;;-1:-1:-1;21971:4:14;21930:47;22026:2;22021:3;22017:12;22014:1;22010:20;22004:4;22000:31;21990:41;;22081:82;22099:2;22092:5;22089:13;22081:82;;;22144:17;;;22125:1;22114:13;22081:82;;22355:1352;22481:3;22475:10;-1:-1:-1;;;;;22500:6:14;22497:30;22494:56;;;22530:18;;:::i;:::-;22559:97;22649:6;22609:38;22641:4;22635:11;22609:38;:::i;:::-;22603:4;22559:97;:::i;:::-;22711:4;;22775:2;22764:14;;22792:1;22787:663;;;;23494:1;23511:6;23508:89;;;-1:-1:-1;23563:19:14;;;23557:26;23508:89;-1:-1:-1;;22312:1:14;22308:11;;;22304:24;22300:29;22290:40;22336:1;22332:11;;;22287:57;23610:81;;22757:944;;22787:663;21581:1;21574:14;;;21618:4;21605:18;;-1:-1:-1;;22823:20:14;;;22941:236;22955:7;22952:1;22949:14;22941:236;;;23044:19;;;23038:26;23023:42;;23136:27;;;;23104:1;23092:14;;;;22971:19;;22941:236;;;22945:3;23205:6;23196:7;23193:19;23190:201;;;23266:19;;;23260:26;-1:-1:-1;;23349:1:14;23345:14;;;23361:3;23341:24;23337:37;23333:42;23318:58;23303:74;;23190:201;-1:-1:-1;;;;;23437:1:14;23421:14;;;23417:22;23404:36;;-1:-1:-1;22355:1352:14:o;23712:232::-;23751:3;23772:17;;;23769:140;;23831:10;23826:3;23822:20;23819:1;23812:31;23866:4;23863:1;23856:15;23894:4;23891:1;23884:15;23769:140;-1:-1:-1;23936:1:14;23925:13;;23712:232::o;24297:362::-;24505:2;24490:18;;24517:50;24494:9;24549:6;24517:50;:::i;:::-;24598:2;24583:18;;24576:34;;;;24641:2;24626:18;24619:34;24297:362;;-1:-1:-1;24297:362:14:o;27865:220::-;28017:2;28002:18;;28029:50;28006:9;28061:6;28029:50;:::i"},"methodIdentifiers":{"CUSTOMER_REWARD()":"504bc3cc","DEFAULT_ADMIN_ROLE()":"a217fddf","MANUFACTURER_ROLE()":"965288b0","MAX_PARTICIPANTS()":"f3baf070","VERIFIER_ROLE()":"e7705db6","batches(string)":"7ef1446a","canVerifyBatch(string,address)":"a5e8f634","claimCustomerReward(string)":"7037b1a7","getBatchStatus(string)":"ee6a6d0e","getRoleAdmin(bytes32)":"248a9ca3","getSupplyChainParticipants(string)":"b838cafb","getVerificationHistory(string)":"d96d97a5","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","manufacturerBatches(address,uint256)":"87c71463","mediToken()":"89ec0b8f","participantBatches(address,uint256)":"e58dd2aa","registerBatchWithSupplyChain(string,string,string,uint256,address[],uint8[],string[])":"8010c3ae","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","updateParticipant(string,address,address)":"e829b041","verifyBatchAsParticipant(string,string,bytes)":"7069fc74"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mediToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BatchFullyVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BatchRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MedicineRegistry.ParticipantRole\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"verificationNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRequired\",\"type\":\"uint256\"}],\"name\":\"BatchVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MedicineRegistry.ParticipantRole\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"ParticipantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attemptedVerifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VerificationFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CUSTOMER_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANUFACTURER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PARTICIPANTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"batches\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"batchId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"drugName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ingredients\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredVerifications\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"completedVerifications\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"rewardClaimed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"rewardClaimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardClaimedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFullyVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"canVerifyBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canVerify\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"alreadyVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"}],\"name\":\"claimCustomerReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"}],\"name\":\"getBatchStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFullyVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"rewardClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"completedVerifications\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredVerifications\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardClaimant\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"}],\"name\":\"getSupplyChainParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"enum MedicineRegistry.ParticipantRole[]\",\"name\":\"roles\",\"type\":\"uint8[]\"},{\"internalType\":\"bool[]\",\"name\":\"hasVerified\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"}],\"name\":\"getVerificationHistory\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"verifiers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"locations\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"notes\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"manufacturerBatches\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediToken\",\"outputs\":[{\"internalType\":\"contract IMediToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participantBatches\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_drugName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ingredients\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_participants\",\"type\":\"address[]\"},{\"internalType\":\"enum MedicineRegistry.ParticipantRole[]\",\"name\":\"_roles\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"_locations\",\"type\":\"string[]\"}],\"name\":\"registerBatchWithSupplyChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_oldParticipant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newParticipant\",\"type\":\"address\"}],\"name\":\"updateParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_notes\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verifyBatchAsParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced registry with complete supply chain tracking\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"canVerifyBatch(string,address)\":{\"details\":\"Check if address can verify a batch\"},\"claimCustomerReward(string)\":{\"details\":\"Customer claims reward after all verifications complete\"},\"getBatchStatus(string)\":{\"details\":\"Check batch verification status\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSupplyChainParticipants(string)\":{\"details\":\"Get supply chain participants for a batch\"},\"getVerificationHistory(string)\":{\"details\":\"Get verification history with details\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"registerBatchWithSupplyChain(string,string,string,uint256,address[],uint8[],string[])\":{\"details\":\"Register a new medicine batch with supply chain participants\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"updateParticipant(string,address,address)\":{\"details\":\"Emergency: Allow manufacturer to update participant\"},\"verifyBatchAsParticipant(string,string,bytes)\":{\"details\":\"Supply chain participant verifies batch receipt\"}},\"title\":\"MedicineRegistry V2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedicineRegistry.sol\":\"MedicineRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MedicineRegistry.sol\":{\"keccak256\":\"0x122dc82bdadd3a976313187dacdda0c5677ef728d03ba116a588deab7a93a704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ff92b5968a8a19cc23663bec35eac86d2d530d552da6c5442007d956bc2a39\",\"dweb:/ipfs/QmPqke62WbgPjiejjcG6pPHG9d7du67MnbJcwXghqn53rT\"]}},\"version\":1}"}}}}}